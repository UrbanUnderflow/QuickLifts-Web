"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[586],{3530:function(e,t,r){r.d(t,{Ax:function(){return c},cd:function(){return l},lg:function(){return d},mn:function(){return s}});var i,s,a=r(4454),o=r(1316);(i=s||(s={})).Biceps="biceps",i.Triceps="triceps",i.Chest="chest",i.Calves="calves",i.Abs="abs",i.Hamstrings="hamstrings",i.Back="back",i.Glutes="glutes",i.Quadriceps="quadriceps",i.Forearms="forearms",i.Shoulders="shoulders",i.Lowerback="lowerback",i.Lats="lats",i.Traps="traps",i.Rhomboids="rhomboids",i.Deltoids="deltoids",i.Fullbody="fullbody";class d{constructor(e){this.id=e.id||"",this.workoutId=e.workoutId||"",this.userId=e.userId||"",this.exercise=l.fromFirebase(e.exercise||{}),this.logs=(e.logs||[]).map(e=>a.c_.fromFirebase(e)),this.feedback=e.feedback||"",this.note=e.note||"",this.recommendedWeight=e.recommendedWeight,this.isSplit=e.isSplit||!1,this.isBodyWeight=e.isBodyWeight||!1,this.logSubmitted=e.logSubmitted||!1,this.logIsEditing=e.logIsEditing||!1,this.isCompleted=e.isCompleted||!1,this.order=e.order,this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date}static fromFirebase(e){return new d({id:e.id||"",workoutId:e.workoutId||"",userId:e.userId||"",exercise:e.exercise||{},logs:e.logs||[],feedback:e.feedback||"",note:e.note||"",recommendedWeight:e.recommendedWeight,isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,logSubmitted:e.logSubmitted||!1,logIsEditing:e.logIsEditing||!1,isCompleted:e.isCompleted||!1,order:e.order,createdAt:e.createdAt,updatedAt:e.updatedAt})}}let n={weightTraining:e=>({type:"weightTraining",details:e}),cardio:e=>({type:"cardio",details:e}),fromIdentifier:e=>{switch(e){case"weight-training":return n.weightTraining({reps:"12",sets:3,weight:0,screenTime:0,selectedVideo:void 0});case"cardio":return n.cardio({duration:20,bpm:125,calories:0,screenTime:0,selectedVideo:void 0});default:return null}},identifier:e=>{switch(e.type){case"weightTraining":return"weight-training";case"cardio":return"cardio"}}};class l{constructor(e){this.id=e.id||"",this.name=e.name||"",this.description=e.description||"",this.primaryBodyParts=e.primaryBodyParts||[],this.secondaryBodyParts=e.secondaryBodyParts||[],this.tags=e.tags||[],this.videos=(e.videos||[]).map(e=>c.fromFirebase(e)),this.steps=e.steps||[],this.visibility=e.visibility||"live",this.currentVideoPosition=e.currentVideoPosition||0,this.sets=e.sets||0,this.reps=e.reps||"",this.weight=e.weight||0,this.author=u.fromFirebase(e.author||{}),this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date;let t=e.category||{};switch(t.id){case"weight-training":this.category=n.weightTraining({reps:t.reps||"12",sets:t.sets||3,weight:t.weight||0,screenTime:t.screenTime||0,selectedVideo:t.selectedVideo?c.fromFirebase(t.selectedVideo):void 0});break;case"cardio":this.category=n.cardio({duration:t.duration||0,bpm:t.bpm||0,calories:t.calories||0,screenTime:t.screenTime||0,selectedVideo:t.selectedVideo?c.fromFirebase(t.selectedVideo):void 0});break;default:this.category=n.weightTraining({reps:"12",sets:3,weight:0,screenTime:0})}}static fromFirebase(e){return new l({id:e.id||"",name:e.name||"",description:e.description||"",category:e.category||{},primaryBodyParts:e.primaryBodyParts||[],secondaryBodyParts:e.secondaryBodyParts||[],tags:e.tags||[],videos:e.videos||[],steps:e.steps||[],visibility:e.visibility||[],currentVideoPosition:e.currentVideoPosition||0,sets:e.sets||0,reps:e.reps||"",weight:e.weight||0,author:e.author||{},createdAt:e.createdAt,updatedAt:e.updatedAt})}}class c{constructor(e){this.id=e.id||"",this.exerciseId=e.exerciseId||"",this.username=e.username||"",this.userId=e.userId||"",this.videoURL=e.videoURL||"",this.fileName=e.fileName||"",this.exercise=e.exercise||"",this.profileImage=o.m1.fromFirebase(e.profileImage||{}),this.caption=e.caption,this.gifURL=e.gifURL,this.thumbnail=e.thumbnail,this.visibility=e.visibility||"private",this.totalAccountsReached=e.totalAccountsReached||0,this.totalAccountLikes=e.totalAccountLikes||0,this.totalAccountBookmarked=e.totalAccountBookmarked||0,this.totalAccountUsage=e.totalAccountUsage||0,this.isApproved=e.isApproved||!1,this.liked=e.liked||!1,this.bookmarked=e.bookmarked||!1,this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date}static fromFirebase(e){return new c({id:e.id||"",exerciseId:e.exerciseId||"",username:e.username||"",userId:e.userId||"",videoURL:e.videoURL||"",fileName:e.fileName||"",exercise:e.exercise||"",profileImage:e.profileImage||{},caption:e.caption,gifURL:e.gifURL,thumbnail:e.thumbnail,visibility:e.visibility||"private",totalAccountsReached:e.totalAccountsReached||0,totalAccountLikes:e.totalAccountLikes||0,totalAccountBookmarked:e.totalAccountBookmarked||0,totalAccountUsage:e.totalAccountUsage||0,isApproved:e.isApproved||!1,liked:e.liked||!1,bookmarked:e.bookmarked||!1,createdAt:e.createdAt,updatedAt:e.updatedAt})}}class u{static fromFirebase(e){return{userId:e.userId||"",username:e.username||""}}}},9586:function(e,t,r){r.d(t,{G:function(){return p}});var i=r(109),s=r(7333),a=r(7705),o=r(3530),d=r(4454),n=r(2066);let l=e=>e?e._seconds?new Date(1e3*e._seconds).toISOString():e.seconds?new Date(1e3*e.seconds).toISOString():e.toDate&&"function"==typeof e.toDate?e.toDate().toISOString():e instanceof Date?e.toISOString():null:null,c=()=>Date.now()/1e3;var u=r(2778);class h{get currentWorkout(){return this._currentWorkout}set currentWorkout(e){this._currentWorkout=e}get currentWorkoutLogs(){return this._currentWorkoutLogs}set currentWorkoutLogs(e){this._currentWorkoutLogs=e}async fetchCurrentWorkout(e){return(await this.fetchCurrentWorkoutSession(e)).workout}async getAllSweatlists(e){if(!e)throw Error("User ID is required");let t=(0,i.hJ)(s.db,"users",e,"MyCreatedWorkouts");try{let r=await this.fetchAndMapExercisesWithVideos(),a=await (0,i.PL)(t),o=[];for(let t of a.docs){let a=t.data(),n=t.id,l=(a.exercises||[]).map(e=>{let t=r.find(t=>t.name===e.exercise.name);return console.log("This is the mapped exercise: "+t),{...e,exercise:t||e}}),c=new d.oQ({id:a.id||"",roundWorkoutId:a.roundWorkoutId||"",collectionId:a.collectionId,exercises:l,challenge:a.challenge,logs:[],title:a.title||"",description:a.description||"",duration:a.duration||0,workoutRating:a.workoutRating,useAuthorContent:a.useAuthorContent||!1,isCompleted:a.isCompleted||!1,workoutStatus:a.workoutStatus||"notStarted",startTime:a.startTime?new Date(a.startTime):void 0,order:a.order,author:a.author||e,createdAt:a.createdAt?new Date(a.createdAt):new Date,updatedAt:a.updatedAt?new Date(a.updatedAt):new Date,zone:a.zone||"FULL_BODY"}),u=(0,i.hJ)(s.db,"users",e,"MyCreatedWorkouts",n,"logs"),h=await (0,i.PL)(u);c.logs=h.docs.map(e=>({...e.data(),id:e.id})),o.push(c)}return o}catch(e){throw console.error("Error fetching sweatlists:",e.message),Error("Failed to fetch sweatlists")}}async fetchWorkoutSummaries(e){let t=a.W4.currentUser;if(!t?.id)throw Error("No user is signed in");let r=(0,n.WU)(e,"MM-dd-yyyy"),o=(0,i.hJ)(s.db,"users",t.id,"workoutSummaries"),d=(0,i.IO)(o,(0,i.ar)("date","==",r));try{return(await (0,i.PL)(d)).docs.map(e=>({id:e.id,...e.data()}))}catch(e){throw console.error("Error fetching workout summaries:",e.message),Error(e.message)}}async fetchAllWorkoutSummaries(){let e=a.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,i.hJ)(s.db,"users",e.id,"workoutSummary"),r=(0,i.IO)(t,(0,i.Xo)("createdAt","asc"));try{return(await (0,i.PL)(r)).docs.map(e=>({id:e.id,...e.data()}))}catch(e){throw console.error("Error fetching all workout summaries:",e.message),Error(e.message)}}async fetchUserChallengesByUserId(e){let t=(0,i.hJ)(s.db,"user-challenge"),r=(0,i.IO)(t,(0,i.ar)("userId","==",e));try{return(await (0,i.PL)(r)).docs.map(e=>{let t=e.data();return{id:e.id,...t,challenge:t.challenge?new d.tv({id:t.challenge.id,title:t.challenge.title,subtitle:t.challenge.subtitle,participants:t.challenge.participants||[],status:t.challenge.status,startDate:t.challenge.startDate?new Date(t.challenge.startDate):new Date,endDate:t.challenge.endDate?new Date(t.challenge.endDate):new Date,createdAt:t.challenge.createdAt?new Date(t.challenge.createdAt):new Date,updatedAt:t.challenge.updatedAt?new Date(t.challenge.updatedAt):new Date,introVideos:(t.challenge.introVideos||[]).map(e=>new d.L$({id:e.id,userId:e.userId,videoUrl:e.videoUrl})),referralChains:t.challenge.referralChains||[]}):void 0,createdAt:l(t.createdAt),updatedAt:l(t.updatedAt)}})}catch(e){throw console.error("Error fetching user challenges by userId:",e),e}}async fetchCollectionWithSweatLists(e){try{let t=await this.getCollectionById(e),r=[];for(let e of t.sweatlistIds||[])try{let[t]=await this.fetchSavedWorkout(e.sweatlistAuthorId,e.id);t&&r.push(t)}catch(t){console.error(`Error fetching workout ${e.id}:`,t)}return{collection:t,sweatLists:r}}catch(e){throw console.error("Error fetching collection with sweat lists:",e),e}}parseWorkoutData(e){return new d.oQ({id:e.id||"",roundWorkoutId:e.roundWorkoutId||"",collectionId:e.collectionId||[],exercises:e.exercises||[],challenge:e.challenge?new d.tv({id:e.challenge.id,title:e.challenge.title,subtitle:e.challenge.subtitle,participants:e.challenge.participants||[],status:e.challenge.status,startDate:e.challenge.startDate instanceof Date?e.challenge.startDate:e.challenge.startDate?new Date(e.challenge.startDate):new Date,endDate:e.challenge.endDate instanceof Date?e.challenge.endDate:e.challenge.endDate?new Date(e.challenge.endDate):new Date,createdAt:e.challenge.createdAt instanceof Date?e.challenge.createdAt:e.challenge.createdAt?new Date(e.challenge.createdAt):new Date,updatedAt:e.challenge.updatedAt instanceof Date?e.challenge.updatedAt:e.challenge.updatedAt?new Date(e.challenge.updatedAt):new Date,introVideos:(e.challenge.introVideos||[]).map(e=>new d.L$({id:e.id,userId:e.userId,videoUrl:e.videoUrl})),referralChains:e.challenge.referralChains||[]}):void 0,logs:e.logs||[],title:e.title||"",description:e.description||"",duration:e.duration||0,workoutRating:e.workoutRating,useAuthorContent:e.useAuthorContent||!1,isCompleted:e.isCompleted||!1,workoutStatus:e.workoutStatus||d.Z0.QueuedUp,startTime:e.startTime instanceof Date?e.startTime:e.startTime?new Date(e.startTime):void 0,order:e.order||0,author:e.author||"",createdAt:e.createdAt instanceof Date?e.createdAt:"function"==typeof e.createdAt?.toDate?e.createdAt.toDate():e.createdAt?new Date(e.createdAt):new Date,updatedAt:e.updatedAt instanceof Date?e.updatedAt:"function"==typeof e.updatedAt?.toDate?e.updatedAt.toDate():e.updatedAt?new Date(e.updatedAt):new Date,zone:e.zone||d.Bc.FullBody,estimatedDuration:()=>e.duration||0,determineWorkoutZone:()=>e.zone||d.Bc.FullBody,toDictionary:()=>({})})}createDefaultExercise(){return{id:"",name:"",category:{type:"weightTraining",details:{reps:"",sets:0,weight:0,screenTime:0,selectedVideo:this.parseExerciseVideo({})}},primaryBodyParts:[],secondaryBodyParts:[],tags:[],description:"",visibility:"live",steps:[],videos:[],currentVideoPosition:0,reps:"",sets:0,weight:0,author:{userId:"",username:""},createdAt:new Date,updatedAt:new Date}}parseExerciseLogData(e){return{id:e.id||"",workoutId:e.workoutId||"",userId:e.userId||"",exercise:e.exercise?this.parseExercise(e.exercise):this.createDefaultExercise(),logs:(e.log||[]).map(e=>({reps:parseInt(e.reps||"0"),weight:parseFloat(e.weight||"0"),leftReps:parseInt(e.leftReps||"0"),leftWeight:parseFloat(e.leftWeight||"0"),isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,isCompleted:e.isCompleted||!1,duration:parseInt(e.duration||"0"),calories:parseInt(e.calories||"0"),bpm:parseInt(e.bpm||"0")})),feedback:e.feedback||"",note:e.note||"",recommendedWeight:e.recommendedWeight,isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,logSubmitted:e.logSubmitted||!1,logIsEditing:e.logIsEditing||!1,isCompleted:e.isCompleted||!1,createdAt:e.createdAt instanceof Date?e.createdAt:"function"==typeof e.createdAt?.toDate?e.createdAt.toDate():e.createdAt?new Date(e.createdAt):new Date,updatedAt:e.updatedAt instanceof Date?e.updatedAt:"function"==typeof e.updatedAt?.toDate?e.updatedAt.toDate():e.updatedAt?new Date(e.updatedAt):new Date}}parseExercise(e){return{id:e.id?.stringValue||e.id||"",name:e.name?.stringValue||e.name||"",category:this.parseExerciseCategory(e.category?.mapValue?.fields||e.category||{}),primaryBodyParts:this.parseBodyParts(e.primaryBodyParts),secondaryBodyParts:this.parseBodyParts(e.secondaryBodyParts),tags:(e.tags?.arrayValue?.values||e.tags||[]).map(e=>e.stringValue||e),description:e.description?.stringValue||e.description||"",visibility:(e.visibility?.arrayValue?.values||e.visibility||[]).map(e=>e.stringValue||e),steps:(e.steps?.arrayValue?.values||e.steps||[]).map(e=>e.stringValue||e),videos:this.parseVideos(e.videos),currentVideoPosition:parseInt(e.currentVideoPosition?.integerValue||e.currentVideoPosition||"0"),reps:e.reps?.stringValue||e.reps||"",sets:parseInt(e.sets?.integerValue||e.sets||"0"),weight:parseFloat(e.weight?.doubleValue||e.weight||"0"),author:this.parseExerciseAuthor(e.author?.mapValue?.fields||e.author||{}),createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||e.createdAt||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||e.updatedAt||"0"))}}parseExerciseCategory(e){return"cardio"===(e.id?.stringValue||e.id||"")?{type:"cardio",details:{duration:parseInt(e.duration?.integerValue||e.duration||"0"),bpm:parseInt(e.bpm?.integerValue||e.bpm||"0"),calories:parseInt(e.calories?.integerValue||e.calories||"0"),screenTime:parseInt(e.screenTime?.integerValue||e.screenTime||"0"),selectedVideo:this.parseExerciseVideo(e.selectedVideo?.mapValue?.fields||e.selectedVideo)}}:{type:"weightTraining",details:{reps:e.reps?.stringValue||e.reps||"",sets:parseInt(e.sets?.integerValue||e.sets||"0"),weight:parseFloat(e.weight?.doubleValue||e.weight||"0"),screenTime:parseInt(e.screenTime?.integerValue||e.screenTime||"0"),selectedVideo:this.parseExerciseVideo(e.selectedVideo?.mapValue?.fields||e.selectedVideo)}}}parseBodyParts(e){return(e?.arrayValue?.values||e||[]).map(e=>e.stringValue||e)}parseVideos(e){return(e?.arrayValue?.values||e||[]).map(e=>this.parseExerciseVideo(e.mapValue?.fields||e))}parseExerciseVideo(e){return{id:e.id?.stringValue||e.id||"",exerciseId:e.exerciseId?.stringValue||e.exerciseId||"",username:e.username?.stringValue||e.username||"",userId:e.userId?.stringValue||e.userId||"",videoURL:e.videoURL?.stringValue||e.videoURL||"",fileName:e.fileName?.stringValue||e.fileName||"",exercise:e.exercise?.stringValue||e.exercise||"",profileImage:this.parseProfileImage(e.profileImage?.mapValue?.fields||e.profileImage||{}),caption:e.caption?.stringValue||e.caption||"",gifURL:e.gifURL?.stringValue||e.gifURL||"",thumbnail:e.thumbnail?.stringValue||e.thumbnail||"",visibility:e.visibility?.stringValue||e.visibility||"open",totalAccountsReached:parseInt(e.totalAccountsReached?.integerValue||e.totalAccountsReached||"0"),totalAccountLikes:parseInt(e.totalAccountLikes?.integerValue||e.totalAccountLikes||"0"),totalAccountBookmarked:parseInt(e.totalAccountBookmarked?.integerValue||e.totalAccountBookmarked||"0"),totalAccountUsage:parseInt(e.totalAccountUsage?.integerValue||e.totalAccountUsage||"0"),isApproved:e.isApproved?.booleanValue||e.isApproved||!1,liked:e.liked?.booleanValue||e.liked,bookmarked:e.bookmarked?.booleanValue||e.bookmarked,createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||e.createdAt||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||e.updatedAt||"0"))}}parseProfileImage(e){return{profileImageURL:e.profileImageURL?.stringValue||e.profileImageURL||"",imageOffsetWidth:parseFloat(e.imageOffsetWidth?.doubleValue||e.imageOffsetWidth||"0"),imageOffsetHeight:parseFloat(e.imageOffsetHeight?.doubleValue||e.imageOffsetHeight||"0")}}parseExerciseAuthor(e){return{userId:e.userId?.stringValue||e.userId||"",username:e.username?.stringValue||e.username||""}}async fetchSavedWorkout(e,t){try{let r=(0,i.JU)(s.db,"users",e,"MyCreatedWorkouts",t),a=await (0,i.QT)(r);if(!a.exists())return[null,null];let o=await this.fetchAndMapExercisesWithVideos(),d=a.data(),n=(d.exercises||[]).map(e=>{let t=o.find(t=>t.name===e.exercise.name);return{...e,exercise:t||e.exercise}});d.exercises=n;let l=this.parseWorkoutData(d),c=(0,i.hJ)(r,"logs"),h=(await (0,i.PL)(c)).docs.map(r=>{let i=r.data(),s=o.find(e=>e.name===i.exercise.name);return{id:r.id,workoutId:t,userId:e,exercise:s||i.exercise,logs:i.log||[],feedback:i.feedback||"",note:i.note||"",recommendedWeight:i.recommendedWeight,isSplit:i.isSplit||!1,isBodyWeight:i.isBodyWeight||!1,logSubmitted:i.logSubmitted||!1,logIsEditing:i.logIsEditing||!1,isCompleted:i.isCompleted||!1,createdAt:(0,u.Q)(i.createdAt),updatedAt:(0,u.Q)(i.updatedAt)}});return l.logs=h,[l,h]}catch(e){return console.error("Error fetching saved workout:",e),[null,null]}}async fetchUserChallengesByChallengeId(e){let t=(0,i.hJ)(s.db,"user-challenge"),r=(0,i.IO)(t,(0,i.ar)("challengeId","==",e));try{return(await (0,i.PL)(r)).docs.map(e=>{let t=e.data();return{id:e.id,...t,challenge:t.challenge?new d.tv({id:t.challenge.id,title:t.challenge.title,subtitle:t.challenge.subtitle,participants:t.challenge.participants||[],status:t.challenge.status,startDate:t.challenge.startDate?new Date(t.challenge.startDate):new Date,endDate:t.challenge.endDate?new Date(t.challenge.endDate):new Date,createdAt:t.challenge.createdAt?new Date(t.challenge.createdAt):new Date,updatedAt:t.challenge.updatedAt?new Date(t.challenge.updatedAt):new Date,introVideos:(t.challenge.introVideos||[]).map(e=>new d.L$({id:e.id,userId:e.userId,videoUrl:e.videoUrl})),referralChains:t.challenge.referralChains||[]}):void 0,createdAt:l(t.createdAt),updatedAt:l(t.updatedAt)}})}catch(e){throw console.error("Error fetching user challenges by challengeId:",e),e}}async getCollectionById(e){try{let t=(0,i.JU)(s.db,"sweatlist-collection",e),r=await (0,i.QT)(t);if(r.exists())return new d.No({id:r.id,...r.data()});throw Error("Collection not found")}catch(e){throw console.error("Error getting collection by ID:",e),e}}async fetchActiveChallenges(){let e=a.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,i.hJ)(s.db,"user-challenge"),r=(0,i.IO)(t,(0,i.ar)("userId","==",e.id));try{return(await (0,i.PL)(r)).docs.map(e=>{let t=e.data(),r=t.challenge?new d.tv({id:t.challenge.id,title:t.challenge.title,subtitle:t.challenge.subtitle,participants:t.challenge.participants||[],status:t.challenge.status,startDate:(0,u.Q)(t.challenge.startDate),endDate:(0,u.Q)(t.challenge.endDate),createdAt:(0,u.Q)(t.challenge.createdAt),updatedAt:(0,u.Q)(t.challenge.updatedAt),introVideos:(t.challenge.introVideos||[]).map(e=>new d.L$({id:e.id,userId:e.userId,videoUrl:e.videoUrl})),referralChains:t.challenge.referralChains||[]}):void 0;return{id:e.id,...t,challenge:r,createdAt:(0,u.Q)(t.createdAt),updatedAt:(0,u.Q)(t.updatedAt)}}).filter(e=>{let t=e.challenge?.endDate;return t&&t>new Date})}catch(e){throw console.error("Error fetching active challenges:",e),e}}async fetchUserChallenges(){let e=a.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,i.hJ)(s.db,"user-challenge"),r=(0,i.IO)(t,(0,i.ar)("userId","==",e.id));try{return(await (0,i.PL)(r)).docs.map(e=>({id:e.id,...e.data()}))}catch(e){throw console.error("Error fetching user challenges:",e),Error("Failed to fetch user challenges")}}async updateWorkoutLogs(e){let{userId:t,workoutId:r,logs:a}=e;try{let e=(0,i.JU)(s.db,"users",t,"workoutSessions",r),o=(0,i.hJ)(e,"logs"),d=(0,i.qs)(s.db);a.forEach(e=>{let t=(0,i.JU)(o,e.id);d.update(t,{isCompleted:e.isCompleted,logs:e.logs,updatedAt:c()})}),await d.commit()}catch(e){throw console.error("Error updating workout logs:",e),e}}async fetchCurrentWorkoutSession(e){if(!e)throw Error("No user ID provided");let t=await (0,i.PL)((0,i.hJ)(s.db,"exercises")),r=(await (0,i.PL)((0,i.hJ)(s.db,"exerciseVideos"))).docs.map(e=>o.Ax.fromFirebase({id:e.id,...e.data()})),a=t.docs.map(e=>{let t=o.cd.fromFirebase({id:e.id,...e.data()}),i=r.filter(e=>e.exercise.toLowerCase()===t.name.toLowerCase());return{...t,videos:i}}),n=(0,i.hJ)(s.db,"users",e,"workoutSessions"),l=(0,i.IO)(n,(0,i.ar)("status","==",d.Z0.QueuedUp)),c=await (0,i.PL)(l);return c.empty&&(l=(0,i.IO)(n,(0,i.ar)("status","==",d.Z0.InProgress)),(c=await (0,i.PL)(l)).empty)?{workout:null,logs:null}:this.processWorkoutSessionDocument(c.docs[0],a)}async cancelWorkoutSession(e,t){try{let r=(0,i.hJ)(s.db,"users",e,"workoutSessions",t,"logs"),a=await (0,i.PL)(r),o=(0,i.qs)(s.db);a.empty||(a.docs.forEach(e=>{o.delete(e.ref)}),await o.commit());let d=(0,i.JU)(s.db,"users",e,"workoutSessions",t);await (0,i.oe)(d)}catch(e){throw console.error("Error canceling workout session:",e),e}}async fetchAndMapExercisesWithVideos(){try{let e=(await (0,i.PL)((0,i.hJ)(s.db,"exercises"))).docs.map(e=>o.cd.fromFirebase({id:e.id,...e.data()})),t=(await (0,i.PL)((0,i.hJ)(s.db,"exerciseVideos"))).docs.map(e=>o.Ax.fromFirebase({id:e.id,...e.data()}));return e.map(e=>{let r=t.filter(t=>t.exercise.toLowerCase()===e.name.toLowerCase());return{...e,videos:r}})}catch(e){throw console.error("Error fetching and mapping exercises with videos:",e),e}}async fetchAllWorkoutSessions(e){if(!e)throw Error("No user ID provided");try{let t=(await (0,i.PL)((0,i.hJ)(s.db,"exercises"))).docs.map(e=>o.cd.fromFirebase({id:e.id,...e.data()})),r=(await (0,i.PL)((0,i.hJ)(s.db,"exerciseVideos"))).docs.map(e=>o.Ax.fromFirebase({id:e.id,...e.data()})),a=t.map(e=>{let t=r.filter(t=>t.exercise.toLowerCase()===e.name.toLowerCase());return{...e,videos:t}}),d=(0,i.hJ)(s.db,"users",e,"workoutSessions"),n=await (0,i.PL)(d);if(n.empty)return console.log("No workout sessions found for user"),[];return await Promise.all(n.docs.map(async e=>{let t=await this.processWorkoutSessionDocument(e,a);return t.logs&&t.logs.sort((e,t)=>{let r=e.order??0,i=t.order??0;return r-i}),t}))}catch(e){throw console.error("Error fetching workout sessions:",e),e}}async processWorkoutSessionDocument(e,t){let r=e.data(),s=(r.exercises||[]).map(e=>{let r=e.exercise?.name?.toLowerCase().trim(),i=t.find(e=>e.name.toLowerCase().trim()===r);return{...e,exercise:i||e.exercise}}),a=new d.oQ({id:e.id,roundWorkoutId:r.roundWorkoutId||"",exercises:s,title:r.title||"",description:r.description||"",duration:r.duration||0,useAuthorContent:r.useAuthorContent||!1,isCompleted:r.isCompleted||!1,workoutStatus:r.workoutStatus||d.Z0.Archived,author:r.author||"",createdAt:(0,u.Q)(r.createdAt),updatedAt:(0,u.Q)(r.updatedAt),startTime:(0,u.Q)(r.startTime),collectionId:r.collectionId,challenge:r.challenge,logs:(r.logs||[]).map(e=>{let r=e.exercise?.name?.toLowerCase().trim(),i=t.find(e=>e.name.toLowerCase().trim()===r);return{...e,exercise:i||e.exercise}}),workoutRating:r.workoutRating,order:r.order,zone:r.zone||d.Bc.FullBody});console.log("The Workout ID is: "+a.id);let n=(0,i.hJ)(e.ref,"logs"),l=(await (0,i.PL)(n)).docs.map(e=>{let r=e.data(),i=r.exercise?.name?.toLowerCase().trim(),s=t.find(e=>e.name.toLowerCase().trim()===i),d={...r,id:e.id,workoutId:a.id,exercise:s||r.exercise,createdAt:(0,u.Q)(r.createdAt),updatedAt:(0,u.Q)(r.updatedAt)};return new o.lg(d)});return{workout:a,logs:l}}async saveWorkoutSession(e){let{userId:t,workout:r,logs:a}=e;if(!t)throw Error("No user ID provided");try{let e=new Date,o=new d.oQ({...r,roundWorkoutId:`${r.id}-${e.getTime()}`,workoutStatus:d.Z0.QueuedUp,createdAt:e,updatedAt:e,startTime:e,logs:[]}),n=(0,i.JU)((0,i.hJ)(s.db,"users",t,"workoutSessions"));await (0,i.pl)(n,o);let l=(0,i.hJ)(n,"logs"),c=(0,i.qs)(s.db);return a.forEach((t,r)=>{let s=(0,i.JU)(l,`${t.id}-${e.getTime()}`);c.set(s,{id:s.id,workoutId:n.id,exercise:{id:t.exercise.id,name:t.exercise.name,category:t.exercise.category,videos:t.exercise.videos||[]},order:r,createdAt:e,updatedAt:e,logSubmitted:!1,isCompleted:!1})}),await c.commit(),o}catch(e){throw console.error("Error saving workout session:",e),e}}async joinChallenge(e){let{username:t,challengeId:r}=e;if(!a.W4.currentUser)throw Error("No user is signed in");let o=(0,i.hJ)(s.db,"users"),d=(0,i.IO)(o,(0,i.ar)("username","==",t)),n=await (0,i.PL)(d);if(n.empty)throw Error("User not found");let l=n.docs[0],c=l.data(),u=l.id,h=(0,i.JU)(s.db,"sweatlist-collection",r),p=await (0,i.QT)(h);if(!p.exists())throw Error("Challenge not found");let g=p.data(),m=`${r}-${u}-${Date.now()}`,w={id:m,challenge:g,challengeId:r,userId:u,fcmToken:c.fcmToken||"",profileImage:c.profileImage||{},progress:0,completedWorkouts:[],isCompleted:!1,uid:u,location:c.location||null,city:"",country:"",timezone:"",username:t,joinDate:new Date,createdAt:new Date,updatedAt:new Date,pulsePoints:{baseCompletion:0,firstCompletion:0,streakBonus:0,checkInBonus:0,effortRating:0,chatParticipation:0,locationCheckin:0,contentEngagement:0,encouragementSent:0,encouragementReceived:0},currentStreak:0,encouragedUsers:[],encouragedByUsers:[],checkIns:[]};await (0,i.pl)((0,i.JU)(s.db,"user-challenge",m),w)}constructor(){this._currentWorkout=null,this._currentWorkoutLogs=[]}}let p=new h},4454:function(e,t,r){r.d(t,{Bc:function(){return c},Dj:function(){return h},L$:function(){return y},No:function(){return f},P7:function(){return A},Z0:function(){return n},c_:function(){return m},oQ:function(){return w},tv:function(){return I}});var i,s,a,o,d,n,l,c,u,h,p=r(3530),g=r(2778);(i=n||(n={})).QueuedUp="queuedUp",i.InProgress="inProgress",i.Complete="complete",i.Archived="archived",(s=l||(l={})).TooHard="Too Hard",s.TooEasy="Too Easy",s.JustRight="Just Right",(a=c||(c={})).LowerBody="Lower Body",a.UpperBody="Upper Body",a.FullBody="Full Body",a.Core="Core";class m{static fromFirebase(e){return{reps:e.reps||0,weight:e.weight||0,leftReps:e.leftReps||0,leftWeight:e.leftWeight||0,isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,duration:e.duration||0,calories:e.calories||0,bpm:e.bpm||0}}}class w{constructor(e){this.id=e.id,this.collectionId=e.collectionId,this.roundWorkoutId=e.roundWorkoutId,this.exercises=e.exercises,this.challenge=e.challenge,this.logs=e.logs,this.title=e.title,this.description=e.description,this.duration=e.duration,this.workoutRating=e.workoutRating,this.useAuthorContent=e.useAuthorContent,this.isCompleted=e.isCompleted,this.workoutStatus=e.workoutStatus,this.startTime=e.startTime,this.order=e.order,this.author=e.author,this.createdAt=e.createdAt,this.updatedAt=e.updatedAt,this.zone=w.determineWorkoutZone(e.exercises)}static estimatedDuration(e){let t=0,r=0,i=!1;for(let s of e){let e=s.exercise;if(console.groupCollapsed(`Exercise: ${e}`),"cardio"===e.category.type){let r=e.category.details?.duration||0;console.log("Cardio duration (minutes):",r),t+=r}else if("weightTraining"===e.category.type){let s=e.category.details?.screenTime||0;s>0?(console.log("Screen time (seconds):",s),console.log("Converted to minutes:",Math.floor(s/60)),t+=Math.floor(s/60),i=!0):(console.log("Using default timing (8m exercise + 1m rest)"),t+=8,r+=1)}console.log("Current totals:",{totalExerciseTime:t,restTime:r,hasScreenTimeExercises:i}),console.groupEnd()}i||(console.log("Adding warmup/cool-down:",10,"minutes"),t+=10);let s=t+r;console.log("Pre-rounded total:",s);let a=s;return i||console.log("Rounded to nearest 5 minutes:",a=5*Math.round(s/5)),console.log("Final estimated duration:",a,"minutes"),a}static determineWorkoutZone(e){let t=new Set;for(let r of e)for(let e of r.exercise.primaryBodyParts||[r.exercise.primaryBodyParts])t.add(e);let r=new Set([p.mn.Chest,p.mn.Shoulders,p.mn.Biceps,p.mn.Triceps,p.mn.Traps,p.mn.Lats,p.mn.Forearms]),i=new Set([p.mn.Hamstrings,p.mn.Glutes,p.mn.Quadriceps,p.mn.Calves]),s=new Set([p.mn.Abs,p.mn.Lowerback]),a=(e,t)=>Array.from(e).some(e=>t.has(e)),o=a(t,r),d=a(t,i),n=a(t,s);return o&&d&&n||o&&d?"Full Body":o&&n||o?"Upper Body":d&&n||d?"Lower Body":n?"Core":"Full Body"}static toDictionary(e){return{id:e.id,collectionId:e.collectionId,roundWorkoutId:e.roundWorkoutId,exercises:e.exercises,challenge:e.challenge,logs:e.logs,title:e.title,description:e.description,duration:e.duration,workoutRating:e.workoutRating,useAuthorContent:e.useAuthorContent,isCompleted:e.isCompleted,workoutStatus:e.workoutStatus,startTime:e.startTime,order:e.order,author:e.author,createdAt:e.createdAt,updatedAt:e.updatedAt,zone:e.zone}}}class A{constructor(e){this.id=e.id,this.workoutId=e.workoutId,this.exercises=e.exercises.map(e=>p.lg.fromFirebase(e)),this.bodyParts=e.bodyParts,this.secondaryBodyParts=e.secondaryBodyParts,this.workoutTitle=e.workoutTitle,this.caloriesBurned=e.caloriesBurned,this.workoutRating=e.workoutRating,this.exercisesCompleted=e.exercisesCompleted.map(e=>p.lg.fromFirebase(e)),this.aiInsight=e.aiInsight,this.recommendations=e.recommendations,this.gifURLs=e.gifURLs,this.recommendedWork=e.recommendedWork,this.isCompleted=e.isCompleted,this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date,this.completedAt=e.completedAt?new Date(e.completedAt):null,this.duration=e.duration}static fromFirebase(e){return new A({id:e.id||"",workoutId:e.workoutId||"",exercises:e.exercises||[],bodyParts:e.bodyParts||[],secondaryBodyParts:e.secondaryBodyParts||[],workoutTitle:e.workoutTitle||"",caloriesBurned:e.caloriesBurned||0,workoutRating:e.workoutRating,exercisesCompleted:e.exercisesCompleted||[],aiInsight:e.aiInsight||"",recommendations:e.recommendations||[],gifURLs:e.gifURLs||[],recommendedWork:e.recommendedWork,isCompleted:e.isCompleted||!1,createdAt:e.createdAt,updatedAt:e.updatedAt,completedAt:e.completedAt,duration:e.duration||""})}}(o=u||(u={})).Together="together",o.Solo="solo",o.Locked="locked";class f{constructor(e){this.id=e.id,this.title=e.title||"",this.subtitle=e.subtitle||"",this.challenge=e.challenge?new I(e.challenge):void 0,this.sweatlistIds=(e.sweatlistIds||[]).map(e=>({id:e.id||"",sweatlistAuthorId:e.sweatlistAuthorId||"",sweatlistName:e.sweatlistName||"",order:e.order||0})),this.ownerId=e.ownerId||"",this.privacy=e.challenge?"together":"solo",this.participants=(e.participants||[]).map(e=>e||""),this.createdAt=(0,g.Q)(e.createdAt),this.updatedAt=(0,g.Q)(e.updatedAt)}static fromFirestore(e){return new f(e)}toDictionary(){return{id:this.id,title:this.title,subtitle:this.subtitle,challenge:this.challenge?this.challenge.toDictionary():null,sweatlistIds:this.sweatlistIds.map(e=>({id:e.id,sweatlistAuthorId:e.sweatlistAuthorId,order:e.order})),ownerId:this.ownerId,privacy:this.privacy,createdAt:this.createdAt,updatedAt:this.updatedAt}}toRESTDictionary(){return{fields:{id:{stringValue:this.id},title:{stringValue:this.title},subtitle:{stringValue:this.subtitle},ownerId:{stringValue:this.ownerId},sweatlistIds:{arrayValue:{values:this.sweatlistIds.map(e=>({mapValue:{fields:{id:{stringValue:e.id},sweatlistAuthorId:{stringValue:e.sweatlistAuthorId},order:{integerValue:e.order}}}}))}},createdAt:{doubleValue:this.createdAt.getTime()},updatedAt:{doubleValue:this.updatedAt.getTime()}}}}isPublished(){return!!this.challenge&&"published"===this.challenge.status}}(d=h||(h={})).Draft="draft",d.Published="published",d.Completed="completed",d.Cancelled="cancelled";class y{constructor(e){this.id=e.id,this.userId=e.userId,this.videoUrl=e.videoUrl}static fromFirebase(e){return new y({id:e.id||"",userId:e.userId||"",videoUrl:e.videoUrl||""})}toDictionary(){return{id:this.id,userId:this.userId,videoUrl:this.videoUrl}}}class I{constructor(e){this.id=e.id,this.title=e.title,this.subtitle=e.subtitle,this.participants=e.participants,this.status=e.status,this.startDate=(0,g.Q)(e.startDate),this.endDate=(0,g.Q)(e.endDate),this.createdAt=(0,g.Q)(e.createdAt),this.updatedAt=(0,g.Q)(e.updatedAt),this.introVideos=e.introVideos||[],this.durationInDays=this.calculateDurationInDays(),this.referralChains=(e.referralChains||[]).map(e=>({originalHostId:e.originalHostId||"",shares:e.shares||[]}))}toDictionary(){return{id:this.id,title:this.title,subtitle:this.subtitle,participants:this.participants.map(e=>({id:e.id,challengeId:e.challengeId,userId:e.userId,username:e.username,profileImage:e.profileImage,progress:e.progress,completedWorkouts:e.completedWorkouts,isCompleted:e.isCompleted,location:e.location,city:e.city,country:e.country,timezone:e.timezone,joinDate:e.joinDate,createdAt:e.createdAt,updatedAt:e.updatedAt,pulsePoints:e.pulsePoints,currentStreak:e.currentStreak,encouragedUsers:e.encouragedUsers,encouragedByUsers:e.encouragedByUsers,checkIns:e.checkIns})),status:this.status,startDate:this.startDate,endDate:this.endDate,createdAt:this.createdAt,updatedAt:this.updatedAt,durationInDays:this.durationInDays,introVideos:this.introVideos.map(e=>({id:e.id,userId:e.userId,videoUrl:e.videoUrl})),referralChains:this.referralChains.map(e=>({originalHostId:e.originalHostId,shares:e.shares}))}}calculateDurationInDays(){let e=this.startDate?.valueOf(),t=this.endDate?.valueOf();if(!e||!t||isNaN(e)||isNaN(t))throw Error("Invalid startDate or endDate");return Math.ceil((t-e)/864e5)}static toFirestoreObject(e){if(null===e||"object"!=typeof e||e instanceof Date)return e;if(Array.isArray(e))return e.map(e=>this.toFirestoreObject(e));if(e instanceof I)return{id:e.id,title:e.title,subtitle:e.subtitle,participants:e.participants,status:e.status,startDate:e.startDate,endDate:e.endDate,createdAt:e.createdAt,updatedAt:e.updatedAt,introVideos:e.introVideos.map(e=>({id:e.id,userId:e.userId,videoUrl:e.videoUrl}))};let t={};for(let r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=this.toFirestoreObject(e[r]));return t}}},2778:function(e,t,r){r.d(t,{Q:function(){return i}});let i=e=>{if(null==e)return new Date;if(e instanceof Date)return e;let t="string"==typeof e?parseInt(e,10):e;return new Date(t<1e10?1e3*t:t)}}}]);
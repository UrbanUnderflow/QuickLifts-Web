"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[662],{6718:function(e,t,r){r.d(t,{I:function(){return n},db:function(){return d}});var a=r(3977),i=r(1259),s=r(9828);let o=(0,a.ZF)({apiKey:"AIzaSyCBNr8WylRpi7IZ5M_COy1E3LaStQgLMvk",authDomain:"quicklifts-dd3f1.firebaseapp.com",projectId:"quicklifts-dd3f1",storageBucket:"quicklifts-dd3f1.appspot.com",messagingSenderId:"691046627244",appId:"1:691046627244:ios:821c53e53f20c736a9ec09"}),n=(0,i.v0)(o),d=(0,s.ad)(o)},3530:function(e,t,r){r.d(t,{cd:function(){return d},lg:function(){return n},mn:function(){return i}});var a,i,s=r(4454),o=r(1316);(a=i||(i={})).Biceps="biceps",a.Triceps="triceps",a.Chest="chest",a.Calves="calves",a.Abs="abs",a.Hamstrings="hamstrings",a.Back="back",a.Glutes="glutes",a.Quadriceps="quadriceps",a.Forearms="forearms",a.Shoulders="shoulders",a.Lowerback="lowerback",a.Lats="lats",a.Traps="traps",a.Rhomboids="rhomboids",a.Deltoids="deltoids",a.Fullbody="fullbody";class n{constructor(e){this.id=e.id||"",this.workoutId=e.workoutId||"",this.userId=e.userId||"",this.exercise=d.fromFirebase(e.exercise||{}),this.logs=(e.logs||[]).map(e=>s.c_.fromFirebase(e)),this.feedback=e.feedback||"",this.note=e.note||"",this.recommendedWeight=e.recommendedWeight,this.isSplit=e.isSplit||!1,this.isBodyWeight=e.isBodyWeight||!1,this.logSubmitted=e.logSubmitted||!1,this.logIsEditing=e.logIsEditing||!1,this.isCompleted=e.isCompleted||!1,this.order=e.order,this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date}static fromFirebase(e){return new n({id:e.id||"",workoutId:e.workoutId||"",userId:e.userId||"",exercise:e.exercise||{},logs:e.logs||[],feedback:e.feedback||"",note:e.note||"",recommendedWeight:e.recommendedWeight,isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,logSubmitted:e.logSubmitted||!1,logIsEditing:e.logIsEditing||!1,isCompleted:e.isCompleted||!1,order:e.order,createdAt:e.createdAt,updatedAt:e.updatedAt})}}class d{constructor(e){this.id=e.id||"",this.name=e.name||"",this.description=e.description||"",this.category=e.category,this.primaryBodyParts=e.primaryBodyParts||[],this.secondaryBodyParts=e.secondaryBodyParts||[],this.tags=e.tags||[],this.videos=(e.videos||[]).map(e=>l.fromFirebase(e)),this.steps=e.steps||[],this.visibility=e.visibility||[],this.currentVideoPosition=e.currentVideoPosition||0,this.sets=e.sets||0,this.reps=e.reps||"",this.weight=e.weight||0,this.author=c.fromFirebase(e.author||{}),this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date}static fromFirebase(e){return new d({id:e.id||"",name:e.name||"",description:e.description||"",category:e.category||{},primaryBodyParts:e.primaryBodyParts||[],secondaryBodyParts:e.secondaryBodyParts||[],tags:e.tags||[],videos:e.videos||[],steps:e.steps||[],visibility:e.visibility||[],currentVideoPosition:e.currentVideoPosition||0,sets:e.sets||0,reps:e.reps||"",weight:e.weight||0,author:e.author||{},createdAt:e.createdAt,updatedAt:e.updatedAt})}}class l{constructor(e){this.id=e.id||"",this.exerciseId=e.exerciseId||"",this.username=e.username||"",this.userId=e.userId||"",this.videoURL=e.videoURL||"",this.fileName=e.fileName||"",this.exercise=e.exercise||"",this.profileImage=o.m1.fromFirebase(e.profileImage||{}),this.caption=e.caption,this.gifURL=e.gifURL,this.thumbnail=e.thumbnail,this.visibility=e.visibility||"private",this.totalAccountsReached=e.totalAccountsReached||0,this.totalAccountLikes=e.totalAccountLikes||0,this.totalAccountBookmarked=e.totalAccountBookmarked||0,this.totalAccountUsage=e.totalAccountUsage||0,this.isApproved=e.isApproved||!1,this.liked=e.liked||!1,this.bookmarked=e.bookmarked||!1,this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date}static fromFirebase(e){return new l({id:e.id||"",exerciseId:e.exerciseId||"",username:e.username||"",userId:e.userId||"",videoURL:e.videoURL||"",fileName:e.fileName||"",exercise:e.exercise||"",profileImage:e.profileImage||{},caption:e.caption,gifURL:e.gifURL,thumbnail:e.thumbnail,visibility:e.visibility||"private",totalAccountsReached:e.totalAccountsReached||0,totalAccountLikes:e.totalAccountLikes||0,totalAccountBookmarked:e.totalAccountBookmarked||0,totalAccountUsage:e.totalAccountUsage||0,isApproved:e.isApproved||!1,liked:e.liked||!1,bookmarked:e.bookmarked||!1,createdAt:e.createdAt,updatedAt:e.updatedAt})}}class c{static fromFirebase(e){return{userId:e.userId||"",username:e.username||""}}}},7705:function(e,t,r){r.d(t,{n5:function(){return a.n5},W4:function(){return n}});var a=r(1316),i=r(9828),s=r(6718);class o{get currentUser(){return this._currentUser}set currentUser(e){this._currentUser=e}async fetchUserFromFirestore(e){let t=(0,i.JU)(s.db,"users",e),r=await (0,i.QT)(t);if(!r.exists())throw Error("User not found");return a.n5.fromFirebase(r.data())}async updateUser(e,t){let r=(0,i.JU)(s.db,"users",e);await (0,i.pl)(r,t.toFirestore(),{merge:!0})}async fetchUserVideos(e){let t=e||this.currentUser?.id;if(!t)throw Error("No user ID provided");try{let e=(0,i.hJ)(s.db,"exerciseVideos"),r=(0,i.IO)(e,(0,i.ar)("userId","==",t)),a=await (0,i.PL)(r),o={};a.docs.forEach(e=>{let t=e.data(),r=t.exercise;if(!r){console.warn(`Exercise name missing for video ${e.id}`);return}let a={id:e.id,exerciseId:t.exerciseId||"",username:t.username||"",userId:t.userId||"",videoURL:t.videoURL||"",fileName:t.fileName||"",exercise:r,profileImage:t.profileImage||{},caption:t.caption||"",gifURL:t.gifURL||"",thumbnail:t.thumbnail||"",visibility:t.visibility||"open",totalAccountsReached:t.totalAccountsReached||0,totalAccountLikes:t.totalAccountLikes||0,totalAccountBookmarked:t.totalAccountBookmarked||0,totalAccountUsage:t.totalAccountUsage||0,isApproved:t.isApproved||!1,liked:t.liked||!1,bookmarked:t.bookmarked||!1,createdAt:t.createdAt?new Date(t.createdAt):new Date,updatedAt:t.updatedAt?new Date(t.updatedAt):new Date};o[r]||(o[r]=[]),o[r].push(a)});let n=(0,i.hJ)(s.db,"exercises");return(await (0,i.PL)(n)).docs.map(e=>{let t=e.data(),r=t.name;return{id:e.id,name:r,category:t.category,primaryBodyParts:t.primaryBodyParts||[],secondaryBodyParts:t.secondaryBodyParts||[],tags:t.tags||[],description:t.description||"",visibility:t.visibility||"limited",steps:t.steps||[],videos:o[r]||[],currentVideoPosition:0,reps:t.reps||"",sets:t.sets||0,weight:t.weight||0,author:{userId:t.author?.userId||"",username:t.author?.username||""},createdAt:t.createdAt?new Date(t.createdAt):new Date,updatedAt:t.updatedAt?new Date(t.updatedAt):new Date}}).filter(e=>e.videos.length>0)}catch(e){throw console.error("Error fetching user videos:",e),e}}async fetchFollowing(){let e=this.currentUser;if(!e?.id)throw Error("No user is signed in");try{let t=(0,i.hJ)(s.db,"followRequests"),r=(0,i.IO)(t,(0,i.ar)("fromUser.id","==",e.id));return(await (0,i.PL)(r)).docs.map(e=>{let t=e.data();return{fromUser:{id:t.fromUser?.id||"",username:t.fromUser?.username||"",displayName:t.fromUser?.displayName||""},toUser:{id:t.toUser?.id||"",username:t.toUser?.username||"",displayName:t.toUser?.displayName||""},status:t.status||"",createdAt:t.createdAt instanceof Date?t.createdAt:t.createdAt?new Date(t.createdAt):new Date,updatedAt:t.updatedAt instanceof Date?t.updatedAt:t.updatedAt?new Date(t.updatedAt):new Date}})}catch(e){throw console.error("Error fetching following:",e),e}}async fetchFollowers(){let e=this.currentUser;if(!e?.id)throw Error("No user is signed in");try{let t=(0,i.hJ)(s.db,"followRequests"),r=(0,i.IO)(t,(0,i.ar)("toUser.id","==",e.id));return(await (0,i.PL)(r)).docs.map(e=>{let t=e.data();return{fromUser:{id:t.fromUser?.id||"",username:t.fromUser?.username||"",displayName:t.fromUser?.displayName||""},toUser:{id:t.toUser?.id||"",username:t.toUser?.username||"",displayName:t.toUser?.displayName||""},status:t.status||"",createdAt:t.createdAt instanceof Date?t.createdAt:t.createdAt?new Date(t.createdAt):new Date,updatedAt:t.updatedAt instanceof Date?t.updatedAt:t.updatedAt?new Date(t.updatedAt):new Date}})}catch(e){throw console.error("Error fetching followers:",e),e}}async getUserIdByUsername(e){try{let t=(0,i.hJ)(s.db,"users"),r=(0,i.IO)(t,(0,i.ar)("username","==",e),(0,i.b9)(1)),a=await (0,i.PL)(r);if(!a.empty)return a.docs[0].id;return null}catch(e){return console.error("Error fetching user ID by username:",e),null}}async fetchUsersWithVideosUploaded(){try{let e=(0,i.hJ)(s.db,"users"),t=(0,i.IO)(e,(0,i.ar)("videoCount",">",0));return(await (0,i.PL)(t)).docs.map(e=>{let t=e.data();return a.n5.fromFirebase({id:e.id,...t})}).filter(e=>e.profileImage?.profileImageURL).sort(()=>Math.random()-.5)}catch(e){return console.error("Error fetching users with videos:",e),[]}}constructor(){this._currentUser=null}}let n=new o},1316:function(e,t,r){var a,i,s,o,n,d,l,c,u,h,p,g,m,f,w,A,y,D;r.d(t,{m1:function(){return b},n5:function(){return k}});class b{static fromFirebase(e){return{profileImageURL:e.profileImageURL||"",imageOffsetWidth:e.imageOffsetWidth||0,imageOffsetHeight:e.imageOffsetHeight||0}}}class k{constructor(e){this.id=e.id||"",this.displayName=e.displayName||"",this.email=e.email||"",this.username=e.username||"",this.bio=e.bio||"",this.profileImage=b.fromFirebase(e.profileImage||{}),this.followerCount=e.followerCount||0,this.followingCount=e.followingCount||0,this.bodyWeight=Array.isArray(e.bodyWeight)?e.bodyWeight.map(e=>I.fromFirebase(e)):[],this.workoutCount=e.workoutCount||0,this.creator={type:e.creator?.type||[],instagramHandle:e.creator?.instagramHandle||"",twitterHandle:e.creator?.twitterHandle||"",youtubeUrl:e.creator?.youtubeUrl||"",acceptCodeOfConduct:e.creator?.acceptCodeOfConduct||!1,acceptExecutiveTerms:e.creator?.acceptExecutiveTerms||!1,acceptGeneralTerms:e.creator?.acceptGeneralTerms||!1,acceptSweatEquityPartnership:e.creator?.acceptSweatEquityPartnership||!1,onboardingStatus:e.creator?.onboardingStatus||"",onboardingLink:e.creator?.onboardingLink||"",onboardingExpirationDate:e.creator?.onboardingExpirationDate||0},this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date}static fromFirebase(e){return new k({id:e.id||"",displayName:e.displayName||"",username:e.username||"",bio:e.bio||"",profileImage:e.profileImage||{},followerCount:e.followerCount||0,followingCount:e.followingCount||0,bodyWeight:Array.isArray(e.bodyWeight)?e.bodyWeight.map(e=>I.fromFirebase(e)):[],workoutCount:e.workoutCount||0,creator:e.creator||{},createdAt:e.createdAt,updatedAt:e.updatedAt})}toFirestore(){return{id:this.id,displayName:this.displayName,username:this.username,bio:this.bio,profileImage:this.profileImage,followerCount:this.followerCount,followingCount:this.followingCount,bodyWeight:this.bodyWeight,workoutCount:this.workoutCount,creator:this.creator,createdAt:this.createdAt,updatedAt:this.updatedAt}}}(h=a||(a={})).Unsubscribed="Unsubscribed",h.Beta="Beta User",h.Monthly="Monthly Subscriber",h.Annual="Annual Subscriber",h.SweatEquityPartner="Sweat Equity Partner",h.ExecutivePartner="Executive Partner",(p=i||(i={})).Novice="novice",p.Intermediate="intermediate",p.Expert="expert",(g=s||(s={})).LoseWeight="Lose weight",g.GainWeight="Gain muscle mass",g.ToneUp="Tone up",g.GeneralFitness="General Fitness",(m=o||(o={})).Woman="woman",m.Man="man",m.SelfDescribe="I'd rather self describe",(f=n||(n={})).iOS="ios",f.Android="android",(w=d||(d={})).PersonalTrainer="personal_trainer",w.FitnessEnthusiast="fitness_enthusiast",(A=l||(l={})).InspireOthers="inspire_others",A.BuildCommunity="build_community",(y=c||(c={})).Introduction="introduction",y.InProgress="in_progress",y.Complete="complete",(D=u||(u={})).NotStarted="not_started",D.InProgress="in_progress",D.Completed="completed";class I{constructor(e){let t=Date.now()/1e3;this.id=e.id||crypto.randomUUID(),this.oldWeight=e.oldWeight||0,this.newWeight=e.newWeight||0,this.frontUrl=e.frontUrl||"",this.backUrl=e.backUrl||"",this.sideUrl=e.sideUrl||"",this.createdAt=e.createdAt||t,this.updatedAt=e.updatedAt||t}static fromFirebase(e){return new I({id:e.id||crypto.randomUUID(),oldWeight:e.oldWeight||0,newWeight:e.newWeight||0,frontUrl:e.frontUrl||"",backUrl:e.backUrl||"",sideUrl:e.sideUrl||"",createdAt:e.createdAt||0,updatedAt:e.updatedAt||0})}toFirestore(){return{oldWeight:this.oldWeight,newWeight:this.newWeight,frontUrl:this.frontUrl,backUrl:this.backUrl,sideUrl:this.sideUrl,createdAt:this.createdAt,updatedAt:this.updatedAt}}}},8662:function(e,t,r){r.d(t,{G:function(){return h}});var a=r(9828),i=r(6718),s=r(7705),o=r(4454),n=r(2066);let d=e=>e?e._seconds?new Date(1e3*e._seconds).toISOString():e.seconds?new Date(1e3*e.seconds).toISOString():e.toDate&&"function"==typeof e.toDate?e.toDate().toISOString():e instanceof Date?e.toISOString():null:null,l=e=>{if(null==e)return new Date;if(e instanceof Date)return e;let t="string"==typeof e?parseInt(e,10):e;return new Date(t<1e10?1e3*t:t)};var c=r(1402);class u{get currentWorkout(){return this._currentWorkout}set currentWorkout(e){this._currentWorkout=e}get currentWorkoutLogs(){return this._currentWorkoutLogs}set currentWorkoutLogs(e){this._currentWorkoutLogs=e}async fetchCurrentWorkout(){return(await this.fetchCurrentWorkoutSession()).workout}async getAllSweatlists(e){if(!e)throw Error("User ID is required");let t=(0,a.hJ)(i.db,"users",e,"MyCreatedWorkouts");try{let r=await (0,a.PL)(t),s=[];for(let t of r.docs){let r=t.data(),n=t.id,d=new o.oQ({id:r.id||"",roundWorkoutId:r.roundWorkoutId||"",collectionId:r.collectionId,exercises:r.exercises||[],challenge:r.challenge,logs:[],title:r.title||"",description:r.description||"",duration:r.duration||0,workoutRating:r.workoutRating,useAuthorContent:r.useAuthorContent||!1,isCompleted:r.isCompleted||!1,workoutStatus:r.workoutStatus||"notStarted",startTime:r.startTime?new Date(r.startTime):void 0,order:r.order,author:r.author||e,createdAt:r.createdAt?new Date(r.createdAt):new Date,updatedAt:r.updatedAt?new Date(r.updatedAt):new Date,zone:r.zone||"FULL_BODY"}),l=(0,a.hJ)(i.db,"users",e,"MyCreatedWorkouts",n,"logs"),c=await (0,a.PL)(l);d.logs=c.docs.map(e=>({...e.data(),id:e.id})),s.push(d)}return s}catch(e){throw console.error("Error fetching sweatlists:",e.message),Error("Failed to fetch sweatlists")}}async fetchWorkoutSummaries(e){let t=s.W4.currentUser;if(!t?.id)throw Error("No user is signed in");let r=(0,n.WU)(e,"MM-dd-yyyy"),o=(0,a.hJ)(i.db,"users",t.id,"workoutSummaries"),d=(0,a.IO)(o,(0,a.ar)("date","==",r));try{return(await (0,a.PL)(d)).docs.map(e=>({id:e.id,...e.data()}))}catch(e){throw console.error("Error fetching workout summaries:",e.message),Error(e.message)}}async fetchAllWorkoutSummaries(){let e=s.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,a.hJ)(i.db,"users",e.id,"workoutSummary"),r=(0,a.IO)(t,(0,a.Xo)("createdAt","asc"));try{return(await (0,a.PL)(r)).docs.map(e=>({id:e.id,...e.data()}))}catch(e){throw console.error("Error fetching all workout summaries:",e.message),Error(e.message)}}async fetchUserChallengesByUserId(e){let t=(0,a.hJ)(i.db,"user-challenge"),r=(0,a.IO)(t,(0,a.ar)("userId","==",e));try{console.log(`Fetching challenges for user ID: ${e}`);let t=await (0,a.PL)(r);console.log(`Total challenges fetched: ${t.docs.length}`);let i=t.docs.map(e=>{let t=e.data();return console.log(`Processing challenge with ID: ${e.id}`,t),{id:e.id,...t,challenge:t.challenge?new c.t({id:t.challenge.id,title:t.challenge.title,subtitle:t.challenge.subtitle,participants:t.challenge.participants||[],status:t.challenge.status,startDate:t.challenge.startDate?new Date(t.challenge.startDate):new Date,endDate:t.challenge.endDate?new Date(t.challenge.endDate):new Date,createdAt:t.challenge.createdAt?new Date(t.challenge.createdAt):new Date,updatedAt:t.challenge.updatedAt?new Date(t.challenge.updatedAt):new Date,introVideoURL:t.challenge.introVideoURL||""}):void 0,createdAt:d(t.createdAt),updatedAt:d(t.updatedAt)}});return console.log("All challenges after processing:",JSON.stringify(i,null,2)),i}catch(e){throw console.error("Error fetching user challenges by userId:",e),e}}async fetchCollectionWithSweatLists(e){try{let t=await this.getCollectionById(e),r=[];for(let e of t.sweatlistIds||[])try{let[t]=await this.fetchSavedWorkout(e.sweatlistAuthorId,e.id);t&&r.push(t)}catch(t){console.error(`Error fetching workout ${e.id}:`,t)}return{collection:t,sweatLists:r}}catch(e){throw console.error("Error fetching collection with sweat lists:",e),e}}parseWorkoutData(e){return new o.oQ({id:e.id||"",roundWorkoutId:e.roundWorkoutId||"",collectionId:e.collectionId||[],exercises:e.exercises||[],challenge:e.challenge?new c.t({id:e.challenge.id,title:e.challenge.title,subtitle:e.challenge.subtitle,participants:e.challenge.participants||[],status:e.challenge.status,startDate:e.challenge.startDate instanceof Date?e.challenge.startDate:e.challenge.startDate?new Date(e.challenge.startDate):new Date,endDate:e.challenge.endDate instanceof Date?e.challenge.endDate:e.challenge.endDate?new Date(e.challenge.endDate):new Date,createdAt:e.challenge.createdAt instanceof Date?e.challenge.createdAt:e.challenge.createdAt?new Date(e.challenge.createdAt):new Date,updatedAt:e.challenge.updatedAt instanceof Date?e.challenge.updatedAt:e.challenge.updatedAt?new Date(e.challenge.updatedAt):new Date,introVideoURL:e.challenge.introVideoURL||""}):void 0,logs:e.logs||[],title:e.title||"",description:e.description||"",duration:e.duration||0,workoutRating:e.workoutRating,useAuthorContent:e.useAuthorContent||!1,isCompleted:e.isCompleted||!1,workoutStatus:e.workoutStatus||o.Z0.QueuedUp,startTime:e.startTime instanceof Date?e.startTime:e.startTime?new Date(e.startTime):void 0,order:e.order||0,author:e.author||"",createdAt:e.createdAt instanceof Date?e.createdAt:"function"==typeof e.createdAt?.toDate?e.createdAt.toDate():e.createdAt?new Date(e.createdAt):new Date,updatedAt:e.updatedAt instanceof Date?e.updatedAt:"function"==typeof e.updatedAt?.toDate?e.updatedAt.toDate():e.updatedAt?new Date(e.updatedAt):new Date,zone:e.zone||o.Bc.FullBody,estimatedDuration:()=>e.duration||0,determineWorkoutZone:()=>e.zone||o.Bc.FullBody,toDictionary:()=>({})})}createDefaultExercise(){return{id:"",name:"",category:{type:"weightTraining",details:{reps:"",sets:0,weight:0,screenTime:0,selectedVideo:this.parseExerciseVideo({})}},primaryBodyParts:[],secondaryBodyParts:[],tags:[],description:"",visibility:"live",steps:[],videos:[],currentVideoPosition:0,reps:"",sets:0,weight:0,author:{userId:"",username:""},createdAt:new Date,updatedAt:new Date}}parseExerciseLogData(e){return{id:e.id||"",workoutId:e.workoutId||"",userId:e.userId||"",exercise:e.exercise?this.parseExercise(e.exercise):this.createDefaultExercise(),logs:(e.log||[]).map(e=>({reps:parseInt(e.reps||"0"),weight:parseFloat(e.weight||"0"),leftReps:parseInt(e.leftReps||"0"),leftWeight:parseFloat(e.leftWeight||"0"),isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,isCompleted:e.isCompleted||!1,duration:parseInt(e.duration||"0"),calories:parseInt(e.calories||"0"),bpm:parseInt(e.bpm||"0")})),feedback:e.feedback||"",note:e.note||"",recommendedWeight:e.recommendedWeight,isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,logSubmitted:e.logSubmitted||!1,logIsEditing:e.logIsEditing||!1,isCompleted:e.isCompleted||!1,createdAt:e.createdAt instanceof Date?e.createdAt:"function"==typeof e.createdAt?.toDate?e.createdAt.toDate():e.createdAt?new Date(e.createdAt):new Date,updatedAt:e.updatedAt instanceof Date?e.updatedAt:"function"==typeof e.updatedAt?.toDate?e.updatedAt.toDate():e.updatedAt?new Date(e.updatedAt):new Date}}parseExercise(e){return{id:e.id?.stringValue||e.id||"",name:e.name?.stringValue||e.name||"",category:this.parseExerciseCategory(e.category?.mapValue?.fields||e.category||{}),primaryBodyParts:this.parseBodyParts(e.primaryBodyParts),secondaryBodyParts:this.parseBodyParts(e.secondaryBodyParts),tags:(e.tags?.arrayValue?.values||e.tags||[]).map(e=>e.stringValue||e),description:e.description?.stringValue||e.description||"",visibility:(e.visibility?.arrayValue?.values||e.visibility||[]).map(e=>e.stringValue||e),steps:(e.steps?.arrayValue?.values||e.steps||[]).map(e=>e.stringValue||e),videos:this.parseVideos(e.videos),currentVideoPosition:parseInt(e.currentVideoPosition?.integerValue||e.currentVideoPosition||"0"),reps:e.reps?.stringValue||e.reps||"",sets:parseInt(e.sets?.integerValue||e.sets||"0"),weight:parseFloat(e.weight?.doubleValue||e.weight||"0"),author:this.parseExerciseAuthor(e.author?.mapValue?.fields||e.author||{}),createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||e.createdAt||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||e.updatedAt||"0"))}}parseExerciseCategory(e){return"cardio"===(e.id?.stringValue||e.id||"")?{type:"cardio",details:{duration:parseInt(e.duration?.integerValue||e.duration||"0"),bpm:parseInt(e.bpm?.integerValue||e.bpm||"0"),calories:parseInt(e.calories?.integerValue||e.calories||"0"),screenTime:parseInt(e.screenTime?.integerValue||e.screenTime||"0"),selectedVideo:this.parseExerciseVideo(e.selectedVideo?.mapValue?.fields||e.selectedVideo)}}:{type:"weightTraining",details:{reps:e.reps?.stringValue||e.reps||"",sets:parseInt(e.sets?.integerValue||e.sets||"0"),weight:parseFloat(e.weight?.doubleValue||e.weight||"0"),screenTime:parseInt(e.screenTime?.integerValue||e.screenTime||"0"),selectedVideo:this.parseExerciseVideo(e.selectedVideo?.mapValue?.fields||e.selectedVideo)}}}parseBodyParts(e){return(e?.arrayValue?.values||e||[]).map(e=>e.stringValue||e)}parseVideos(e){return(e?.arrayValue?.values||e||[]).map(e=>this.parseExerciseVideo(e.mapValue?.fields||e))}parseExerciseVideo(e){return{id:e.id?.stringValue||e.id||"",exerciseId:e.exerciseId?.stringValue||e.exerciseId||"",username:e.username?.stringValue||e.username||"",userId:e.userId?.stringValue||e.userId||"",videoURL:e.videoURL?.stringValue||e.videoURL||"",fileName:e.fileName?.stringValue||e.fileName||"",exercise:e.exercise?.stringValue||e.exercise||"",profileImage:this.parseProfileImage(e.profileImage?.mapValue?.fields||e.profileImage||{}),caption:e.caption?.stringValue||e.caption||"",gifURL:e.gifURL?.stringValue||e.gifURL||"",thumbnail:e.thumbnail?.stringValue||e.thumbnail||"",visibility:e.visibility?.stringValue||e.visibility||"open",totalAccountsReached:parseInt(e.totalAccountsReached?.integerValue||e.totalAccountsReached||"0"),totalAccountLikes:parseInt(e.totalAccountLikes?.integerValue||e.totalAccountLikes||"0"),totalAccountBookmarked:parseInt(e.totalAccountBookmarked?.integerValue||e.totalAccountBookmarked||"0"),totalAccountUsage:parseInt(e.totalAccountUsage?.integerValue||e.totalAccountUsage||"0"),isApproved:e.isApproved?.booleanValue||e.isApproved||!1,liked:e.liked?.booleanValue||e.liked,bookmarked:e.bookmarked?.booleanValue||e.bookmarked,createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||e.createdAt||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||e.updatedAt||"0"))}}parseProfileImage(e){return{profileImageURL:e.profileImageURL?.stringValue||e.profileImageURL||"",imageOffsetWidth:parseFloat(e.imageOffsetWidth?.doubleValue||e.imageOffsetWidth||"0"),imageOffsetHeight:parseFloat(e.imageOffsetHeight?.doubleValue||e.imageOffsetHeight||"0")}}parseExerciseAuthor(e){return{userId:e.userId?.stringValue||e.userId||"",username:e.username?.stringValue||e.username||""}}async fetchSavedWorkout(e,t){try{let r=(0,a.JU)(i.db,"users",e,"MyCreatedWorkouts",t),s=await (0,a.QT)(r);if(!s.exists())return[null,null];let o=s.data(),n=this.parseWorkoutData(o||{}),d=(0,a.hJ)(i.db,"users",e,"MyCreatedWorkouts",t,"logs"),l=(await (0,a.PL)(d)).docs.map(r=>{let a=r.data();return{id:r.id,workoutId:t,userId:e,exercise:a.exercise,logs:a.log||[],feedback:a.feedback||"",note:a.note||"",recommendedWeight:a.recommendedWeight,isSplit:a.isSplit||!1,isBodyWeight:a.isBodyWeight||!1,logSubmitted:a.logSubmitted||!1,logIsEditing:a.logIsEditing||!1,isCompleted:a.isCompleted||!1,createdAt:a.createdAt instanceof Date?a.createdAt:"function"==typeof a.createdAt?.toDate?a.createdAt.toDate():a.createdAt?new Date(a.createdAt):new Date,updatedAt:a.updatedAt instanceof Date?a.updatedAt:"function"==typeof a.updatedAt?.toDate?a.updatedAt.toDate():a.updatedAt?new Date(a.updatedAt):new Date}});return n.logs=l,[n,l]}catch(e){return console.error("Error fetching saved workout:",e),[null,null]}}async fetchUserChallengesByChallengeId(e){let t=(0,a.hJ)(i.db,"user-challenge"),r=(0,a.IO)(t,(0,a.ar)("challengeId","==",e));try{console.log(`Fetching user challenges for challenge ID: ${e}`);let t=await (0,a.PL)(r);console.log(`Total user challenges fetched: ${t.docs.length}`);let i=t.docs.map(e=>{let t=e.data();return console.log(`Processing user challenge with ID: ${e.id}`,t),{id:e.id,...t,challenge:t.challenge?new c.t({id:t.challenge.id,title:t.challenge.title,subtitle:t.challenge.subtitle,participants:t.challenge.participants||[],status:t.challenge.status,startDate:t.challenge.startDate?new Date(t.challenge.startDate):new Date,endDate:t.challenge.endDate?new Date(t.challenge.endDate):new Date,createdAt:t.challenge.createdAt?new Date(t.challenge.createdAt):new Date,updatedAt:t.challenge.updatedAt?new Date(t.challenge.updatedAt):new Date,introVideoURL:t.challenge.introVideoURL||""}):void 0,createdAt:d(t.createdAt),updatedAt:d(t.updatedAt)}});return console.log("All user challenges after processing:",JSON.stringify(i,null,2)),i}catch(e){throw console.error("Error fetching user challenges by challengeId:",e),e}}async getCollectionById(e){try{let t=(0,a.JU)(i.db,"sweatlist-collection",e),r=await (0,a.QT)(t);if(r.exists())return{id:r.id,...r.data()};throw Error("Collection not found")}catch(e){throw console.error("Error getting collection by ID:",e),e}}async fetchActiveChallenges(){let e=s.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,a.hJ)(i.db,"user-challenge"),r=(0,a.IO)(t,(0,a.ar)("userId","==",e.id));try{console.log(`Fetching challenges for user ID: ${e.id}`);let t=await (0,a.PL)(r);console.log(`Total challenges fetched: ${t.docs.length}`);let i=t.docs.map(e=>{let t=e.data();console.log(`Processing challenge with ID: ${e.id}`,t),console.log("date before format: "+l(t.challenge.startDate));let r=t.challenge?new c.t({id:t.challenge.id,title:t.challenge.title,subtitle:t.challenge.subtitle,participants:t.challenge.participants||[],status:t.challenge.status,startDate:l(t.challenge.startDate),endDate:l(t.challenge.endDate),createdAt:l(t.challenge.createdAt),updatedAt:l(t.challenge.updatedAt),introVideoURL:t.challenge.introVideoURL||""}):void 0;return{id:e.id,...t,challenge:r,createdAt:l(t.createdAt),updatedAt:l(t.updatedAt)}});console.log("All challenges after processing:",JSON.stringify(i,null,2));let s=i.filter(e=>{let t=e.challenge?.endDate;return console.log(`Evaluating challenge ID: ${e.id}, End Date: ${t}, Current Date: ${new Date}`),t&&t>new Date});return console.log(`Total active challenges: ${s.length}`,s),s}catch(e){throw console.error("Error fetching active challenges:",e),e}}async fetchUserChallenges(){let e=s.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,a.hJ)(i.db,"user-challenge"),r=(0,a.IO)(t,(0,a.ar)("userId","==",e.id));try{return(await (0,a.PL)(r)).docs.map(e=>({id:e.id,...e.data()}))}catch(e){throw console.error("Error fetching user challenges:",e),Error("Failed to fetch user challenges")}}async fetchCurrentWorkoutSession(){let e=s.W4.currentUser;if(!e?.id)throw Error("No user is signed in");let t=(0,a.hJ)(i.db,"users",e.id,"workoutSessions"),r=(0,a.IO)(t,(0,a.ar)("status","==",o.Z0.QueuedUp)),n=await (0,a.PL)(r);return n.empty&&(r=(0,a.IO)(t,(0,a.ar)("status","==",o.Z0.InProgress)),(n=await (0,a.PL)(r)).empty)?{workout:null,logs:null}:this.processWorkoutSessionDocument(n.docs[0])}async processWorkoutSessionDocument(e){let t=e.data();return{workout:{id:e.id,...t,createdAt:t.createdAt?.toDate()??new Date,updatedAt:t.updatedAt?.toDate()??new Date},logs:[]}}async saveWorkoutSession(e){let{workout:t,logs:r}=e,n=s.W4.currentUser;if(!n?.id)throw Error("No user is signed in");try{let e=new Date,s={...t,workoutStatus:o.Z0.QueuedUp,createdAt:e,updatedAt:e,startTime:e,roundWorkoutId:t.id},d=r.map((t,r)=>({...t,id:`${t.id}-${e.getTime()}`,workoutId:s.id,order:r,createdAt:e,updatedAt:e,logSubmitted:!1,isCompleted:!1})),l=(0,a.JU)((0,a.hJ)(i.db,"users",n.id,"workoutSessions"));await (0,a.pl)(l,{...s,logs:d}),this._currentWorkout=new o.oQ(s),this._currentWorkoutLogs=d;let c=(0,a.JU)(i.db,"users",n.id);return await (0,a.r7)(c,{currentWorkoutSessionId:l.id}),this._currentWorkout}catch(e){throw console.error("Error saving workout session:",e),e}}async joinChallenge(e){let{username:t,challengeId:r}=e;if(!s.W4.currentUser)throw Error("No user is signed in");let o=(0,a.hJ)(i.db,"users"),n=(0,a.IO)(o,(0,a.ar)("username","==",t)),d=await (0,a.PL)(n);if(d.empty)throw Error("User not found");let l=d.docs[0],c=l.data(),u=l.id,h=(0,a.JU)(i.db,"sweatlist-collection",r),p=await (0,a.QT)(h);if(!p.exists())throw Error("Challenge not found");let g=p.data(),m=`${r}-${u}-${Date.now()}`,f={id:m,challenge:g,challengeId:r,userId:u,fcmToken:c.fcmToken||"",profileImage:c.profileImage||{},progress:0,completedWorkouts:[],isCompleted:!1,uid:u,location:c.location||null,city:"",country:"",timezone:"",username:t,joinDate:new Date,createdAt:new Date,updatedAt:new Date,pulsePoints:{baseCompletion:0,firstCompletion:0,streakBonus:0,checkInBonus:0,effortRating:0,chatParticipation:0,locationCheckin:0,contentEngagement:0,encouragementSent:0,encouragementReceived:0},currentStreak:0,encouragedUsers:[],encouragedByUsers:[],checkIns:[]};await (0,a.pl)((0,a.JU)(i.db,"user-challenge",m),f)}constructor(){this._currentWorkout=null,this._currentWorkoutLogs=[]}}let h=new u},4454:function(e,t,r){r.d(t,{Bc:function(){return d},P7:function(){return h},Z0:function(){return o},c_:function(){return c},oQ:function(){return u}});var a,i,s,o,n,d,l=r(3530);(a=o||(o={})).QueuedUp="queuedUp",a.InProgress="inProgress",a.Complete="complete",a.Archived="archived",(i=n||(n={})).TooHard="Too Hard",i.TooEasy="Too Easy",i.JustRight="Just Right",(s=d||(d={})).LowerBody="Lower Body",s.UpperBody="Upper Body",s.FullBody="Full Body",s.Core="Core";class c{static fromFirebase(e){return{reps:e.reps||0,weight:e.weight||0,leftReps:e.leftReps||0,leftWeight:e.leftWeight||0,isSplit:e.isSplit||!1,isBodyWeight:e.isBodyWeight||!1,duration:e.duration||0,calories:e.calories||0,bpm:e.bpm||0}}}class u{constructor(e){this.id=e.id,this.collectionId=e.collectionId,this.roundWorkoutId=e.roundWorkoutId,this.exercises=e.exercises,this.challenge=e.challenge,this.logs=e.logs,this.title=e.title,this.description=e.description,this.duration=e.duration,this.workoutRating=e.workoutRating,this.useAuthorContent=e.useAuthorContent,this.isCompleted=e.isCompleted,this.workoutStatus=e.workoutStatus,this.startTime=e.startTime,this.order=e.order,this.author=e.author,this.createdAt=e.createdAt,this.updatedAt=e.updatedAt,this.zone=u.determineWorkoutZone(e.exercises)}static estimatedDuration(e){return Math.max(5*Math.round((5+8*e.length+1*Math.max(0,e.length-1)+5)/5),10)}static determineWorkoutZone(e){let t=new Set;for(let r of e)for(let e of r.exercise.primaryBodyParts||[r.exercise.primaryBodyParts])t.add(e);let r=new Set([l.mn.Chest,l.mn.Shoulders,l.mn.Biceps,l.mn.Triceps,l.mn.Traps,l.mn.Lats,l.mn.Forearms]),a=new Set([l.mn.Hamstrings,l.mn.Glutes,l.mn.Quadriceps,l.mn.Calves]),i=new Set([l.mn.Abs,l.mn.Lowerback]),s=(e,t)=>Array.from(e).some(e=>t.has(e)),o=s(t,r),n=s(t,a),d=s(t,i);return o&&n&&d||o&&n?"Full Body":o&&d||o?"Upper Body":n&&d||n?"Lower Body":d?"Core":"Full Body"}static toDictionary(e){return{id:e.id,collectionId:e.collectionId,roundWorkoutId:e.roundWorkoutId,exercises:e.exercises,challenge:e.challenge,logs:e.logs,title:e.title,description:e.description,duration:e.duration,workoutRating:e.workoutRating,useAuthorContent:e.useAuthorContent,isCompleted:e.isCompleted,workoutStatus:e.workoutStatus,startTime:e.startTime,order:e.order,author:e.author,createdAt:e.createdAt,updatedAt:e.updatedAt,zone:e.zone}}}class h{constructor(e){this.id=e.id,this.workoutId=e.workoutId,this.exercises=e.exercises.map(e=>l.lg.fromFirebase(e)),this.bodyParts=e.bodyParts,this.secondaryBodyParts=e.secondaryBodyParts,this.workoutTitle=e.workoutTitle,this.caloriesBurned=e.caloriesBurned,this.workoutRating=e.workoutRating,this.exercisesCompleted=e.exercisesCompleted.map(e=>l.lg.fromFirebase(e)),this.aiInsight=e.aiInsight,this.recommendations=e.recommendations,this.gifURLs=e.gifURLs,this.recommendedWork=e.recommendedWork,this.isCompleted=e.isCompleted,this.createdAt=e.createdAt?new Date(e.createdAt):new Date,this.updatedAt=e.updatedAt?new Date(e.updatedAt):new Date,this.completedAt=e.completedAt?new Date(e.completedAt):null,this.duration=e.duration}static fromFirebase(e){return new h({id:e.id||"",workoutId:e.workoutId||"",exercises:e.exercises||[],bodyParts:e.bodyParts||[],secondaryBodyParts:e.secondaryBodyParts||[],workoutTitle:e.workoutTitle||"",caloriesBurned:e.caloriesBurned||0,workoutRating:e.workoutRating,exercisesCompleted:e.exercisesCompleted||[],aiInsight:e.aiInsight||"",recommendations:e.recommendations||[],gifURLs:e.gifURLs||[],recommendedWork:e.recommendedWork,isCompleted:e.isCompleted||!1,createdAt:e.createdAt,updatedAt:e.updatedAt,completedAt:e.completedAt,duration:e.duration||""})}}},1402:function(e,t,r){var a,i;r.d(t,{t:function(){return s}}),(i=a||(a={})).Draft="draft",i.Published="published",i.Completed="completed",i.Cancelled="cancelled";class s{constructor(e){this.id=e.id,this.title=e.title,this.subtitle=e.subtitle,this.participants=e.participants,this.status=e.status,this.startDate=e.startDate,this.endDate=e.endDate,this.createdAt=e.createdAt,this.updatedAt=e.updatedAt,this.introVideoURL=e.introVideoURL,this.durationInDays=this.calculateDurationInDays()}calculateDurationInDays(){let e=this.startDate?.valueOf(),t=this.endDate?.valueOf();if(!e||!t||isNaN(e)||isNaN(t))throw Error("Invalid startDate or endDate");return Math.ceil((t-e)/864e5)}}}}]);
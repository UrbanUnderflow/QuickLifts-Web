"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[696],{8696:function(e,a,t){var r=t(7066),s=t(6928),l=t(3577);class o{constructor(){console.log("WorkoutService instance created")}static get sharedInstance(){return o.instance||(o.instance=new o),o.instance}async fetchSavedWorkout(e,a){console.log(`Fetching saved workout. UserID: ${e}, WorkoutID: ${a}`);let t="https://firestore.googleapis.com/v1/projects/quicklifts-dd3f1/databases/(default)/documents",s=`${t}/users/${e}/MyCreatedWorkouts/${a}`;try{let l=await r.Z.get(s);if(200!==l.status)return console.error("Error response from server:",l.status,l.statusText),[null,null];let o=l.data.fields,i=this.parseWorkout(o),u=`${t}/users/${e}/MyCreatedWorkouts/${a}/logs`,n=await r.Z.get(u);if(200!==n.status)return[i,null];let d=(n.data.documents||[]).map(e=>this.parseExerciseLog(e.fields));return[i,d]}catch(e){return r.Z.isAxiosError(e)&&console.error("Axios error details:",e.response?.data),[null,null]}}async fetchCollectionWithSweatLists(e){let a=`https://firestore.googleapis.com/v1/projects/quicklifts-dd3f1/databases/(default)/documents/sweatlist-collection/${e}`;try{let e=await r.Z.get(a);if(200!==e.status)throw console.error("Error response from server:",e.status,e.statusText),Error("Failed to fetch collection");let t=e.data.fields,s=this.parseCollection(t);console.log(s);let l=[];for(let e of s.sweatlistIds)try{let[a]=await this.fetchSavedWorkout(e.sweatlistAuthorId,e.id);a&&l.push(a)}catch(a){console.error(`Error fetching workout with ID ${e.id}:`,a)}return{collection:s,sweatLists:l}}catch(e){throw console.error("Error fetching collection with sweat lists:",e),e}}parseCollection(e){let a;let t=e.id?.stringValue||"",r=e.title?.stringValue||"",s=e.subtitle?.stringValue||"",o=e.challenge?.mapValue?.fields?this.parseChallenge(e.challenge.mapValue.fields):void 0,i=(e.sweatlistIds?.arrayValue?.values||[]).map(e=>({id:e.mapValue?.fields?.id?.stringValue||"",sweatlistAuthorId:e.mapValue?.fields?.sweatlistAuthorId?.stringValue||"",order:parseInt(e.mapValue?.fields?.order?.integerValue||"0")})),u=e.ownerId?.stringValue||"",n=parseFloat(e.createdAt?.doubleValue||"0"),d=parseFloat(e.updatedAt?.doubleValue||"0");return a=o?l.cS.Together:e.privacy?.stringValue||l.cS.Solo,{id:t,title:r,subtitle:s,challenge:o,sweatlistIds:i,ownerId:u,privacy:a,createdAt:new Date(1e3*n),updatedAt:new Date(1e3*d)}}parseChallenge(e){if(!e)return;let a=e.status?.stringValue||"draft";return{id:e.id?.stringValue||"",title:e.title?.stringValue||"",subtitle:e.subtitle?.stringValue||"",status:a,participants:this.parseParticipants(e.participants?.arrayValue?.values||[]),startDate:new Date(1e3*parseFloat(e.startDate?.doubleValue||"0")),endDate:new Date(1e3*parseFloat(e.endDate?.doubleValue||"0")),createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||"0"))}}parseParticipants(e){return e.map(e=>{let a=e.mapValue?.fields||{};return{id:a.id?.stringValue||"",challengeId:a.challengeId?.stringValue||"",userId:a.userId?.stringValue||"",username:a.username?.stringValue||"",profileImage:this.parseProfileImage(a.profileImage?.mapValue?.fields||{}),progress:parseFloat(a.progress?.doubleValue||"0"),completedWorkouts:a.completedWorkouts?.arrayValue?.values?.map(e=>e.stringValue)||[],isCompleted:a.isCompleted?.booleanValue||!1,location:a.location?{latitude:parseFloat(a.location.mapValue?.fields?.latitude?.doubleValue||"0"),longitude:parseFloat(a.location.mapValue?.fields?.longitude?.doubleValue||"0")}:void 0,city:a.city?.stringValue||"",country:a.country?.stringValue,timezone:a.timezone?.stringValue,joinDate:new Date(1e3*parseFloat(a.joinDate?.doubleValue||"0")),createdAt:new Date(1e3*parseFloat(a.createdAt?.doubleValue||"0")),updatedAt:new Date(1e3*parseFloat(a.updatedAt?.doubleValue||"0")),pulsePoints:{baseCompletion:parseFloat(a.pulsePoints?.mapValue?.fields?.baseCompletion?.doubleValue||"0"),firstCompletion:parseFloat(a.pulsePoints?.mapValue?.fields?.firstCompletion?.doubleValue||"0"),streakBonus:parseFloat(a.pulsePoints?.mapValue?.fields?.streakBonus?.doubleValue||"0"),checkInBonus:parseFloat(a.pulsePoints?.mapValue?.fields?.checkInBonus?.doubleValue||"0"),effortRating:parseFloat(a.pulsePoints?.mapValue?.fields?.effortRating?.doubleValue||"0"),chatParticipation:parseFloat(a.pulsePoints?.mapValue?.fields?.chatParticipation?.doubleValue||"0"),locationCheckin:parseFloat(a.pulsePoints?.mapValue?.fields?.locationCheckin?.doubleValue||"0"),contentEngagement:parseFloat(a.pulsePoints?.mapValue?.fields?.contentEngagement?.doubleValue||"0"),encouragementSent:parseFloat(a.pulsePoints?.mapValue?.fields?.encouragementSent?.doubleValue||"0"),encouragementReceived:parseFloat(a.pulsePoints?.mapValue?.fields?.encouragementReceived?.doubleValue||"0")},currentStreak:parseInt(a.currentStreak?.integerValue||"0"),encouragedUsers:a.encouragedUsers?.arrayValue?.values?.map(e=>e.stringValue)||[],encouragedByUsers:a.encouragedByUsers?.arrayValue?.values?.map(e=>e.stringValue)||[],checkIns:(a.checkIns?.arrayValue?.values||[]).map(e=>new Date(1e3*parseFloat(e.doubleValue||"0")))}})}parseWorkout(e){let a=e.id?.stringValue||"",t=e.title?.stringValue||"",r=parseInt(e.duration?.integerValue||"0"),l=e.workoutRating?.stringValue||"",o=e.workoutStatus?.stringValue||"",i=e.isCompleted?.booleanValue||!1,u=e.author?.stringValue||"",n=parseFloat(e.createdAt?.doubleValue||"0"),d=parseFloat(e.updatedAt?.doubleValue||"0"),p=e.zone?.stringValue||s.B.FullBody;return{id:a,exercises:(e.exercises?.arrayValue?.values||[]).map(e=>{let a=e.mapValue?.fields?.exercise?.mapValue?.fields||{};return{exercise:this.parseExercise(a),groupId:parseInt(e.mapValue?.fields?.groupId?.integerValue||"0")}}),logs:(e.logs?.arrayValue?.values||[]).map(e=>this.parseExerciseLog(e.mapValue?.fields||{})),title:t,duration:r,workoutRating:l,workoutStatus:o,useAuthorContent:e.useAuthorContent?.booleanValue||!1,isCompleted:i,author:u,createdAt:new Date(1e3*n),updatedAt:new Date(1e3*d),zone:p,estimatedDuration:()=>0,determineWorkoutZone:()=>s.B.FullBody,toDictionary:()=>({})}}parseExerciseLog(e){let a=e.id?.stringValue||"",t=e.workoutId?.stringValue||"",r=e.userId?.stringValue||"",s=e.feedback?.stringValue||"",l=e.note?.stringValue||"",o=e.recommendedWeight?.stringValue,i=e.isSplit?.booleanValue||!1,u=e.isBodyWeight?.booleanValue||!1,n=e.logSubmitted?.booleanValue||!1,d=e.logIsEditing?.booleanValue||!1,p=e.isCompleted?.booleanValue||!1,c=parseFloat(e.createdAt?.doubleValue||"0"),V=parseFloat(e.updatedAt?.doubleValue||"0");return{id:a,workoutId:t,userId:r,exercise:this.parseExercise(e.exercise?.mapValue?.fields||{}),logs:(e.log?.arrayValue?.values||[]).map(e=>{let a=e.mapValue?.fields||{};return{reps:parseInt(a.reps?.integerValue||"0"),weight:parseFloat(a.weight?.doubleValue||"0"),leftReps:parseInt(a.leftReps?.integerValue||"0"),leftWeight:parseFloat(a.leftWeight?.doubleValue||"0"),isSplit:a.isSplit?.booleanValue||!1,isBodyWeight:a.isBodyWeight?.booleanValue||!1,isCompleted:a.isCompleted?.booleanValue||!1,duration:parseInt(a.duration?.integerValue||"0"),calories:parseInt(a.calories?.integerValue||"0"),bpm:parseInt(a.bpm?.integerValue||"0")}}),feedback:s,note:l,recommendedWeight:o,isSplit:i,isBodyWeight:u,logSubmitted:n,logIsEditing:d,isCompleted:p,createdAt:new Date(1e3*c),updatedAt:new Date(1e3*V)}}parseExercise(e){return{id:e.id?.stringValue||"",name:e.name?.stringValue||"",category:this.parseExerciseCategory(e.category?.mapValue?.fields||{}),primaryBodyParts:this.parseBodyParts(e.primaryBodyParts),secondaryBodyParts:this.parseBodyParts(e.secondaryBodyParts),tags:e.tags?.arrayValue?.values?.map(e=>e.stringValue)||[],description:e.description?.stringValue||"",visibility:e.visibility?.arrayValue?.values?.map(e=>e.stringValue)||[],steps:e.steps?.arrayValue?.values?.map(e=>e.stringValue)||[],videos:this.parseVideos(e.videos),currentVideoPosition:parseInt(e.currentVideoPosition?.integerValue||"0"),reps:e.reps?.stringValue||"",sets:parseInt(e.sets?.integerValue||"0"),weight:parseFloat(e.weight?.doubleValue||"0"),author:this.parseExerciseAuthor(e.author?.mapValue?.fields||{}),createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||"0"))}}parseExerciseCategory(e){return"cardio"===(e.id?.stringValue||"")?{type:"cardio",details:{duration:parseInt(e.duration?.integerValue||"0"),bpm:parseInt(e.bpm?.integerValue||"0"),calories:parseInt(e.calories?.integerValue||"0"),screenTime:parseInt(e.screenTime?.integerValue||"0"),selectedVideo:this.parseExerciseVideo(e.selectedVideo?.mapValue?.fields)}}:{type:"weightTraining",details:{reps:e.reps?.stringValue||"",sets:parseInt(e.sets?.integerValue||"0"),weight:parseFloat(e.weight?.doubleValue||"0"),screenTime:parseInt(e.screenTime?.integerValue||"0"),selectedVideo:this.parseExerciseVideo(e.selectedVideo?.mapValue?.fields)}}}parseBodyParts(e){return(e?.arrayValue?.values||[]).map(e=>e.stringValue)}parseVideos(e){return(e?.arrayValue?.values||[]).map(e=>this.parseExerciseVideo(e.mapValue?.fields||{}))}parseExerciseVideo(e){return{id:e.id?.stringValue||"",exerciseId:e.exerciseId?.stringValue||"",username:e.username?.stringValue||"",userId:e.userId?.stringValue||"",videoURL:e.videoURL?.stringValue||"",fileName:e.fileName?.stringValue||"",exercise:e.exercise?.stringValue||"",profileImage:this.parseProfileImage(e.profileImage?.mapValue?.fields||{}),caption:e.caption?.stringValue||"",gifURL:e.gifURL?.stringValue||"",thumbnail:e.thumbnail?.stringValue||"",visibility:e.visibility?.stringValue||"open",totalAccountsReached:parseInt(e.totalAccountsReached?.integerValue||"0"),totalAccountLikes:parseInt(e.totalAccountLikes?.integerValue||"0"),totalAccountBookmarked:parseInt(e.totalAccountBookmarked?.integerValue||"0"),totalAccountUsage:parseInt(e.totalAccountUsage?.integerValue||"0"),isApproved:e.isApproved?.booleanValue||!1,liked:e.liked?.booleanValue,bookmarked:e.bookmarked?.booleanValue,createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||"0"))}}parseProfileImage(e){return{profileImageURL:e.profileImageURL?.stringValue||"",imageOffsetWidth:parseFloat(e.imageOffsetWidth?.doubleValue||"0"),imageOffsetHeight:parseFloat(e.imageOffsetHeight?.doubleValue||"0")}}parseComments(e){return(e?.arrayValue?.values||[]).map(e=>this.parseComment(e.mapValue?.fields||{}))}parseComment(e){return{id:e.id?.stringValue||"",username:e.username?.stringValue||"",text:e.text?.stringValue||"",createdAt:new Date(1e3*parseFloat(e.createdAt?.doubleValue||"0")),updatedAt:new Date(1e3*parseFloat(e.updatedAt?.doubleValue||"0"))}}parseExerciseAuthor(e){return{userId:e.userId?.stringValue||"",username:e.username?.stringValue||""}}}a.Z=o},6928:function(e,a,t){var r,s;t.d(a,{B:function(){return r}}),(s=r||(r={})).LowerBody="Lower Body",s.UpperBody="Upper Body",s.FullBody="Full Body",s.Core="Core"},1402:function(e,a,t){var r,s;t.d(a,{D:function(){return r}}),(s=r||(r={})).Draft="draft",s.Published="published",s.Completed="completed",s.Cancelled="cancelled"},3577:function(e,a,t){var r,s;t.d(a,{cS:function(){return r}}),t(1402),(s=r||(r={})).Together="together",s.Solo="solo",s.Locked="locked"}}]);
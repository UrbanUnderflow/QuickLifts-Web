"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/firebase/exercise/types.ts":
/*!********************************************!*\
  !*** ./src/api/firebase/exercise/types.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyPart: function() { return /* binding */ BodyPart; },\n/* harmony export */   Exercise: function() { return /* binding */ Exercise; },\n/* harmony export */   ExerciseAuthor: function() { return /* binding */ ExerciseAuthor; },\n/* harmony export */   ExerciseCategory: function() { return /* binding */ ExerciseCategory; },\n/* harmony export */   ExerciseDetail: function() { return /* binding */ ExerciseDetail; },\n/* harmony export */   ExerciseLog: function() { return /* binding */ ExerciseLog; },\n/* harmony export */   ExerciseVideo: function() { return /* binding */ ExerciseVideo; },\n/* harmony export */   isAdvancedBodyPart: function() { return /* binding */ isAdvancedBodyPart; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ \"./node_modules/@swc/helpers/esm/_class_call_check.js\");\n/* harmony import */ var _swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/_/_object_spread */ \"./node_modules/@swc/helpers/esm/_object_spread.js\");\n/* harmony import */ var _swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/_/_to_consumable_array */ \"./node_modules/@swc/helpers/esm/_to_consumable_array.js\");\n/* harmony import */ var _workout_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../workout/types */ \"./src/api/firebase/workout/types.ts\");\n/* harmony import */ var _user_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../user/types */ \"./src/api/firebase/user/types.ts\");\n/* harmony import */ var _utils_formatDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/formatDate */ \"./src/utils/formatDate.ts\");\n/* harmony import */ var _exerciseLog_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../exerciseLog/service */ \"./src/api/firebase/exerciseLog/service.ts\");\n\n\n\n\n\n\n\nvar BodyPart;\n(function(BodyPart) {\n    BodyPart[\"Biceps\"] = \"biceps\";\n    BodyPart[\"Triceps\"] = \"triceps\";\n    BodyPart[\"Chest\"] = \"chest\";\n    BodyPart[\"Calves\"] = \"calves\";\n    BodyPart[\"Abs\"] = \"abs\";\n    BodyPart[\"Hamstrings\"] = \"hamstrings\";\n    BodyPart[\"Back\"] = \"back\";\n    BodyPart[\"Glutes\"] = \"glutes\";\n    BodyPart[\"Quadriceps\"] = \"quadriceps\";\n    BodyPart[\"Forearms\"] = \"forearms\";\n    BodyPart[\"Shoulders\"] = \"shoulders\";\n    BodyPart[\"Lowerback\"] = \"lowerback\";\n    // advanced\n    BodyPart[\"Lats\"] = \"lats\";\n    BodyPart[\"Traps\"] = \"traps\";\n    BodyPart[\"Rhomboids\"] = \"rhomboids\";\n    BodyPart[\"Deltoids\"] = \"deltoids\";\n    BodyPart[\"Fullbody\"] = \"fullbody\";\n})(BodyPart || (BodyPart = {}));\n// Function to check if a body part is advanced\nfunction isAdvancedBodyPart(bodyPart) {\n    return [\n        \"traps\",\n        \"lats\",\n        \"rhomboids\",\n        \"deltoids\"\n    ].includes(bodyPart);\n}\nvar ExerciseLog = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseLog(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_4__._)(this, ExerciseLog);\n        this.id = data.id || \"\";\n        this.workoutId = data.workoutId || \"\";\n        this.userId = data.userId || \"\";\n        this.exercise = data.exercise instanceof Exercise ? data.exercise : new Exercise(data.exercise);\n        this.logs = (data.logs || []).map(function(log) {\n            return new _workout_types__WEBPACK_IMPORTED_MODULE_0__.RepsAndWeightLog(log);\n        });\n        this.feedback = data.feedback || \"\";\n        this.note = data.note || \"\";\n        this.recommendedWeight = data.recommendedWeight || \"calculating...\";\n        this.isSplit = data.isSplit || false;\n        this.isBodyWeight = data.isBodyWeight || false;\n        this.logSubmitted = data.logSubmitted || false;\n        this.logIsEditing = data.logIsEditing || false;\n        this.isCompleted = data.isCompleted || false;\n        this.order = data.order || null;\n        this.completedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.completedAt);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = ExerciseLog.prototype;\n    _proto.setIsSubmitted = function setIsSubmitted(isSubmitted) {\n        this.logSubmitted = isSubmitted;\n    };\n    _proto.fetchTotalWeightLifted = function fetchTotalWeightLifted(user) {\n        var _user_bodyWeight_at, _user_bodyWeight;\n        var bodyWeight = Math.max((user === null || user === void 0 ? void 0 : (_user_bodyWeight = user.bodyWeight) === null || _user_bodyWeight === void 0 ? void 0 : (_user_bodyWeight_at = _user_bodyWeight.at(-1)) === null || _user_bodyWeight_at === void 0 ? void 0 : _user_bodyWeight_at.newWeight) || 150, 1);\n        var totalWeightLifted = 0;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = this.logs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var log = _step.value;\n                totalWeightLifted += (log.weight + (log.isBodyWeight ? bodyWeight : 0)) * log.reps;\n                if (log.isSplit) {\n                    totalWeightLifted += log.leftWeight * log.leftReps;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return totalWeightLifted;\n    };\n    _proto.calculateWorkScore = function calculateWorkScore(user, workoutId, workoutSummaries) {\n        var _user_bodyWeight_at, _user_bodyWeight;\n        var bodyWeight = Math.max((user === null || user === void 0 ? void 0 : (_user_bodyWeight = user.bodyWeight) === null || _user_bodyWeight === void 0 ? void 0 : (_user_bodyWeight_at = _user_bodyWeight.at(-1)) === null || _user_bodyWeight_at === void 0 ? void 0 : _user_bodyWeight_at.newWeight) || 150, 1);\n        var intensityWeight = 0.4;\n        var volumeWeight = 0.4;\n        var allLogs = this.getLogsForExercise(workoutSummaries, this.exercise.name);\n        var averageTotalWeight = allLogs.length === 0 ? 0 : allLogs.reduce(function(sum, log) {\n            return sum + log.weight;\n        }, 0) / allLogs.length;\n        var workScore = 0;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = this.logs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var logItem = _step.value;\n                var totalWeight = logItem.weight + bodyWeight;\n                var intensityFactor = totalWeight / bodyWeight;\n                var volumeFactor = logItem.reps;\n                var percentageOfAverage = totalWeight / Math.max(averageTotalWeight, 1) * 100;\n                var progressiveScore = 0;\n                if (percentageOfAverage >= 90) progressiveScore = 40;\n                else if (percentageOfAverage >= 80) progressiveScore = 35;\n                else if (percentageOfAverage >= 70) progressiveScore = 30;\n                workScore += intensityFactor * volumeFactor * intensityWeight + progressiveScore * volumeWeight;\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return Math.round(workScore);\n    };\n    _proto.getLogsForExercise = function getLogsForExercise(workoutSummaries, exerciseName) {\n        return (workoutSummaries === null || workoutSummaries === void 0 ? void 0 : workoutSummaries.flatMap(function(summary) {\n            return summary.exercisesCompleted;\n        }).filter(function(log) {\n            return log.exercise.name === exerciseName;\n        }).flatMap(function(log) {\n            return log.logs;\n        })) || [];\n    };\n    _proto.checkIfAnyPastLogsWereBodyWeight = function checkIfAnyPastLogsWereBodyWeight(workoutSummaries) {\n        var _this = this;\n        var allLogItems = workoutSummaries.flatMap(function(summary) {\n            return summary.exercisesCompleted;\n        }).filter(function(log) {\n            return log.exercise.name === _this.exercise.name;\n        }).flatMap(function(log) {\n            return log.logs;\n        });\n        var nonBodyWeightLogs = allLogItems.filter(function(log) {\n            return !log.isBodyWeight;\n        });\n        var hasBodyWeightLogs = allLogItems.some(function(log) {\n            return log.isBodyWeight;\n        });\n        if (nonBodyWeightLogs.length === 0) {\n            return {\n                hasBodyWeightLogs: hasBodyWeightLogs,\n                averageWeight: 0\n            };\n        }\n        var totalWeight = nonBodyWeightLogs.reduce(function(sum, log) {\n            return sum + log.weight;\n        }, 0);\n        var averageWeight = totalWeight / nonBodyWeightLogs.length;\n        return {\n            hasBodyWeightLogs: hasBodyWeightLogs,\n            averageWeight: averageWeight\n        };\n    };\n    _proto.fetchHighestTWL = function fetchHighestTWL(workoutSummaries, user) {\n        var _this = this;\n        var _Math;\n        var exerciseWorkouts = workoutSummaries === null || workoutSummaries === void 0 ? void 0 : workoutSummaries.filter(function(summary) {\n            return summary.exercisesCompleted.some(function(log) {\n                return log.exercise.name === _this.exercise.name;\n            });\n        });\n        if (!(exerciseWorkouts === null || exerciseWorkouts === void 0 ? void 0 : exerciseWorkouts.length)) return null;\n        var twls = exerciseWorkouts.map(function(summary) {\n            return summary.exercisesCompleted.reduce(function(total, log) {\n                return log.exercise.name === _this.exercise.name ? total + log.fetchTotalWeightLifted(user) : total;\n            }, 0);\n        });\n        return (_Math = Math).max.apply(_Math, (0,_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_5__._)(twls));\n    };\n    _proto.fetchHighestWeightInSet = function fetchHighestWeightInSet(workoutSummaries) {\n        var _this = this;\n        var exerciseWorkouts = workoutSummaries === null || workoutSummaries === void 0 ? void 0 : workoutSummaries.filter(function(summary) {\n            return summary.exercisesCompleted.some(function(log) {\n                return log.exercise.name === _this.exercise.name;\n            });\n        });\n        if (!(exerciseWorkouts === null || exerciseWorkouts === void 0 ? void 0 : exerciseWorkouts.length)) return {\n            weight: null,\n            reps: null\n        };\n        var weightAndReps = exerciseWorkouts.flatMap(function(summary) {\n            return summary.exercisesCompleted.flatMap(function(log) {\n                return log.exercise.name === _this.exercise.name ? log.logs.map(function(logItem) {\n                    return {\n                        weight: logItem.weight,\n                        reps: logItem.reps\n                    };\n                }) : [];\n            });\n        });\n        if (!weightAndReps.length) return {\n            weight: null,\n            reps: null\n        };\n        var maxWeightEntry = weightAndReps.reduce(function(max, current) {\n            return current.weight > max.weight ? current : max;\n        });\n        return {\n            weight: maxWeightEntry.weight,\n            reps: maxWeightEntry.reps\n        };\n    };\n    _proto.fetchTotalReps = function fetchTotalReps() {\n        return this.logs.reduce(function(total, log) {\n            return total + log.reps;\n        }, 0);\n    };\n    _proto.fetchTotalSessions = function fetchTotalSessions(allLogs) {\n        var _this = this;\n        return allLogs.filter(function(log) {\n            return log.exercise.name === _this.exercise.name;\n        }).length;\n    };\n    _proto.fetchTotalCompletedSets = function fetchTotalCompletedSets() {\n        return this.logs.filter(function(log) {\n            return log.reps > 0;\n        }).length;\n    };\n    _proto.isLogComplete = function isLogComplete() {\n        return this.logs.some(function(log) {\n            return log.reps > 0;\n        });\n    };\n    _proto.updateLog = function updateLog(workout) {\n        _exerciseLog_service__WEBPACK_IMPORTED_MODULE_3__.exerciseLogService.updateExerciseLog(this, workout);\n    };\n    _proto.toDictionary = function toDictionary() {\n        var data = {\n            id: this.id,\n            workoutId: this.workoutId,\n            userId: this.userId,\n            exercise: this.exercise.toDictionary(),\n            logs: this.logs.map(function(log) {\n                return log.toDictionary();\n            }),\n            feedback: this.feedback,\n            note: this.note,\n            isSplit: this.isSplit,\n            isBodyWeight: this.isBodyWeight,\n            logSubmitted: this.logSubmitted,\n            logIsEditing: this.logIsEditing,\n            isCompleted: this.isCompleted,\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.updatedAt),\n            completedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.completedAt),\n            recommendedWeight: this.recommendedWeight\n        };\n        if (this.order != null) {\n            data[\"order\"] = this.order;\n        }\n        return data;\n    };\n    ExerciseLog.fetchHighestWeightLiftedForExercise = function fetchHighestWeightLiftedForExercise(exerciseName, workoutSummaries) {\n        var _Math;\n        var exerciseWorkouts = workoutSummaries === null || workoutSummaries === void 0 ? void 0 : workoutSummaries.filter(function(summary) {\n            return summary.exercisesCompleted.some(function(log) {\n                return log.exercise.name === exerciseName;\n            });\n        });\n        if (!(exerciseWorkouts === null || exerciseWorkouts === void 0 ? void 0 : exerciseWorkouts.length)) return null;\n        var weights = exerciseWorkouts.flatMap(function(summary) {\n            return summary.exercisesCompleted.flatMap(function(log) {\n                if (log.exercise.name !== exerciseName) return [];\n                return log.logs.map(function(logItem) {\n                    return logItem.isSplit ? Math.max(logItem.weight, logItem.leftWeight) : logItem.weight;\n                });\n            });\n        });\n        return weights.length ? (_Math = Math).max.apply(_Math, (0,_swc_helpers_to_consumable_array__WEBPACK_IMPORTED_MODULE_5__._)(weights)) : null;\n    };\n    return ExerciseLog;\n}();\n// Helper functions to mimic Swift enum behavior\nvar ExerciseCategory = {\n    weightTraining: function(details) {\n        return {\n            type: \"weight-training\",\n            details: details\n        };\n    },\n    cardio: function(details) {\n        return {\n            type: \"cardio\",\n            details: details\n        };\n    },\n    fromIdentifier: function(identifier) {\n        switch(identifier){\n            case \"weight-training\":\n                return ExerciseCategory.weightTraining({\n                    reps: [\n                        \"12\"\n                    ],\n                    sets: 3,\n                    weight: 0.0,\n                    screenTime: 0,\n                    selectedVideo: null\n                });\n            case \"cardio\":\n                return ExerciseCategory.cardio({\n                    duration: 20,\n                    bpm: 125,\n                    calories: 0,\n                    screenTime: 0,\n                    selectedVideo: null\n                });\n            default:\n                return null;\n        }\n    },\n    identifier: function(category) {\n        switch(category.type){\n            case \"weight-training\":\n                return \"weight-training\";\n            case \"cardio\":\n                return \"cardio\";\n        }\n    }\n};\n// Usage examples:\n// const weightTraining = ExerciseCategory.weightTraining({ reps: '10', sets: 3, weight: 50 });\n// const cardio = ExerciseCategory.cardio({ duration: 30, bpm: 140, calories: 300 });\n// const fromId = ExerciseCategory.fromIdentifier('weight-training');\n// const id = ExerciseCategory.identifier(weightTraining);\nvar Exercise = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Exercise(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_4__._)(this, Exercise);\n        this.id = data.id || \"\";\n        this.name = data.name || \"\";\n        this.description = data.description || \"\";\n        this.primaryBodyParts = data.primaryBodyParts || [];\n        this.secondaryBodyParts = data.secondaryBodyParts || [];\n        this.tags = data.tags || [];\n        this.videos = (data.videos || []).map(function(video) {\n            return new ExerciseVideo(video);\n        });\n        this.steps = data.steps || [];\n        this.visibility = data.visibility || \"live\";\n        this.currentVideoPosition = data.currentVideoPosition || 0;\n        this.sets = data.sets || 0;\n        this.reps = data.reps || \"\";\n        this.weight = data.weight || 0;\n        this.author = new ExerciseAuthor(data.author || {});\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.updatedAt);\n        if (data.category) {\n            var _data_category_sets, _data_category_weight, _data_category_selectedVideo, _data_category_sets1, _data_category_weight1, _data_category_selectedVideo1;\n            this.category = data.category.id === \"weight-training\" || data.category.type === \"weight-training\" ? {\n                type: \"weight-training\",\n                details: {\n                    sets: (_data_category_sets = data.category.sets) !== null && _data_category_sets !== void 0 ? _data_category_sets : 3,\n                    reps: Array.isArray(data.category.reps) ? data.category.reps : [\n                        data.category.reps || \"12\"\n                    ],\n                    weight: (_data_category_weight = data.category.weight) !== null && _data_category_weight !== void 0 ? _data_category_weight : 0,\n                    screenTime: data.category.screenTime || 0,\n                    selectedVideo: (_data_category_selectedVideo = data.category.selectedVideo) !== null && _data_category_selectedVideo !== void 0 ? _data_category_selectedVideo : null\n                }\n            } : {\n                type: \"weight-training\",\n                details: {\n                    sets: (_data_category_sets1 = data.category.sets) !== null && _data_category_sets1 !== void 0 ? _data_category_sets1 : 3,\n                    reps: Array.isArray(data.category.reps) ? data.category.reps : [\n                        data.category.reps || \"12\"\n                    ],\n                    weight: (_data_category_weight1 = data.category.weight) !== null && _data_category_weight1 !== void 0 ? _data_category_weight1 : 0,\n                    screenTime: data.category.screenTime || 0,\n                    selectedVideo: (_data_category_selectedVideo1 = data.category.selectedVideo) !== null && _data_category_selectedVideo1 !== void 0 ? _data_category_selectedVideo1 : null\n                }\n            };\n        } else {\n            this.category = {\n                type: \"weight-training\",\n                details: {\n                    sets: 3,\n                    reps: [\n                        \"12\"\n                    ],\n                    weight: 0,\n                    screenTime: 0,\n                    selectedVideo: null\n                }\n            };\n        }\n    }\n    var _proto = Exercise.prototype;\n    _proto.toDictionary = function toDictionary() {\n        var _this_category_details;\n        // Create the category object:\n        var categoryData = (0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_6__._)({\n            id: this.category.type\n        }, this.category.details, ((_this_category_details = this.category.details) === null || _this_category_details === void 0 ? void 0 : _this_category_details.selectedVideo) ? {\n            selectedVideo: this.category.details.selectedVideo.toDictionary()\n        } : {});\n        var data = {\n            id: this.id,\n            name: this.name,\n            description: this.description,\n            category: categoryData,\n            primaryBodyParts: this.primaryBodyParts,\n            secondaryBodyParts: this.secondaryBodyParts,\n            tags: this.tags,\n            videos: this.videos.map(function(video) {\n                return video.toDictionary();\n            }),\n            steps: this.steps,\n            visibility: this.visibility,\n            currentVideoPosition: this.currentVideoPosition,\n            sets: this.sets,\n            reps: this.reps,\n            weight: this.weight,\n            author: this.author.toDictionary(),\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.updatedAt)\n        };\n        return data;\n    };\n    return Exercise;\n}();\n// ExerciseVideo.ts\nvar ExerciseVideo = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseVideo(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_4__._)(this, ExerciseVideo);\n        this.id = data.id || \"\";\n        this.exerciseId = data.exerciseId || \"\";\n        this.username = data.username || \"\";\n        this.userId = data.userId || \"\";\n        this.videoURL = data.videoURL || \"\";\n        this.fileName = data.fileName || \"\";\n        this.exercise = data.exercise || \"\";\n        this.profileImage = new _user_types__WEBPACK_IMPORTED_MODULE_1__.ProfileImage(data.profileImage || {});\n        this.caption = data.caption;\n        this.gifURL = data.gifURL;\n        this.thumbnail = data.thumbnail;\n        this.visibility = data.visibility || \"private\";\n        this.totalAccountsReached = data.totalAccountsReached || 0;\n        this.totalAccountLikes = data.totalAccountLikes || 0;\n        this.totalAccountBookmarked = data.totalAccountBookmarked || 0;\n        this.totalAccountUsage = data.totalAccountUsage || 0;\n        this.isApproved = data.isApproved || false;\n        this.liked = data.liked || false;\n        this.bookmarked = data.bookmarked || false;\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = ExerciseVideo.prototype;\n    _proto.toDictionary = function toDictionary() {\n        var data = {\n            id: this.id,\n            exerciseId: this.exerciseId,\n            username: this.username,\n            userId: this.userId,\n            videoURL: this.videoURL,\n            fileName: this.fileName,\n            exercise: this.exercise,\n            profileImage: this.profileImage.toDictionary(),\n            visibility: this.visibility,\n            totalAccountsReached: this.totalAccountsReached,\n            totalAccountLikes: this.totalAccountLikes,\n            totalAccountBookmarked: this.totalAccountBookmarked,\n            totalAccountUsage: this.totalAccountUsage,\n            isApproved: this.isApproved,\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.dateToUnixTimestamp)(this.updatedAt)\n        };\n        if (this.caption) data.caption = this.caption;\n        if (this.gifURL) data.gifURL = this.gifURL;\n        if (this.thumbnail) data.thumbnail = this.thumbnail;\n        if (this.liked !== null) data.liked = this.liked;\n        if (this.bookmarked !== null) data.bookmarked = this.bookmarked;\n        return data;\n    };\n    return ExerciseVideo;\n}();\nvar ExerciseDetail = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseDetail(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_4__._)(this, ExerciseDetail);\n        this.id = data.id || \"\";\n        this.exerciseName = data.exerciseName || \"\";\n        this.exercise = data.exercise;\n        this.exerciseLogId = data.exerciseLogId;\n        this.category = data.category;\n        this.notes = data.notes || \"\";\n        this.isSplit = data.isSplit || false;\n        this.isMissing = data.isMissing || false;\n        this.groupId = data.groupId || 0;\n        this.closestMatch = data.closestMatch || [];\n    }\n    var _proto = ExerciseDetail.prototype;\n    _proto.toDictionary = function toDictionary() {\n        var _this_category_details;\n        return {\n            id: this.id,\n            exerciseName: this.exerciseName,\n            exercise: this.exercise.toDictionary(),\n            exerciseLogId: this.exerciseLogId,\n            category: (0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_6__._)({\n                id: this.category.type\n            }, this.category.details, ((_this_category_details = this.category.details) === null || _this_category_details === void 0 ? void 0 : _this_category_details.selectedVideo) ? {\n                selectedVideo: this.category.details.selectedVideo.toDictionary()\n            } : {}),\n            notes: this.notes,\n            isSplit: this.isSplit,\n            isMissing: this.isMissing,\n            groupId: this.groupId,\n            closestMatch: this.closestMatch.map(function(ex) {\n                return ex.toDictionary();\n            })\n        };\n    };\n    return ExerciseDetail;\n}();\n// ExerciseAuthor.ts\nvar ExerciseAuthor = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseAuthor(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_4__._)(this, ExerciseAuthor);\n        this.userId = data.userId || \"\";\n        this.username = data.username || \"\";\n    }\n    var _proto = ExerciseAuthor.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            userId: this.userId,\n            username: this.username\n        };\n    };\n    return ExerciseAuthor;\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/firebase/exercise/types.ts\n"));

/***/ })

});
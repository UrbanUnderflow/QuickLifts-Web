"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/firebase/exercise/types.ts":
/*!********************************************!*\
  !*** ./src/api/firebase/exercise/types.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyPart: function() { return /* binding */ BodyPart; },\n/* harmony export */   Exercise: function() { return /* binding */ Exercise; },\n/* harmony export */   ExerciseAuthor: function() { return /* binding */ ExerciseAuthor; },\n/* harmony export */   ExerciseCategory: function() { return /* binding */ ExerciseCategory; },\n/* harmony export */   ExerciseLog: function() { return /* binding */ ExerciseLog; },\n/* harmony export */   ExerciseVideo: function() { return /* binding */ ExerciseVideo; },\n/* harmony export */   isAdvancedBodyPart: function() { return /* binding */ isAdvancedBodyPart; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ \"./node_modules/@swc/helpers/esm/_class_call_check.js\");\n/* harmony import */ var _swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/_/_object_spread */ \"./node_modules/@swc/helpers/esm/_object_spread.js\");\n/* harmony import */ var _workout_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../workout/types */ \"./src/api/firebase/workout/types.ts\");\n/* harmony import */ var _user_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../user/types */ \"./src/api/firebase/user/types.ts\");\n/* harmony import */ var _utils_formatDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/formatDate */ \"./src/utils/formatDate.ts\");\n\n\n\n\n\nvar BodyPart;\n(function(BodyPart) {\n    BodyPart[\"Biceps\"] = \"biceps\";\n    BodyPart[\"Triceps\"] = \"triceps\";\n    BodyPart[\"Chest\"] = \"chest\";\n    BodyPart[\"Calves\"] = \"calves\";\n    BodyPart[\"Abs\"] = \"abs\";\n    BodyPart[\"Hamstrings\"] = \"hamstrings\";\n    BodyPart[\"Back\"] = \"back\";\n    BodyPart[\"Glutes\"] = \"glutes\";\n    BodyPart[\"Quadriceps\"] = \"quadriceps\";\n    BodyPart[\"Forearms\"] = \"forearms\";\n    BodyPart[\"Shoulders\"] = \"shoulders\";\n    BodyPart[\"Lowerback\"] = \"lowerback\";\n    // advanced\n    BodyPart[\"Lats\"] = \"lats\";\n    BodyPart[\"Traps\"] = \"traps\";\n    BodyPart[\"Rhomboids\"] = \"rhomboids\";\n    BodyPart[\"Deltoids\"] = \"deltoids\";\n    BodyPart[\"Fullbody\"] = \"fullbody\";\n})(BodyPart || (BodyPart = {}));\n// Function to check if a body part is advanced\nfunction isAdvancedBodyPart(bodyPart) {\n    return [\n        \"traps\",\n        \"lats\",\n        \"rhomboids\",\n        \"deltoids\"\n    ].includes(bodyPart);\n}\nvar ExerciseLog = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseLog(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ExerciseLog);\n        this.id = data.id || \"\";\n        this.workoutId = data.workoutId || \"\";\n        this.userId = data.userId || \"\";\n        this.exercise = Exercise.fromFirebase(data.exercise || {});\n        this.logs = (data.logs || []).map(function(log) {\n            return _workout_types__WEBPACK_IMPORTED_MODULE_0__.RepsAndWeightLog.fromFirebase(log);\n        });\n        this.feedback = data.feedback || \"\";\n        this.note = data.note || \"\";\n        this.recommendedWeight = data.recommendedWeight;\n        this.isSplit = data.isSplit || false;\n        this.isBodyWeight = data.isBodyWeight || false;\n        this.logSubmitted = data.logSubmitted || false;\n        this.logIsEditing = data.logIsEditing || false;\n        this.isCompleted = data.isCompleted || false;\n        this.order = data.order || null;\n        this.completedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.completedAt);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = ExerciseLog.prototype;\n    _proto.toDictionary = function toDictionary() {\n        var data = {\n            id: this.id,\n            workoutId: this.workoutId,\n            userId: this.userId,\n            exercise: this.exercise.toDictionary(),\n            logs: this.logs.map(function(log) {\n                return log.toDictionary();\n            }),\n            feedback: this.feedback,\n            note: this.note,\n            isSplit: this.isSplit,\n            isBodyWeight: this.isBodyWeight,\n            logSubmitted: this.logSubmitted,\n            logIsEditing: this.logIsEditing,\n            isCompleted: this.isCompleted,\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime(),\n            completedAt: this.completedAt.getTime(),\n            recommendedWeight: this.recommendedWeight,\n            order: this.order\n        };\n        // Helper function to recursively log undefined fields.\n        function logUndefinedFields(obj) {\n            var parentPath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n            if (typeof obj !== \"object\" || obj === null) return;\n            for(var key in obj){\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var value = obj[key];\n                    var path = parentPath ? \"\".concat(parentPath, \".\").concat(key) : key;\n                    if (value === undefined) {\n                        console.log(\"Undefined value found at: \".concat(path));\n                    } else if (typeof value === \"object\" && value !== null) {\n                        logUndefinedFields(value, path);\n                    }\n                }\n            }\n        }\n        // Log the entire dictionary for inspection\n        console.log(\"Workout log dictionary before cleanup:\", data);\n        logUndefinedFields(data);\n        // Remove any properties with an undefined value at the top level.\n        // (Nested undefined properties inside objects should be removed by their own toDictionary methods,\n        //  but you can add similar cleanup recursively if needed.)\n        Object.keys(data).forEach(function(key) {\n            if (data[key] === undefined) {\n                delete data[key];\n            }\n        });\n        return data;\n    };\n    ExerciseLog.fromFirebase = function fromFirebase(data) {\n        if (!data) {\n            // Return a default ExerciseLog instead of null\n            return new ExerciseLog({});\n        }\n        return new ExerciseLog({\n            id: data.id || \"\",\n            workoutId: data.workoutId || \"\",\n            userId: data.userId || \"\",\n            exercise: data.exercise || {},\n            logs: data.logs || [],\n            feedback: data.feedback || \"\",\n            note: data.note || \"\",\n            recommendedWeight: data.recommendedWeight,\n            isSplit: data.isSplit || false,\n            isBodyWeight: data.isBodyWeight || false,\n            logSubmitted: data.logSubmitted || false,\n            logIsEditing: data.logIsEditing || false,\n            isCompleted: data.isCompleted || false,\n            order: data.order || null,\n            completedAt: data.completedAt,\n            createdAt: data.createdAt,\n            updatedAt: data.updatedAt\n        });\n    };\n    return ExerciseLog;\n}();\n// Helper functions to mimic Swift enum behavior\nvar ExerciseCategory = {\n    weightTraining: function(details) {\n        return {\n            type: \"weightTraining\",\n            details: details\n        };\n    },\n    cardio: function(details) {\n        return {\n            type: \"cardio\",\n            details: details\n        };\n    },\n    fromIdentifier: function(identifier) {\n        switch(identifier){\n            case \"weight-training\":\n                return ExerciseCategory.weightTraining({\n                    reps: \"12\",\n                    sets: 3,\n                    weight: 0.0,\n                    screenTime: 0,\n                    selectedVideo: null\n                });\n            case \"cardio\":\n                return ExerciseCategory.cardio({\n                    duration: 20,\n                    bpm: 125,\n                    calories: 0,\n                    screenTime: 0,\n                    selectedVideo: null\n                });\n            default:\n                return null;\n        }\n    },\n    identifier: function(category) {\n        switch(category.type){\n            case \"weightTraining\":\n                return \"weight-training\";\n            case \"cardio\":\n                return \"cardio\";\n        }\n    }\n};\n// Usage examples:\n// const weightTraining = ExerciseCategory.weightTraining({ reps: '10', sets: 3, weight: 50 });\n// const cardio = ExerciseCategory.cardio({ duration: 30, bpm: 140, calories: 300 });\n// const fromId = ExerciseCategory.fromIdentifier('weight-training');\n// const id = ExerciseCategory.identifier(weightTraining);\nvar Exercise = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Exercise(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, Exercise);\n        this.id = data.id || \"\";\n        this.name = data.name || \"\";\n        this.description = data.description || \"\";\n        this.primaryBodyParts = data.primaryBodyParts || [];\n        this.secondaryBodyParts = data.secondaryBodyParts || [];\n        this.tags = data.tags || [];\n        this.videos = (data.videos || []).map(function(video) {\n            return ExerciseVideo.fromFirebase(video);\n        });\n        this.steps = data.steps || [];\n        this.visibility = data.visibility || \"live\";\n        this.currentVideoPosition = data.currentVideoPosition || 0;\n        this.sets = data.sets || 0;\n        this.reps = data.reps || \"\";\n        this.weight = data.weight || 0;\n        this.author = ExerciseAuthor.fromFirebase(data.author || {});\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.updatedAt);\n        // Handle category parsing\n        var categoryData = data.category || {};\n        var categoryId = categoryData.id;\n        switch(categoryId){\n            case \"weight-training\":\n                this.category = ExerciseCategory.weightTraining({\n                    reps: categoryData.reps || \"12\",\n                    sets: categoryData.sets || 3,\n                    weight: categoryData.weight || 0,\n                    screenTime: categoryData.screenTime || 0,\n                    selectedVideo: categoryData.selectedVideo ? ExerciseVideo.fromFirebase(categoryData.selectedVideo) : null\n                });\n                break;\n            case \"cardio\":\n                this.category = ExerciseCategory.cardio({\n                    duration: categoryData.duration || 0,\n                    bpm: categoryData.bpm || 0,\n                    calories: categoryData.calories || 0,\n                    screenTime: categoryData.screenTime || 0,\n                    selectedVideo: categoryData.selectedVideo ? ExerciseVideo.fromFirebase(categoryData.selectedVideo) : undefined\n                });\n                break;\n            default:\n                this.category = ExerciseCategory.weightTraining({\n                    reps: \"12\",\n                    sets: 3,\n                    weight: 0,\n                    screenTime: 0\n                });\n        }\n    }\n    var _proto = Exercise.prototype;\n    _proto.toDictionary = function toDictionary() {\n        var _this_category_details;\n        // Create the category object:\n        var categoryData = (0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__._)({\n            id: this.category.type\n        }, this.category.details, ((_this_category_details = this.category.details) === null || _this_category_details === void 0 ? void 0 : _this_category_details.selectedVideo) ? {\n            selectedVideo: this.category.details.selectedVideo.toDictionary()\n        } : {});\n        var data = {\n            id: this.id,\n            name: this.name,\n            description: this.description,\n            category: categoryData,\n            primaryBodyParts: this.primaryBodyParts,\n            secondaryBodyParts: this.secondaryBodyParts,\n            tags: this.tags,\n            videos: this.videos.map(function(video) {\n                return video.toDictionary();\n            }),\n            steps: this.steps,\n            visibility: this.visibility,\n            currentVideoPosition: this.currentVideoPosition,\n            sets: this.sets,\n            reps: this.reps,\n            weight: this.weight,\n            author: this.author.toDictionary(),\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime()\n        };\n        return data;\n    };\n    Exercise.fromFirebase = function fromFirebase(data) {\n        if (!data) {\n            return new Exercise({});\n        }\n        return new Exercise({\n            id: data.id || \"\",\n            name: data.name || \"\",\n            description: data.description || \"\",\n            category: data.category || {},\n            primaryBodyParts: data.primaryBodyParts || [],\n            secondaryBodyParts: data.secondaryBodyParts || [],\n            tags: data.tags || [],\n            videos: data.videos || [],\n            steps: data.steps || [],\n            visibility: data.visibility || \"live\",\n            currentVideoPosition: data.currentVideoPosition || 0,\n            sets: data.sets || 0,\n            reps: data.reps || \"\",\n            weight: data.weight || 0,\n            author: data.author || {},\n            createdAt: data.createdAt,\n            updatedAt: data.updatedAt\n        });\n    };\n    return Exercise;\n}();\n// ExerciseVideo.ts\nvar ExerciseVideo = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseVideo(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ExerciseVideo);\n        this.id = data.id || \"\";\n        this.exerciseId = data.exerciseId || \"\";\n        this.username = data.username || \"\";\n        this.userId = data.userId || \"\";\n        this.videoURL = data.videoURL || \"\";\n        this.fileName = data.fileName || \"\";\n        this.exercise = data.exercise || \"\";\n        this.profileImage = _user_types__WEBPACK_IMPORTED_MODULE_1__.ProfileImage.fromFirebase(data.profileImage || {});\n        this.caption = data.caption;\n        this.gifURL = data.gifURL;\n        this.thumbnail = data.thumbnail;\n        this.visibility = data.visibility || \"private\";\n        this.totalAccountsReached = data.totalAccountsReached || 0;\n        this.totalAccountLikes = data.totalAccountLikes || 0;\n        this.totalAccountBookmarked = data.totalAccountBookmarked || 0;\n        this.totalAccountUsage = data.totalAccountUsage || 0;\n        this.isApproved = data.isApproved || false;\n        this.liked = data.liked || false;\n        this.bookmarked = data.bookmarked || false;\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_2__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = ExerciseVideo.prototype;\n    _proto.toDictionary = function toDictionary() {\n        var data = {\n            id: this.id,\n            exerciseId: this.exerciseId,\n            username: this.username,\n            userId: this.userId,\n            videoURL: this.videoURL,\n            fileName: this.fileName,\n            exercise: this.exercise,\n            profileImage: this.profileImage.toDictionary(),\n            visibility: this.visibility,\n            totalAccountsReached: this.totalAccountsReached,\n            totalAccountLikes: this.totalAccountLikes,\n            totalAccountBookmarked: this.totalAccountBookmarked,\n            totalAccountUsage: this.totalAccountUsage,\n            isApproved: this.isApproved,\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime()\n        };\n        if (this.caption) data.caption = this.caption;\n        if (this.gifURL) data.gifURL = this.gifURL;\n        if (this.thumbnail) data.thumbnail = this.thumbnail;\n        if (this.liked !== undefined) data.liked = this.liked;\n        if (this.bookmarked !== undefined) data.bookmarked = this.bookmarked;\n        return data;\n    };\n    ExerciseVideo.fromFirebase = function fromFirebase(data) {\n        if (!data) {\n            return new ExerciseVideo({});\n        }\n        return new ExerciseVideo({\n            id: data.id || \"\",\n            exerciseId: data.exerciseId || \"\",\n            username: data.username || \"\",\n            userId: data.userId || \"\",\n            videoURL: data.videoURL || \"\",\n            fileName: data.fileName || \"\",\n            exercise: data.exercise || \"\",\n            profileImage: data.profileImage || {},\n            caption: data.caption,\n            gifURL: data.gifURL,\n            thumbnail: data.thumbnail,\n            visibility: data.visibility || \"private\",\n            totalAccountsReached: data.totalAccountsReached || 0,\n            totalAccountLikes: data.totalAccountLikes || 0,\n            totalAccountBookmarked: data.totalAccountBookmarked || 0,\n            totalAccountUsage: data.totalAccountUsage || 0,\n            isApproved: data.isApproved || false,\n            liked: data.liked || false,\n            bookmarked: data.bookmarked || false,\n            createdAt: data.createdAt,\n            updatedAt: data.updatedAt\n        });\n    };\n    return ExerciseVideo;\n}();\n// ExerciseAuthor.ts\nvar ExerciseAuthor = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ExerciseAuthor(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ExerciseAuthor);\n        this.userId = data.userId || \"\";\n        this.username = data.username || \"\";\n    }\n    var _proto = ExerciseAuthor.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            userId: this.userId,\n            username: this.username\n        };\n    };\n    ExerciseAuthor.fromFirebase = function fromFirebase(data) {\n        if (!data) {\n            return new ExerciseAuthor({});\n        }\n        return new ExerciseAuthor({\n            userId: data.userId || \"\",\n            username: data.username || \"\"\n        });\n    };\n    return ExerciseAuthor;\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/firebase/exercise/types.ts\n"));

/***/ })

});
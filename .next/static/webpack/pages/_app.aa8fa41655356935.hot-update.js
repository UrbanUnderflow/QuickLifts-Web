"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/firebase/workout/types.ts":
/*!*******************************************!*\
  !*** ./src/api/firebase/workout/types.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyZone: function() { return /* binding */ BodyZone; },\n/* harmony export */   Challenge: function() { return /* binding */ Challenge; },\n/* harmony export */   ChallengeStatus: function() { return /* binding */ ChallengeStatus; },\n/* harmony export */   IntroVideo: function() { return /* binding */ IntroVideo; },\n/* harmony export */   ReferralChain: function() { return /* binding */ ReferralChain; },\n/* harmony export */   RepsAndWeightLog: function() { return /* binding */ RepsAndWeightLog; },\n/* harmony export */   SweatlistCollection: function() { return /* binding */ SweatlistCollection; },\n/* harmony export */   SweatlistType: function() { return /* binding */ SweatlistType; },\n/* harmony export */   UserChallenge: function() { return /* binding */ UserChallenge; },\n/* harmony export */   Workout: function() { return /* binding */ Workout; },\n/* harmony export */   WorkoutRating: function() { return /* binding */ WorkoutRating; },\n/* harmony export */   WorkoutStatus: function() { return /* binding */ WorkoutStatus; },\n/* harmony export */   WorkoutSummary: function() { return /* binding */ WorkoutSummary; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ \"./node_modules/@swc/helpers/esm/_class_call_check.js\");\n/* harmony import */ var _swc_helpers_create_class__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/_/_create_class */ \"./node_modules/@swc/helpers/esm/_create_class.js\");\n/* harmony import */ var _swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @swc/helpers/_/_object_spread */ \"./node_modules/@swc/helpers/esm/_object_spread.js\");\n/* harmony import */ var _swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ \"./node_modules/@swc/helpers/esm/_object_spread_props.js\");\n/* harmony import */ var _swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ \"./node_modules/@swc/helpers/esm/_sliced_to_array.js\");\n/* harmony import */ var _exercise_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../exercise/types */ \"./src/api/firebase/exercise/types.ts\");\n/* harmony import */ var _utils_formatDate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/formatDate */ \"./src/utils/formatDate.ts\");\n/* harmony import */ var _workout_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../workout/service */ \"./src/api/firebase/workout/service.ts\");\n\n\n\n\n\n\n\n\n\nvar WorkoutStatus;\n(function(WorkoutStatus) {\n    WorkoutStatus[\"QueuedUp\"] = \"queuedUp\";\n    WorkoutStatus[\"InProgress\"] = \"inProgress\";\n    WorkoutStatus[\"Complete\"] = \"complete\";\n    WorkoutStatus[\"Archived\"] = \"archived\";\n})(WorkoutStatus || (WorkoutStatus = {}));\nvar WorkoutRating;\n(function(WorkoutRating) {\n    WorkoutRating[\"TooHard\"] = \"Too Hard\";\n    WorkoutRating[\"TooEasy\"] = \"Too Easy\";\n    WorkoutRating[\"JustRight\"] = \"Just Right\";\n})(WorkoutRating || (WorkoutRating = {}));\nvar BodyZone;\n(function(BodyZone) {\n    BodyZone[\"LowerBody\"] = \"Lower Body\";\n    BodyZone[\"UpperBody\"] = \"Upper Body\";\n    BodyZone[\"FullBody\"] = \"Full Body\";\n    BodyZone[\"Core\"] = \"Core\";\n})(BodyZone || (BodyZone = {}));\nvar RepsAndWeightLog = /*#__PURE__*/ function() {\n    \"use strict\";\n    function RepsAndWeightLog(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, RepsAndWeightLog);\n        this.reps = data.reps || 0;\n        this.weight = data.weight || 0;\n        this.leftReps = data.leftReps || 0;\n        this.leftWeight = data.leftWeight || 0;\n        this.isSplit = data.isSplit || false;\n        this.isBodyWeight = data.isBodyWeight || false;\n        this.duration = data.duration || 0;\n        this.calories = data.calories || 0;\n        this.bpm = data.bpm || 0;\n    }\n    var _proto = RepsAndWeightLog.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            reps: this.reps,\n            weight: this.weight,\n            leftReps: this.leftReps,\n            leftWeight: this.leftWeight,\n            isSplit: this.isSplit,\n            isBodyWeight: this.isBodyWeight,\n            duration: this.duration,\n            calories: this.calories,\n            bpm: this.bpm\n        };\n    };\n    RepsAndWeightLog.fromFirebase = function fromFirebase(data) {\n        if (!data) {\n            return new RepsAndWeightLog({});\n        }\n        return new RepsAndWeightLog({\n            reps: data.reps || 0,\n            weight: data.weight || 0,\n            leftReps: data.leftReps || 0,\n            leftWeight: data.leftWeight || 0,\n            isSplit: data.isSplit || false,\n            isBodyWeight: data.isBodyWeight || false,\n            duration: data.duration || 0,\n            calories: data.calories || 0,\n            bpm: data.bpm || 0\n        });\n    };\n    return RepsAndWeightLog;\n}();\n// WorkoutClass.ts\nvar Workout = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Workout(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, Workout);\n        var _data_author;\n        // For string fields, default to empty string if not provided.\n        this.id = data.id !== undefined ? data.id : \"\";\n        this.roundWorkoutId = data.roundWorkoutId !== undefined ? data.roundWorkoutId : \"\";\n        this.title = data.title !== undefined ? data.title : \"\";\n        this.description = data.description !== undefined ? data.description : \"\";\n        // For numeric fields, default to 0.\n        this.duration = data.duration !== undefined ? data.duration : 0;\n        // For boolean fields, default to false.\n        this.useAuthorContent = data.useAuthorContent !== undefined ? data.useAuthorContent : false;\n        this.isCompleted = data.isCompleted !== undefined ? data.isCompleted : false;\n        // For enum fields (workoutStatus, workoutRating), you can either default to a specific value or null.\n        this.workoutStatus = data.workoutStatus !== undefined ? data.workoutStatus : \"archived\";\n        this.workoutRating = data.workoutRating !== undefined ? data.workoutRating : null;\n        // For arrays, default to an empty array.\n        this.exercises = data.exercises !== undefined ? data.exercises : [];\n        // For optional objects, default to null if missing.\n        this.challenge = data.challenge !== undefined ? data.challenge : null;\n        this.logs = data.logs !== undefined ? data.logs : null;\n        this.collectionId = data.collectionId !== undefined ? data.collectionId : null;\n        // For dates, if the field exists and is a Date, use it; otherwise default to null (or new Date() for createdAt/updatedAt)\n        this.startTime = data.startTime && data.startTime instanceof Date ? data.startTime : null;\n        this.assignedDate = data.assignedDate && data.assignedDate instanceof Date ? data.assignedDate : null;\n        this.createdAt = data.createdAt && data.createdAt instanceof Date ? data.createdAt : new Date();\n        this.updatedAt = data.updatedAt && data.updatedAt instanceof Date ? data.updatedAt : new Date();\n        // For order, default to null if not provided.\n        this.order = data.order !== undefined ? data.order : null;\n        // In Workout constructor:\n        if ((_data_author = data.author) === null || _data_author === void 0 ? void 0 : _data_author.username) {\n            this.author = data.author.userId;\n            _workout_service__WEBPACK_IMPORTED_MODULE_2__.workoutService.revertAuthorFormat(this.id, this.author);\n        }\n        // For zone, default to FullBody (or any other default you prefer)\n        this.zone = data.zone !== undefined ? data.zone : \"Full Body\";\n    }\n    var _proto = Workout.prototype;\n    _proto.fetchPrimaryBodyParts = function fetchPrimaryBodyParts() {\n        return this.exercises.flatMap(function(exerciseRef) {\n            return exerciseRef.exercise.primaryBodyParts;\n        });\n    };\n    _proto.fetchSecondaryBodyParts = function fetchSecondaryBodyParts() {\n        return this.exercises.flatMap(function(exerciseRef) {\n            return exerciseRef.exercise.secondaryBodyParts;\n        });\n    };\n    _proto.findUndefinedValues = function findUndefinedValues(obj) {\n        var path = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n        var undefinedPaths = [];\n        function recursiveCheck(current, currentPath) {\n            if (current === undefined) {\n                undefinedPaths.push(currentPath);\n                return;\n            }\n            if (current === null || typeof current !== \"object\") {\n                return;\n            }\n            if (Array.isArray(current)) {\n                current.forEach(function(item, index) {\n                    recursiveCheck(item, \"\".concat(currentPath, \"[\").concat(index, \"]\"));\n                });\n                return;\n            }\n            Object.entries(current).forEach(function(param) {\n                var _param = (0,_swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_4__._)(param, 2), key = _param[0], value = _param[1];\n                var newPath = currentPath ? \"\".concat(currentPath, \".\").concat(key) : key;\n                if (value === undefined) {\n                    undefinedPaths.push(newPath);\n                } else {\n                    recursiveCheck(value, newPath);\n                }\n            });\n        }\n        recursiveCheck(obj, path);\n        return undefinedPaths;\n    };\n    _proto.checkForUndefined = function checkForUndefined(data) {\n        var label = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"Data\";\n        var undefinedPaths = this.findUndefinedValues(data);\n        if (undefinedPaths.length > 0) {\n            console.error(\"\\uD83D\\uDEA8 Found undefined values in \".concat(label, \":\"));\n            undefinedPaths.forEach(function(path) {\n                console.error(\"  - \".concat(path));\n            });\n            return false;\n        }\n        return true;\n    };\n    _proto.toDictionary = function toDictionary() {\n        var data = {\n            id: this.id,\n            exercises: this.exercises.map(function(ex) {\n                return {\n                    exercise: ex.exercise.toDictionary(),\n                    groupId: ex.groupId\n                };\n            }),\n            logs: this.logs ? this.logs.map(function(log) {\n                return log.toDictionary();\n            }) : [],\n            title: this.title,\n            description: this.description,\n            zone: this.zone,\n            duration: this.duration,\n            workoutRating: this.workoutRating,\n            useAuthorContent: this.useAuthorContent,\n            isCompleted: this.isCompleted,\n            workoutStatus: this.workoutStatus,\n            author: this.author,\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime(),\n            assignedDate: this.assignedDate ? this.assignedDate.getTime() : null,\n            startTime: this.startTime ? this.startTime.getTime() : null,\n            order: this.order || null,\n            collectionId: this.collectionId || null,\n            challenge: this.challenge || null\n        };\n        // Validate data before returning\n        if (!this.checkForUndefined(data, \"Workout Dictionary\")) {\n            throw new Error(\"Workout contains undefined values\");\n        }\n        return data;\n    };\n    Workout.estimatedDuration = function estimatedDuration(exercises) {\n        var warmupTime = 5;\n        var cooldownTime = 5;\n        var totalExerciseTime = 0;\n        var restTime = 0;\n        var hasScreenTimeExercises = false;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = exercises[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var exerciseRef = _step.value;\n                var exercise = exerciseRef.exercise;\n                console.groupCollapsed(\"Exercise: \".concat(exercise));\n                if (exercise.category.type === \"cardio\") {\n                    var _exercise_category_details;\n                    var duration = ((_exercise_category_details = exercise.category.details) === null || _exercise_category_details === void 0 ? void 0 : _exercise_category_details.duration) || 0;\n                    console.log(\"Cardio duration (minutes):\", duration);\n                    totalExerciseTime += duration;\n                } else if (exercise.category.type === \"weightTraining\") {\n                    var _exercise_category_details1;\n                    var screenTime = ((_exercise_category_details1 = exercise.category.details) === null || _exercise_category_details1 === void 0 ? void 0 : _exercise_category_details1.screenTime) || 0;\n                    if (screenTime > 0) {\n                        console.log(\"Screen time (seconds):\", screenTime);\n                        console.log(\"Converted to minutes:\", Math.floor(screenTime / 60));\n                        totalExerciseTime += Math.floor(screenTime / 60);\n                        hasScreenTimeExercises = true;\n                    } else {\n                        console.log(\"Using default timing (8m exercise + 1m rest)\");\n                        totalExerciseTime += 8;\n                        restTime += 1;\n                    }\n                }\n                console.log(\"Current totals:\", {\n                    totalExerciseTime: totalExerciseTime,\n                    restTime: restTime,\n                    hasScreenTimeExercises: hasScreenTimeExercises\n                });\n                console.groupEnd();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        if (!hasScreenTimeExercises) {\n            console.log(\"Adding warmup/cool-down:\", warmupTime + cooldownTime, \"minutes\");\n            totalExerciseTime += warmupTime + cooldownTime;\n        }\n        var estimatedTotalTime = totalExerciseTime + restTime;\n        console.log(\"Pre-rounded total:\", estimatedTotalTime);\n        var finalEstimate = estimatedTotalTime;\n        if (!hasScreenTimeExercises) {\n            finalEstimate = Math.round(estimatedTotalTime / 5) * 5;\n            console.log(\"Rounded to nearest 5 minutes:\", finalEstimate);\n        }\n        console.log(\"Final estimated duration:\", finalEstimate, \"minutes\");\n        return finalEstimate;\n    };\n    Workout.determineWorkoutZone = function determineWorkoutZone(exercises) {\n        var bodyPartsInvolved = new Set();\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = exercises[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var exerciseRef = _step.value;\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = (exerciseRef.exercise.primaryBodyParts || [\n                        exerciseRef.exercise.primaryBodyParts\n                    ])[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var bodyPart = _step1.value;\n                        bodyPartsInvolved.add(bodyPart);\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1[\"return\"] != null) {\n                            _iterator1[\"return\"]();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        var upperBodyParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Chest,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Shoulders,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Biceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Triceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Traps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Lats,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Forearms\n        ]);\n        var lowerBodyParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Hamstrings,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Glutes,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Quadriceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Calves\n        ]);\n        var coreParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Abs,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Lowerback\n        ]);\n        var hasCommonElements = function(set1, set2) {\n            return Array.from(set1).some(function(item) {\n                return set2.has(item);\n            });\n        };\n        var hasUpperBody = hasCommonElements(bodyPartsInvolved, upperBodyParts);\n        var hasLowerBody = hasCommonElements(bodyPartsInvolved, lowerBodyParts);\n        var hasCore = hasCommonElements(bodyPartsInvolved, coreParts);\n        if (hasUpperBody && hasLowerBody && hasCore || hasUpperBody && hasLowerBody) {\n            return \"Full Body\";\n        } else if (hasUpperBody && hasCore || hasUpperBody) {\n            return \"Upper Body\";\n        } else if (hasLowerBody && hasCore || hasLowerBody) {\n            return \"Lower Body\";\n        } else if (hasCore) {\n            return \"Core\";\n        } else {\n            return \"Full Body\";\n        }\n    };\n    (0,_swc_helpers_create_class__WEBPACK_IMPORTED_MODULE_5__._)(Workout, [\n        {\n            key: \"isTimedWorkout\",\n            get: function get() {\n                if (!this.logs) return false;\n                return this.logs.some(function(log) {\n                    if (log.exercise.category.type === \"weightTraining\") {\n                        var _log_exercise_category_details;\n                        return ((_log_exercise_category_details = log.exercise.category.details) === null || _log_exercise_category_details === void 0 ? void 0 : _log_exercise_category_details.screenTime) !== 0;\n                    } else if (log.exercise.category.type === \"cardio\") {\n                        var _log_exercise_category_details1;\n                        return ((_log_exercise_category_details1 = log.exercise.category.details) === null || _log_exercise_category_details1 === void 0 ? void 0 : _log_exercise_category_details1.screenTime) !== 0;\n                    }\n                    return false;\n                });\n            }\n        }\n    ]);\n    return Workout;\n}();\nvar WorkoutSummary = /*#__PURE__*/ function() {\n    \"use strict\";\n    function WorkoutSummary(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, WorkoutSummary);\n        this.id = data.id;\n        this.workoutId = data.workoutId;\n        this.exercises = data.exercises.map(function(ex) {\n            return _exercise_types__WEBPACK_IMPORTED_MODULE_0__.ExerciseLog.fromFirebase(ex);\n        });\n        this.bodyParts = data.bodyParts;\n        this.secondaryBodyParts = data.secondaryBodyParts;\n        this.workoutTitle = data.workoutTitle;\n        this.caloriesBurned = data.caloriesBurned;\n        this.workoutRating = data.workoutRating;\n        this.exercisesCompleted = data.exercisesCompleted.map(function(ex) {\n            return _exercise_types__WEBPACK_IMPORTED_MODULE_0__.ExerciseLog.fromFirebase(ex);\n        });\n        this.aiInsight = data.aiInsight;\n        this.recommendations = data.recommendations;\n        this.gifURLs = data.gifURLs;\n        this.recommendedWork = data.recommendedWork;\n        this.isCompleted = data.isCompleted;\n        this.createdAt = data.createdAt ? new Date(data.createdAt) : new Date();\n        this.updatedAt = data.updatedAt ? new Date(data.updatedAt) : new Date();\n        this.completedAt = data.completedAt ? new Date(data.completedAt) : null;\n        this.duration = data.duration;\n    }\n    WorkoutSummary.fromFirebase = function fromFirebase(data) {\n        return new WorkoutSummary({\n            id: data.id || \"\",\n            workoutId: data.workoutId || \"\",\n            exercises: data.exercises || [],\n            bodyParts: data.bodyParts || [],\n            secondaryBodyParts: data.secondaryBodyParts || [],\n            workoutTitle: data.workoutTitle || \"\",\n            caloriesBurned: data.caloriesBurned || 0,\n            workoutRating: data.workoutRating,\n            exercisesCompleted: data.exercisesCompleted || [],\n            aiInsight: data.aiInsight || \"\",\n            recommendations: data.recommendations || [],\n            gifURLs: data.gifURLs || [],\n            recommendedWork: data.recommendedWork,\n            isCompleted: data.isCompleted || false,\n            createdAt: data.createdAt,\n            updatedAt: data.updatedAt,\n            completedAt: data.completedAt,\n            duration: data.duration || \"\"\n        });\n    };\n    return WorkoutSummary;\n}();\nvar SweatlistType;\n(function(SweatlistType) {\n    SweatlistType[\"Together\"] = \"together\";\n    SweatlistType[\"Solo\"] = \"solo\";\n    SweatlistType[\"Locked\"] = \"locked\";\n})(SweatlistType || (SweatlistType = {}));\nvar ReferralChain = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ReferralChain(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ReferralChain);\n        this.originalHostId = data.originalHostId || \"\";\n        this.sharedBy = data.sharedBy || \"\";\n    }\n    var _proto = ReferralChain.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            originalHostId: this.originalHostId,\n            sharedBy: this.sharedBy\n        };\n    };\n    ReferralChain.fromFirestore = function fromFirestore(data) {\n        return new ReferralChain(data);\n    };\n    return ReferralChain;\n}();\n// Main SweatlistCollection interface\nvar SweatlistCollection = /*#__PURE__*/ function() {\n    \"use strict\";\n    function SweatlistCollection(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, SweatlistCollection);\n        this.id = data.id;\n        this.title = data.title || \"\";\n        this.subtitle = data.subtitle || \"\";\n        this.pin = data.pin || null;\n        this.challenge = data.challenge ? new Challenge(data.challenge) : undefined;\n        this.sweatlistIds = (data.sweatlistIds || []).map(function(item) {\n            return {\n                id: item.id || \"\",\n                sweatlistAuthorId: item.sweatlistAuthorId || \"\",\n                sweatlistName: item.sweatlistName || \"\",\n                order: item.order || 0\n            };\n        });\n        // If ownerId is not an array, wrap it in an array.\n        if (Array.isArray(data.ownerId)) {\n            this.ownerId = data.ownerId;\n        } else if (data.ownerId) {\n            this.ownerId = [\n                data.ownerId\n            ];\n        } else {\n            this.ownerId = [];\n        }\n        this.privacy = this.challenge ? \"together\" : \"solo\";\n        this.participants = (data.participants || []).map(function(participant) {\n            return participant || \"\";\n        });\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = SweatlistCollection.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            title: this.title,\n            subtitle: this.subtitle,\n            pin: this.pin,\n            challenge: this.challenge ? this.challenge.toDictionary() : null,\n            sweatlistIds: this.sweatlistIds.map(function(item) {\n                return {\n                    id: item.id,\n                    sweatlistAuthorId: item.sweatlistAuthorId,\n                    order: item.order\n                };\n            }),\n            ownerId: this.ownerId,\n            privacy: this.privacy,\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime()\n        };\n    };\n    _proto.toRESTDictionary = function toRESTDictionary() {\n        return {\n            fields: {\n                id: {\n                    stringValue: this.id\n                },\n                title: {\n                    stringValue: this.title\n                },\n                subtitle: {\n                    stringValue: this.subtitle\n                },\n                pin: {\n                    stringValue: this.pin\n                },\n                // ownerId as an array of string values\n                ownerId: {\n                    arrayValue: {\n                        values: this.ownerId.map(function(owner) {\n                            return {\n                                stringValue: owner\n                            };\n                        })\n                    }\n                },\n                sweatlistIds: {\n                    arrayValue: {\n                        values: this.sweatlistIds.map(function(item) {\n                            return {\n                                mapValue: {\n                                    fields: {\n                                        id: {\n                                            stringValue: item.id\n                                        },\n                                        sweatlistAuthorId: {\n                                            stringValue: item.sweatlistAuthorId\n                                        },\n                                        order: {\n                                            integerValue: item.order\n                                        }\n                                    }\n                                }\n                            };\n                        })\n                    }\n                },\n                createdAt: {\n                    doubleValue: this.createdAt.getTime()\n                },\n                updatedAt: {\n                    doubleValue: this.updatedAt.getTime()\n                }\n            }\n        };\n    };\n    _proto.isPublished = function isPublished() {\n        if (!this.challenge) return false;\n        return this.challenge.status === \"published\";\n    };\n    SweatlistCollection.fromFirestore = function fromFirestore(data) {\n        return new SweatlistCollection(data);\n    };\n    return SweatlistCollection;\n}();\nvar ProfileImage = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ProfileImage(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ProfileImage);\n        this.profileImageURL = data.profileImageURL || \"\";\n        this.thumbnailURL = data.thumbnailURL || \"\";\n    }\n    var _proto = ProfileImage.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            profileImageURL: this.profileImageURL,\n            thumbnailURL: this.thumbnailURL || null\n        };\n    };\n    ProfileImage.fromFirestore = function fromFirestore(data) {\n        return new ProfileImage(data);\n    };\n    return ProfileImage;\n}();\nvar UserLocation = /*#__PURE__*/ function() {\n    \"use strict\";\n    function UserLocation(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, UserLocation);\n        this.latitude = data.latitude || 0;\n        this.longitude = data.longitude || 0;\n    }\n    var _proto = UserLocation.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            latitude: this.latitude,\n            longitude: this.longitude\n        };\n    };\n    UserLocation.fromFirestore = function fromFirestore(data) {\n        return new UserLocation(data);\n    };\n    return UserLocation;\n}();\nvar PulsePoints = /*#__PURE__*/ function() {\n    \"use strict\";\n    function PulsePoints(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, PulsePoints);\n        var _data_baseCompletion;\n        this.baseCompletion = (_data_baseCompletion = data.baseCompletion) !== null && _data_baseCompletion !== void 0 ? _data_baseCompletion : 0;\n        var _data_firstCompletion;\n        this.firstCompletion = (_data_firstCompletion = data.firstCompletion) !== null && _data_firstCompletion !== void 0 ? _data_firstCompletion : 0;\n        var _data_streakBonus;\n        this.streakBonus = (_data_streakBonus = data.streakBonus) !== null && _data_streakBonus !== void 0 ? _data_streakBonus : 0;\n        var _data_checkInBonus;\n        this.checkInBonus = (_data_checkInBonus = data.checkInBonus) !== null && _data_checkInBonus !== void 0 ? _data_checkInBonus : 0;\n        var _data_effortRating;\n        this.effortRating = (_data_effortRating = data.effortRating) !== null && _data_effortRating !== void 0 ? _data_effortRating : 0;\n        var _data_chatParticipation;\n        this.chatParticipation = (_data_chatParticipation = data.chatParticipation) !== null && _data_chatParticipation !== void 0 ? _data_chatParticipation : 0;\n        var _data_locationCheckin;\n        this.locationCheckin = (_data_locationCheckin = data.locationCheckin) !== null && _data_locationCheckin !== void 0 ? _data_locationCheckin : 0;\n        var _data_contentEngagement;\n        this.contentEngagement = (_data_contentEngagement = data.contentEngagement) !== null && _data_contentEngagement !== void 0 ? _data_contentEngagement : 0;\n        var _data_encouragementSent;\n        this.encouragementSent = (_data_encouragementSent = data.encouragementSent) !== null && _data_encouragementSent !== void 0 ? _data_encouragementSent : 0;\n        var _data_encouragementReceived;\n        this.encouragementReceived = (_data_encouragementReceived = data.encouragementReceived) !== null && _data_encouragementReceived !== void 0 ? _data_encouragementReceived : 0;\n        var _data_cumulativeStreakBonus;\n        this.cumulativeStreakBonus = (_data_cumulativeStreakBonus = data.cumulativeStreakBonus) !== null && _data_cumulativeStreakBonus !== void 0 ? _data_cumulativeStreakBonus : 0;\n    }\n    var _proto = PulsePoints.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            baseCompletion: this.baseCompletion,\n            firstCompletion: this.firstCompletion,\n            streakBonus: this.streakBonus,\n            checkInBonus: this.checkInBonus,\n            effortRating: this.effortRating,\n            chatParticipation: this.chatParticipation,\n            locationCheckin: this.locationCheckin,\n            contentEngagement: this.contentEngagement,\n            encouragementSent: this.encouragementSent,\n            encouragementReceived: this.encouragementReceived,\n            cumulativeStreakBonus: this.cumulativeStreakBonus,\n            totalStackPoints: this.totalStackPoints,\n            totalCommunityPoints: this.totalCommunityPoints,\n            totalPoints: this.totalPoints\n        };\n    };\n    PulsePoints.fromFirestore = function fromFirestore(data) {\n        return new PulsePoints(data);\n    };\n    (0,_swc_helpers_create_class__WEBPACK_IMPORTED_MODULE_5__._)(PulsePoints, [\n        {\n            key: \"totalStackPoints\",\n            get: function get() {\n                return this.baseCompletion + this.firstCompletion + this.streakBonus + this.checkInBonus + this.effortRating;\n            }\n        },\n        {\n            key: \"totalCommunityPoints\",\n            get: function get() {\n                return this.chatParticipation + this.locationCheckin + this.contentEngagement + this.encouragementSent + this.encouragementReceived;\n            }\n        },\n        {\n            key: \"totalPoints\",\n            get: function get() {\n                return this.totalStackPoints + this.totalCommunityPoints + this.cumulativeStreakBonus;\n            }\n        }\n    ]);\n    return PulsePoints;\n}();\n// Types for user in challenge\nvar UserChallenge = /*#__PURE__*/ function() {\n    \"use strict\";\n    function UserChallenge(id, data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, UserChallenge);\n        this.id = id;\n        this.challenge = data.challenge ? new Challenge(data.challenge) : undefined;\n        this.challengeId = data.challengeId || \"\";\n        this.userId = data.userId || \"\";\n        this.username = data.username || \"\";\n        this.profileImage = data.profileImage ? new ProfileImage(data.profileImage) : undefined;\n        var _data_progress;\n        this.progress = (_data_progress = data.progress) !== null && _data_progress !== void 0 ? _data_progress : 0;\n        this.referralChains = data.referralChains ? new ReferralChain(data.referralChains) : new ReferralChain({\n            originalHostId: \"\",\n            sharedBy: \"\"\n        });\n        this.completedWorkouts = Array.isArray(data.completedWorkouts) ? data.completedWorkouts.map(function(cw) {\n            return {\n                id: cw.id || \"\",\n                workoutId: cw.workoutId || \"\",\n                completedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(cw.completedAt)\n            };\n        }) : [];\n        var _data_isCompleted;\n        this.isCompleted = (_data_isCompleted = data.isCompleted) !== null && _data_isCompleted !== void 0 ? _data_isCompleted : false;\n        this.location = data.location ? new UserLocation(data.location) : undefined;\n        this.city = data.city || \"\";\n        this.country = data.country || \"\";\n        this.timezone = data.timezone || \"\";\n        this.joinDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.joinDate);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n        this.pulsePoints = data.pulsePoints ? new PulsePoints(data.pulsePoints) : new PulsePoints({});\n        var _data_currentStreak;\n        this.currentStreak = (_data_currentStreak = data.currentStreak) !== null && _data_currentStreak !== void 0 ? _data_currentStreak : 0;\n        this.encouragedUsers = Array.isArray(data.encouragedUsers) ? data.encouragedUsers : [];\n        this.encouragedByUsers = Array.isArray(data.encouragedByUsers) ? data.encouragedByUsers : [];\n        this.checkIns = Array.isArray(data.checkIns) ? data.checkIns.map(function(d) {\n            return (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(d);\n        }) : [];\n    }\n    var _proto = UserChallenge.prototype;\n    // Optionally, add a method to convert to a plain dictionary (for saving to Firestore)\n    _proto.toDictionary = function toDictionary() {\n        return {\n            challenge: this.challenge ? this.challenge.toDictionary() : null,\n            challengeId: this.challengeId,\n            userId: this.userId,\n            username: this.username,\n            profileImage: this.profileImage ? this.profileImage.toDictionary() : null,\n            progress: this.progress,\n            referralChains: this.referralChains ? this.referralChains.toDictionary() : {},\n            completedWorkouts: this.completedWorkouts.map(function(workout) {\n                return (0,_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_6__._)((0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_7__._)({}, workout), {\n                    completedAt: Math.floor(new Date(workout.completedAt).getTime() / 1000)\n                });\n            }),\n            isCompleted: this.isCompleted,\n            location: this.location ? this.location.toDictionary() : null,\n            city: this.city,\n            country: this.country,\n            timezone: this.timezone,\n            joinDate: Math.floor(this.joinDate.getTime() / 1000),\n            createdAt: Math.floor(this.createdAt.getTime() / 1000),\n            updatedAt: Math.floor(this.updatedAt.getTime() / 1000),\n            pulsePoints: this.pulsePoints ? this.pulsePoints.toDictionary() : {},\n            currentStreak: this.currentStreak,\n            encouragedUsers: this.encouragedUsers,\n            encouragedByUsers: this.encouragedByUsers,\n            checkIns: this.checkIns.map(function(date) {\n                return Math.floor(date.getTime() / 1000);\n            })\n        };\n    };\n    // Optionally, you can add a static method to create an instance from Firestore data\n    UserChallenge.fromFirestore = function fromFirestore(id, data) {\n        return new UserChallenge(id, data);\n    };\n    return UserChallenge;\n}();\nvar ChallengeStatus;\n// Challenge status enum\n(function(ChallengeStatus) {\n    ChallengeStatus[\"Draft\"] = \"draft\";\n    ChallengeStatus[\"Published\"] = \"published\";\n    ChallengeStatus[\"Completed\"] = \"completed\";\n    ChallengeStatus[\"Cancelled\"] = \"cancelled\";\n})(ChallengeStatus || (ChallengeStatus = {}));\nvar IntroVideo = /*#__PURE__*/ function() {\n    \"use strict\";\n    function IntroVideo(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, IntroVideo);\n        this.id = data.id;\n        this.userId = data.userId;\n        this.videoUrl = data.videoUrl;\n    }\n    var _proto = IntroVideo.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            userId: this.userId,\n            videoUrl: this.videoUrl\n        };\n    };\n    return IntroVideo;\n}();\nvar Challenge = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Challenge(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, Challenge);\n        this.id = data.id;\n        this.title = data.title;\n        this.subtitle = data.subtitle;\n        // Use an empty array if participants is missing.\n        this.participants = Array.isArray(data.participants) ? data.participants : [];\n        this.status = data.status;\n        this.startDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.startDate);\n        this.endDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.endDate);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n        // Handle both old and new format for intro videos.\n        if (Array.isArray(data.introVideos)) {\n            this.introVideos = data.introVideos.map(function(video) {\n                return new IntroVideo(video);\n            });\n        } else if (data.introVideoURL && Array.isArray(data.participants) && data.participants.length > 0) {\n            this.introVideos = [\n                new IntroVideo({\n                    id: \"1\",\n                    userId: data.participants[0].userId,\n                    videoUrl: data.introVideoURL\n                })\n            ];\n        } else {\n            this.introVideos = [];\n        }\n        this.durationInDays = this.calculateDurationInDays();\n    }\n    var _proto = Challenge.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            title: this.title,\n            subtitle: this.subtitle,\n            participants: this.participants.map(function(participant) {\n                return {\n                    id: participant.id,\n                    challengeId: participant.challengeId,\n                    userId: participant.userId,\n                    username: participant.username,\n                    profileImage: participant.profileImage,\n                    progress: participant.progress,\n                    completedWorkouts: participant.completedWorkouts,\n                    isCompleted: participant.isCompleted,\n                    location: participant.location,\n                    city: participant.city,\n                    country: participant.country,\n                    timezone: participant.timezone,\n                    joinDate: participant.joinDate,\n                    createdAt: participant.createdAt,\n                    updatedAt: participant.updatedAt,\n                    pulsePoints: participant.pulsePoints,\n                    currentStreak: participant.currentStreak,\n                    encouragedUsers: participant.encouragedUsers,\n                    encouragedByUsers: participant.encouragedByUsers,\n                    checkIns: participant.checkIns\n                };\n            }),\n            status: this.status,\n            startDate: this.startDate.getTime(),\n            endDate: this.endDate.getTime(),\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime(),\n            durationInDays: this.durationInDays,\n            introVideos: this.introVideos.map(function(video) {\n                return video.toDictionary();\n            })\n        };\n    };\n    /**\n   * Calculates the duration in days between the startDate and endDate.\n   * @returns The number of days between the two dates.\n   */ _proto.calculateDurationInDays = function calculateDurationInDays() {\n        var _this_startDate, _this_endDate;\n        var start = (_this_startDate = this.startDate) === null || _this_startDate === void 0 ? void 0 : _this_startDate.valueOf();\n        var end = (_this_endDate = this.endDate) === null || _this_endDate === void 0 ? void 0 : _this_endDate.valueOf();\n        if (!start || !end || isNaN(start) || isNaN(end)) {\n            throw new Error(\"Invalid startDate or endDate\");\n        }\n        var durationInMilliseconds = end - start;\n        return Math.ceil(durationInMilliseconds / (1000 * 60 * 60 * 24));\n    };\n    Challenge.toFirestoreObject = function toFirestoreObject(obj) {\n        var _this = this;\n        if (obj === null || typeof obj !== \"object\") {\n            return obj;\n        }\n        if (obj instanceof Date) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            return obj.map(function(item) {\n                return _this.toFirestoreObject(item);\n            });\n        }\n        if (obj instanceof Challenge) {\n            return {\n                id: obj.id,\n                title: obj.title,\n                subtitle: obj.subtitle,\n                participants: obj.participants,\n                status: obj.status,\n                startDate: obj.startDate,\n                endDate: obj.endDate,\n                createdAt: obj.createdAt,\n                updatedAt: obj.updatedAt,\n                introVideos: obj.introVideos.map(function(video) {\n                    return {\n                        id: video.id,\n                        userId: video.userId,\n                        videoUrl: video.videoUrl\n                    };\n                })\n            };\n        }\n        var plainObject = {};\n        for(var key in obj){\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                plainObject[key] = this.toFirestoreObject(obj[key]);\n            }\n        }\n        return plainObject;\n    };\n    return Challenge;\n}();\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/firebase/workout/types.ts\n"));

/***/ })

});
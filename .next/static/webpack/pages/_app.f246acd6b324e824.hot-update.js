"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/firebase/workout/types.ts":
/*!*******************************************!*\
  !*** ./src/api/firebase/workout/types.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyZone: function() { return /* binding */ BodyZone; },\n/* harmony export */   Challenge: function() { return /* binding */ Challenge; },\n/* harmony export */   ChallengeStatus: function() { return /* binding */ ChallengeStatus; },\n/* harmony export */   CheckIn: function() { return /* binding */ CheckIn; },\n/* harmony export */   IntroVideo: function() { return /* binding */ IntroVideo; },\n/* harmony export */   ReferralChain: function() { return /* binding */ ReferralChain; },\n/* harmony export */   RepsAndWeightLog: function() { return /* binding */ RepsAndWeightLog; },\n/* harmony export */   SweatlistCollection: function() { return /* binding */ SweatlistCollection; },\n/* harmony export */   SweatlistType: function() { return /* binding */ SweatlistType; },\n/* harmony export */   UserChallenge: function() { return /* binding */ UserChallenge; },\n/* harmony export */   Workout: function() { return /* binding */ Workout; },\n/* harmony export */   WorkoutRating: function() { return /* binding */ WorkoutRating; },\n/* harmony export */   WorkoutStatus: function() { return /* binding */ WorkoutStatus; },\n/* harmony export */   WorkoutSummary: function() { return /* binding */ WorkoutSummary; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ \"./node_modules/@swc/helpers/esm/_class_call_check.js\");\n/* harmony import */ var _swc_helpers_create_class__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/_/_create_class */ \"./node_modules/@swc/helpers/esm/_create_class.js\");\n/* harmony import */ var _swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @swc/helpers/_/_object_spread */ \"./node_modules/@swc/helpers/esm/_object_spread.js\");\n/* harmony import */ var _swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ \"./node_modules/@swc/helpers/esm/_object_spread_props.js\");\n/* harmony import */ var _swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ \"./node_modules/@swc/helpers/esm/_sliced_to_array.js\");\n/* harmony import */ var _exercise_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../exercise/types */ \"./src/api/firebase/exercise/types.ts\");\n/* harmony import */ var _utils_formatDate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/formatDate */ \"./src/utils/formatDate.ts\");\n/* harmony import */ var _workout_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../workout/service */ \"./src/api/firebase/workout/service.ts\");\n\n\n\n\n\n\n\n\n\nvar CheckIn = /*#__PURE__*/ function() {\n    \"use strict\";\n    function CheckIn(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, CheckIn);\n        this.id = data.id || \"\";\n        this.userId = data.userId || \"\";\n        this.workoutId = data.workoutId || \"\";\n        this.photoUrl = data.photoUrl || \"\";\n        this.videoUrl = data.videoUrl || \"\";\n        // If createdAt is a Unix timestamp in seconds, convert it to a Date\n        this.createdAt = data.createdAt ? typeof data.createdAt === \"number\" ? new Date(data.createdAt * 1000) : new Date(data.createdAt) : new Date();\n    }\n    var _proto = CheckIn.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            userId: this.userId,\n            workoutId: this.workoutId,\n            photoUrl: this.photoUrl,\n            videoUrl: this.videoUrl,\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.createdAt)\n        };\n    };\n    return CheckIn;\n}();\nvar WorkoutStatus;\n(function(WorkoutStatus) {\n    WorkoutStatus[\"QueuedUp\"] = \"queuedUp\";\n    WorkoutStatus[\"InProgress\"] = \"inProgress\";\n    WorkoutStatus[\"Complete\"] = \"complete\";\n    WorkoutStatus[\"Archived\"] = \"archived\";\n})(WorkoutStatus || (WorkoutStatus = {}));\nvar WorkoutRating;\n(function(WorkoutRating) {\n    WorkoutRating[\"TooHard\"] = \"Too Hard\";\n    WorkoutRating[\"TooEasy\"] = \"Too Easy\";\n    WorkoutRating[\"JustRight\"] = \"Just Right\";\n})(WorkoutRating || (WorkoutRating = {}));\nvar BodyZone;\n(function(BodyZone) {\n    BodyZone[\"LowerBody\"] = \"Lower Body\";\n    BodyZone[\"UpperBody\"] = \"Upper Body\";\n    BodyZone[\"FullBody\"] = \"Full Body\";\n    BodyZone[\"Core\"] = \"Core\";\n})(BodyZone || (BodyZone = {}));\nvar RepsAndWeightLog = /*#__PURE__*/ function() {\n    \"use strict\";\n    function RepsAndWeightLog(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, RepsAndWeightLog);\n        this.reps = data.reps || 0;\n        this.weight = data.weight || 0;\n        this.leftReps = data.leftReps || 0;\n        this.leftWeight = data.leftWeight || 0;\n        this.isSplit = data.isSplit || false;\n        this.isBodyWeight = data.isBodyWeight || false;\n        this.duration = data.duration || 0;\n        this.calories = data.calories || 0;\n        this.bpm = data.bpm || 0;\n    }\n    var _proto = RepsAndWeightLog.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            reps: this.reps,\n            weight: this.weight,\n            leftReps: this.leftReps,\n            leftWeight: this.leftWeight,\n            isSplit: this.isSplit,\n            isBodyWeight: this.isBodyWeight,\n            duration: this.duration,\n            calories: this.calories,\n            bpm: this.bpm\n        };\n    };\n    return RepsAndWeightLog;\n}();\n// WorkoutClass.ts\nvar Workout = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Workout(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, Workout);\n        var _data_author;\n        // For string fields, default to empty string if not provided.\n        this.id = data.id !== undefined ? data.id : \"\";\n        this.roundWorkoutId = data.roundWorkoutId !== undefined ? data.roundWorkoutId : \"\";\n        this.title = data.title !== undefined ? data.title : \"\";\n        this.description = data.description !== undefined ? data.description : \"\";\n        // For numeric fields, default to 0.\n        this.duration = data.duration !== undefined ? data.duration : 0;\n        // For boolean fields, default to false.\n        this.useAuthorContent = data.useAuthorContent !== undefined ? data.useAuthorContent : false;\n        this.isCompleted = data.isCompleted !== undefined ? data.isCompleted : false;\n        // For enum fields (workoutStatus, workoutRating), you can either default to a specific value or null.\n        this.workoutStatus = data.workoutStatus !== undefined ? data.workoutStatus : \"archived\";\n        this.workoutRating = data.workoutRating !== undefined ? data.workoutRating : null;\n        // For arrays, default to an empty array.\n        this.exercises = data.exercises !== undefined ? data.exercises : [];\n        // For optional objects, default to null if missing.\n        this.challenge = data.challenge !== undefined ? data.challenge : null;\n        this.logs = data.logs !== undefined ? data.logs : null;\n        this.collectionId = data.collectionId !== undefined ? data.collectionId : null;\n        // For dates, if the field exists and is a Date, use it; otherwise default to null (or new Date() for createdAt/updatedAt)\n        this.startTime = data.startTime ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.startTime) : null;\n        this.assignedDate = data.assignedDate ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.assignedDate) : null;\n        this.createdAt = data.createdAt ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt) : new Date();\n        this.updatedAt = data.updatedAt ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt) : new Date();\n        // For order, default to null if not provided.\n        this.order = data.order !== undefined ? data.order : null;\n        // In Workout constructor:\n        if ((_data_author = data.author) === null || _data_author === void 0 ? void 0 : _data_author.username) {\n            this.author = data.author.userId;\n            _workout_service__WEBPACK_IMPORTED_MODULE_2__.workoutService.revertAuthorFormat(this.id, this.author);\n        } else {\n            this.author = data.author;\n        }\n        // For zone, default to FullBody (or any other default you prefer)\n        this.zone = data.zone !== undefined ? data.zone : \"Full Body\";\n    }\n    var _proto = Workout.prototype;\n    _proto.fetchPrimaryBodyParts = function fetchPrimaryBodyParts() {\n        return this.exercises.flatMap(function(exerciseRef) {\n            return exerciseRef.exercise.primaryBodyParts;\n        });\n    };\n    _proto.fetchSecondaryBodyParts = function fetchSecondaryBodyParts() {\n        return this.exercises.flatMap(function(exerciseRef) {\n            return exerciseRef.exercise.secondaryBodyParts;\n        });\n    };\n    _proto.findUndefinedValues = function findUndefinedValues(obj) {\n        var path = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n        var undefinedPaths = [];\n        function recursiveCheck(current, currentPath) {\n            if (current === undefined) {\n                undefinedPaths.push(currentPath);\n                return;\n            }\n            if (current === null || typeof current !== \"object\") {\n                return;\n            }\n            if (Array.isArray(current)) {\n                current.forEach(function(item, index) {\n                    recursiveCheck(item, \"\".concat(currentPath, \"[\").concat(index, \"]\"));\n                });\n                return;\n            }\n            Object.entries(current).forEach(function(param) {\n                var _param = (0,_swc_helpers_sliced_to_array__WEBPACK_IMPORTED_MODULE_4__._)(param, 2), key = _param[0], value = _param[1];\n                var newPath = currentPath ? \"\".concat(currentPath, \".\").concat(key) : key;\n                if (value === undefined) {\n                    undefinedPaths.push(newPath);\n                } else {\n                    recursiveCheck(value, newPath);\n                }\n            });\n        }\n        recursiveCheck(obj, path);\n        return undefinedPaths;\n    };\n    _proto.checkForUndefined = function checkForUndefined(data) {\n        var label = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"Data\";\n        var undefinedPaths = this.findUndefinedValues(data);\n        if (undefinedPaths.length > 0) {\n            console.error(\"\\uD83D\\uDEA8 Found undefined values in \".concat(label, \":\"));\n            undefinedPaths.forEach(function(path) {\n                console.error(\"  - \".concat(path));\n            });\n            return false;\n        }\n        return true;\n    };\n    _proto.toDictionary = function toDictionary() {\n        var data = {\n            id: this.id,\n            exercises: this.exercises.map(function(ex) {\n                return {\n                    exercise: ex.exercise.toDictionary(),\n                    groupId: ex.groupId\n                };\n            }),\n            logs: this.logs ? this.logs.map(function(log) {\n                return log.toDictionary();\n            }) : [],\n            title: this.title,\n            description: this.description,\n            zone: this.zone,\n            duration: this.duration,\n            workoutRating: this.workoutRating,\n            useAuthorContent: this.useAuthorContent,\n            isCompleted: this.isCompleted,\n            workoutStatus: this.workoutStatus,\n            author: this.author,\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.updatedAt),\n            assignedDate: this.assignedDate ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.assignedDate) : null,\n            startTime: this.startTime ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.startTime) : null,\n            order: this.order || null,\n            collectionId: this.collectionId || null,\n            challenge: this.challenge || null\n        };\n        // Validate data before returning\n        if (!this.checkForUndefined(data, \"Workout Dictionary\")) {\n            throw new Error(\"Workout contains undefined values\");\n        }\n        return data;\n    };\n    Workout.estimatedDuration = function estimatedDuration(exercises) {\n        var warmupTimeSeconds = 5 * 60; // 5 minutes in seconds\n        var cooldownTimeSeconds = 5 * 60; // 5 minutes in seconds\n        var totalTimeSeconds = 0;\n        var restTimeSeconds = 0;\n        var hasScreenTimeExercises = false;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = exercises[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var exerciseRef = _step.value;\n                var exercise = exerciseRef.exercise;\n                if (exercise.category.type === \"cardio\") {\n                    var _exercise_category_details;\n                    var duration = ((_exercise_category_details = exercise.category.details) === null || _exercise_category_details === void 0 ? void 0 : _exercise_category_details.duration) || 0;\n                    console.log(\"Cardio duration (minutes):\", duration);\n                    totalTimeSeconds += duration * 60; // Convert minutes to seconds\n                } else if (exercise.category.type === \"weight-training\") {\n                    var _exercise_category_details1;\n                    var screenTime = ((_exercise_category_details1 = exercise.category.details) === null || _exercise_category_details1 === void 0 ? void 0 : _exercise_category_details1.screenTime) || 0;\n                    if (screenTime > 0) {\n                        console.log(\"Screen time (seconds):\", screenTime);\n                        totalTimeSeconds += screenTime; // Already in seconds\n                        hasScreenTimeExercises = true;\n                    } else {\n                        console.log(\"Using default timing (8m exercise + 1m rest)\");\n                        totalTimeSeconds += 8 * 60; // 8 minutes in seconds\n                        restTimeSeconds += 60; // 1 minute in seconds\n                    }\n                }\n                console.log(\"Current totals (in seconds):\", {\n                    totalTimeSeconds: totalTimeSeconds,\n                    restTimeSeconds: restTimeSeconds,\n                    hasScreenTimeExercises: hasScreenTimeExercises\n                });\n                console.groupEnd();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        if (!hasScreenTimeExercises) {\n            console.log(\"Adding warmup/cool-down:\", (warmupTimeSeconds + cooldownTimeSeconds) / 60, \"minutes\");\n            totalTimeSeconds += warmupTimeSeconds + cooldownTimeSeconds;\n        }\n        var totalSeconds = totalTimeSeconds + restTimeSeconds;\n        console.log(\"Pre-rounded total (seconds):\", totalSeconds);\n        var finalEstimate;\n        if (!hasScreenTimeExercises) {\n            // Convert to minutes and round to nearest 5\n            var totalMinutes = totalSeconds / 60;\n            finalEstimate = Math.round(totalMinutes / 5) * 5;\n            console.log(\"Rounded to nearest 5 minutes:\", finalEstimate);\n        } else {\n            // Convert to minutes, rounding up to nearest minute\n            finalEstimate = Math.ceil(totalSeconds / 60);\n        }\n        console.log(\"Final estimated duration:\", finalEstimate, \"minutes\");\n        return finalEstimate;\n    };\n    Workout.determineWorkoutZone = function determineWorkoutZone(exercises) {\n        var bodyPartsInvolved = new Set();\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = exercises[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var exerciseRef = _step.value;\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = (exerciseRef.exercise.primaryBodyParts || [\n                        exerciseRef.exercise.primaryBodyParts\n                    ])[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var bodyPart = _step1.value;\n                        bodyPartsInvolved.add(bodyPart);\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1[\"return\"] != null) {\n                            _iterator1[\"return\"]();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        var upperBodyParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Chest,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Shoulders,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Biceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Triceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Traps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Lats,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Forearms\n        ]);\n        var lowerBodyParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Hamstrings,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Glutes,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Quadriceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Calves\n        ]);\n        var coreParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Abs,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Lowerback\n        ]);\n        var hasCommonElements = function(set1, set2) {\n            return Array.from(set1).some(function(item) {\n                return set2.has(item);\n            });\n        };\n        var hasUpperBody = hasCommonElements(bodyPartsInvolved, upperBodyParts);\n        var hasLowerBody = hasCommonElements(bodyPartsInvolved, lowerBodyParts);\n        var hasCore = hasCommonElements(bodyPartsInvolved, coreParts);\n        if (hasUpperBody && hasLowerBody && hasCore || hasUpperBody && hasLowerBody) {\n            return \"Full Body\";\n        } else if (hasUpperBody && hasCore || hasUpperBody) {\n            return \"Upper Body\";\n        } else if (hasLowerBody && hasCore || hasLowerBody) {\n            return \"Lower Body\";\n        } else if (hasCore) {\n            return \"Core\";\n        } else {\n            return \"Full Body\";\n        }\n    };\n    (0,_swc_helpers_create_class__WEBPACK_IMPORTED_MODULE_5__._)(Workout, [\n        {\n            key: \"isTimedWorkout\",\n            get: function get() {\n                if (!this.logs) return false;\n                return this.logs.some(function(log) {\n                    if (log.exercise.category.type === \"weight-training\") {\n                        var _log_exercise_category_details;\n                        return ((_log_exercise_category_details = log.exercise.category.details) === null || _log_exercise_category_details === void 0 ? void 0 : _log_exercise_category_details.screenTime) !== 0;\n                    } else if (log.exercise.category.type === \"cardio\") {\n                        var _log_exercise_category_details1;\n                        return ((_log_exercise_category_details1 = log.exercise.category.details) === null || _log_exercise_category_details1 === void 0 ? void 0 : _log_exercise_category_details1.screenTime) !== 0;\n                    }\n                    return false;\n                });\n            }\n        }\n    ]);\n    return Workout;\n}();\nvar WorkoutSummary = function WorkoutSummary(data) {\n    \"use strict\";\n    (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, WorkoutSummary);\n    this.id = data.id;\n    this.workoutId = data.workoutId;\n    this.exercises = data.exercises.map(function(ex) {\n        return new _exercise_types__WEBPACK_IMPORTED_MODULE_0__.ExerciseLog(ex);\n    });\n    this.bodyParts = data.bodyParts;\n    this.secondaryBodyParts = data.secondaryBodyParts;\n    this.workoutTitle = data.workoutTitle;\n    this.caloriesBurned = data.caloriesBurned;\n    this.workoutRating = data.workoutRating;\n    this.exercisesCompleted = data.exercisesCompleted.map(function(ex) {\n        return new _exercise_types__WEBPACK_IMPORTED_MODULE_0__.ExerciseLog(ex);\n    });\n    this.aiInsight = data.aiInsight;\n    this.recommendations = data.recommendations;\n    this.gifURLs = data.gifURLs;\n    this.recommendedWork = data.recommendedWork;\n    this.isCompleted = data.isCompleted;\n    this.createdAt = data.createdAt ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt) : new Date();\n    this.updatedAt = data.updatedAt ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt) : new Date();\n    this.completedAt = data.completedAt ? (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.completedAt) : null;\n    this.duration = data.duration;\n};\nvar SweatlistType;\n(function(SweatlistType) {\n    SweatlistType[\"Together\"] = \"together\";\n    SweatlistType[\"Solo\"] = \"solo\";\n    SweatlistType[\"Locked\"] = \"locked\";\n})(SweatlistType || (SweatlistType = {}));\nvar ReferralChain = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ReferralChain(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ReferralChain);\n        this.originalHostId = data.originalHostId || \"\";\n        this.sharedBy = data.sharedBy || \"\";\n    }\n    var _proto = ReferralChain.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            originalHostId: this.originalHostId,\n            sharedBy: this.sharedBy\n        };\n    };\n    ReferralChain.fromFirestore = function fromFirestore(data) {\n        return new ReferralChain(data);\n    };\n    return ReferralChain;\n}();\n// Main SweatlistCollection interface\nvar SweatlistCollection = /*#__PURE__*/ function() {\n    \"use strict\";\n    function SweatlistCollection(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, SweatlistCollection);\n        this.id = data.id;\n        this.title = data.title || \"\";\n        this.subtitle = data.subtitle || \"\";\n        this.pin = data.pin || null;\n        this.challenge = data.challenge ? new Challenge(data.challenge) : null;\n        this.sweatlistIds = (data.sweatlistIds || []).map(function(item) {\n            return {\n                id: item.id || \"\",\n                sweatlistAuthorId: item.sweatlistAuthorId || \"\",\n                sweatlistName: item.sweatlistName || \"\",\n                order: item.order || 0\n            };\n        });\n        // If ownerId is not an array, wrap it in an array.\n        if (Array.isArray(data.ownerId)) {\n            this.ownerId = data.ownerId;\n        } else if (data.ownerId) {\n            this.ownerId = [\n                data.ownerId\n            ];\n        } else {\n            this.ownerId = [];\n        }\n        this.privacy = this.challenge ? \"together\" : \"solo\";\n        this.participants = (data.participants || []).map(function(participant) {\n            return participant || \"\";\n        });\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = SweatlistCollection.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            title: this.title,\n            subtitle: this.subtitle,\n            pin: this.pin,\n            challenge: this.challenge ? this.challenge.toDictionary() : null,\n            sweatlistIds: this.sweatlistIds.map(function(item) {\n                return {\n                    id: item.id,\n                    sweatlistAuthorId: item.sweatlistAuthorId,\n                    order: item.order\n                };\n            }),\n            ownerId: this.ownerId,\n            privacy: this.privacy,\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.updatedAt)\n        };\n    };\n    _proto.isPublished = function isPublished() {\n        if (!this.challenge) return false;\n        return this.challenge.status === \"published\";\n    };\n    return SweatlistCollection;\n}();\nvar ProfileImage = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ProfileImage(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, ProfileImage);\n        this.profileImageURL = data.profileImageURL || \"\";\n        this.thumbnailURL = data.thumbnailURL || \"\";\n    }\n    var _proto = ProfileImage.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            profileImageURL: this.profileImageURL,\n            thumbnailURL: this.thumbnailURL || null\n        };\n    };\n    ProfileImage.fromFirestore = function fromFirestore(data) {\n        return new ProfileImage(data);\n    };\n    return ProfileImage;\n}();\nvar UserLocation = /*#__PURE__*/ function() {\n    \"use strict\";\n    function UserLocation(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, UserLocation);\n        this.latitude = data.latitude || 0;\n        this.longitude = data.longitude || 0;\n    }\n    var _proto = UserLocation.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            latitude: this.latitude,\n            longitude: this.longitude\n        };\n    };\n    UserLocation.fromFirestore = function fromFirestore(data) {\n        return new UserLocation(data);\n    };\n    return UserLocation;\n}();\nvar PulsePoints = /*#__PURE__*/ function() {\n    \"use strict\";\n    function PulsePoints(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, PulsePoints);\n        var _data_baseCompletion;\n        this.baseCompletion = (_data_baseCompletion = data.baseCompletion) !== null && _data_baseCompletion !== void 0 ? _data_baseCompletion : 0;\n        var _data_firstCompletion;\n        this.firstCompletion = (_data_firstCompletion = data.firstCompletion) !== null && _data_firstCompletion !== void 0 ? _data_firstCompletion : 0;\n        var _data_streakBonus;\n        this.streakBonus = (_data_streakBonus = data.streakBonus) !== null && _data_streakBonus !== void 0 ? _data_streakBonus : 0;\n        var _data_checkInBonus;\n        this.checkInBonus = (_data_checkInBonus = data.checkInBonus) !== null && _data_checkInBonus !== void 0 ? _data_checkInBonus : 0;\n        var _data_effortRating;\n        this.effortRating = (_data_effortRating = data.effortRating) !== null && _data_effortRating !== void 0 ? _data_effortRating : 0;\n        var _data_chatParticipation;\n        this.chatParticipation = (_data_chatParticipation = data.chatParticipation) !== null && _data_chatParticipation !== void 0 ? _data_chatParticipation : 0;\n        var _data_locationCheckin;\n        this.locationCheckin = (_data_locationCheckin = data.locationCheckin) !== null && _data_locationCheckin !== void 0 ? _data_locationCheckin : 0;\n        var _data_contentEngagement;\n        this.contentEngagement = (_data_contentEngagement = data.contentEngagement) !== null && _data_contentEngagement !== void 0 ? _data_contentEngagement : 0;\n        var _data_encouragementSent;\n        this.encouragementSent = (_data_encouragementSent = data.encouragementSent) !== null && _data_encouragementSent !== void 0 ? _data_encouragementSent : 0;\n        var _data_encouragementReceived;\n        this.encouragementReceived = (_data_encouragementReceived = data.encouragementReceived) !== null && _data_encouragementReceived !== void 0 ? _data_encouragementReceived : 0;\n        var _data_cumulativeStreakBonus;\n        this.cumulativeStreakBonus = (_data_cumulativeStreakBonus = data.cumulativeStreakBonus) !== null && _data_cumulativeStreakBonus !== void 0 ? _data_cumulativeStreakBonus : 0;\n    }\n    var _proto = PulsePoints.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            baseCompletion: this.baseCompletion,\n            firstCompletion: this.firstCompletion,\n            streakBonus: this.streakBonus,\n            checkInBonus: this.checkInBonus,\n            effortRating: this.effortRating,\n            chatParticipation: this.chatParticipation,\n            locationCheckin: this.locationCheckin,\n            contentEngagement: this.contentEngagement,\n            encouragementSent: this.encouragementSent,\n            encouragementReceived: this.encouragementReceived,\n            cumulativeStreakBonus: this.cumulativeStreakBonus,\n            totalStackPoints: this.totalStackPoints,\n            totalCommunityPoints: this.totalCommunityPoints,\n            totalPoints: this.totalPoints\n        };\n    };\n    PulsePoints.fromFirestore = function fromFirestore(data) {\n        return new PulsePoints(data);\n    };\n    (0,_swc_helpers_create_class__WEBPACK_IMPORTED_MODULE_5__._)(PulsePoints, [\n        {\n            key: \"totalStackPoints\",\n            get: function get() {\n                return this.baseCompletion + this.firstCompletion + this.streakBonus + this.checkInBonus + this.effortRating;\n            }\n        },\n        {\n            key: \"totalCommunityPoints\",\n            get: function get() {\n                return this.chatParticipation + this.locationCheckin + this.contentEngagement + this.encouragementSent + this.encouragementReceived;\n            }\n        },\n        {\n            key: \"totalPoints\",\n            get: function get() {\n                return this.totalStackPoints + this.totalCommunityPoints + this.cumulativeStreakBonus;\n            }\n        }\n    ]);\n    return PulsePoints;\n}();\n// Types for user in challenge\nvar UserChallenge = /*#__PURE__*/ function() {\n    \"use strict\";\n    function UserChallenge(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, UserChallenge);\n        this.id = data.id;\n        this.challenge = data.challenge ? new Challenge(data.challenge) : undefined;\n        this.challengeId = data.challengeId || \"\";\n        this.userId = data.userId || \"\";\n        this.username = data.username || \"\";\n        this.profileImage = data.profileImage ? new ProfileImage(data.profileImage) : undefined;\n        var _data_progress;\n        this.progress = (_data_progress = data.progress) !== null && _data_progress !== void 0 ? _data_progress : 0;\n        this.referralChains = data.referralChains ? new ReferralChain(data.referralChains) : new ReferralChain({\n            originalHostId: \"\",\n            sharedBy: \"\"\n        });\n        this.completedWorkouts = Array.isArray(data.completedWorkouts) ? data.completedWorkouts.map(function(cw) {\n            return {\n                id: cw.id || \"\",\n                workoutId: cw.workoutId || \"\",\n                completedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(cw.completedAt)\n            };\n        }) : [];\n        var _data_isCompleted;\n        this.isCompleted = (_data_isCompleted = data.isCompleted) !== null && _data_isCompleted !== void 0 ? _data_isCompleted : false;\n        this.location = data.location ? new UserLocation(data.location) : undefined;\n        this.city = data.city || \"\";\n        this.country = data.country || \"\";\n        this.timezone = data.timezone || \"\";\n        this.joinDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.joinDate);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n        this.pulsePoints = data.pulsePoints ? new PulsePoints(data.pulsePoints) : new PulsePoints({});\n        var _data_currentStreak;\n        this.currentStreak = (_data_currentStreak = data.currentStreak) !== null && _data_currentStreak !== void 0 ? _data_currentStreak : 0;\n        this.encouragedUsers = Array.isArray(data.encouragedUsers) ? data.encouragedUsers : [];\n        this.encouragedByUsers = Array.isArray(data.encouragedByUsers) ? data.encouragedByUsers : [];\n        this.checkIns = Array.isArray(data.checkIns) ? data.checkIns.map(function(d) {\n            return new CheckIn(d);\n        }) : [];\n    }\n    var _proto = UserChallenge.prototype;\n    // Optionally, add a method to convert to a plain dictionary (for saving to Firestore)\n    _proto.toDictionary = function toDictionary() {\n        return {\n            challenge: this.challenge ? this.challenge.toDictionary() : null,\n            challengeId: this.challengeId,\n            userId: this.userId,\n            username: this.username,\n            profileImage: this.profileImage ? this.profileImage.toDictionary() : null,\n            progress: this.progress,\n            referralChains: this.referralChains ? this.referralChains.toDictionary() : {},\n            completedWorkouts: this.completedWorkouts.map(function(workout) {\n                return (0,_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_6__._)((0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_7__._)({}, workout), {\n                    completedAt: Math.floor(new Date(workout.completedAt).getTime() / 1000)\n                });\n            }),\n            isCompleted: this.isCompleted,\n            location: this.location ? this.location.toDictionary() : null,\n            city: this.city,\n            country: this.country,\n            timezone: this.timezone,\n            joinDate: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.joinDate),\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.updatedAt),\n            pulsePoints: this.pulsePoints ? this.pulsePoints.toDictionary() : {},\n            currentStreak: this.currentStreak,\n            encouragedUsers: this.encouragedUsers,\n            encouragedByUsers: this.encouragedByUsers,\n            checkIns: this.checkIns.map(function(checkIn) {\n                return checkIn.toDictionary();\n            })\n        };\n    };\n    // Optionally, you can add a static method to create an instance from Firestore data\n    UserChallenge.fromFirestore = function fromFirestore(id, data) {\n        return new UserChallenge(data);\n    };\n    return UserChallenge;\n}();\nvar ChallengeStatus;\n// Challenge status enum\n(function(ChallengeStatus) {\n    ChallengeStatus[\"Draft\"] = \"draft\";\n    ChallengeStatus[\"Published\"] = \"published\";\n    ChallengeStatus[\"Completed\"] = \"completed\";\n    ChallengeStatus[\"Cancelled\"] = \"cancelled\";\n})(ChallengeStatus || (ChallengeStatus = {}));\nvar IntroVideo = /*#__PURE__*/ function() {\n    \"use strict\";\n    function IntroVideo(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, IntroVideo);\n        this.id = data.id;\n        this.userId = data.userId;\n        this.videoUrl = data.videoUrl;\n    }\n    var _proto = IntroVideo.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            userId: this.userId,\n            videoUrl: this.videoUrl\n        };\n    };\n    return IntroVideo;\n}();\nvar Challenge = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Challenge(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_3__._)(this, Challenge);\n        this.id = data.id;\n        this.title = data.title;\n        this.subtitle = data.subtitle;\n        // Use an empty array if participants is missing.\n        this.participants = Array.isArray(data.participants) ? data.participants : [];\n        this.status = data.status;\n        console.log(\"Challenge start date\", (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.startDate));\n        this.startDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.startDate);\n        this.endDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.endDate);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n        // Handle both old and new format for intro videos.\n        if (Array.isArray(data.introVideos)) {\n            this.introVideos = data.introVideos.map(function(video) {\n                return new IntroVideo(video);\n            });\n        } else if (data.introVideoURL && Array.isArray(data.participants) && data.participants.length > 0) {\n            this.introVideos = [\n                new IntroVideo({\n                    id: \"1\",\n                    userId: data.participants[0].userId,\n                    videoUrl: data.introVideoURL\n                })\n            ];\n        } else {\n            this.introVideos = [];\n        }\n        this.durationInDays = this.calculateDurationInDays();\n    }\n    var _proto = Challenge.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            title: this.title,\n            subtitle: this.subtitle,\n            participants: this.participants.map(function(participant) {\n                return {\n                    id: participant.id,\n                    challengeId: participant.challengeId,\n                    userId: participant.userId,\n                    username: participant.username,\n                    profileImage: participant.profileImage,\n                    progress: participant.progress,\n                    completedWorkouts: participant.completedWorkouts,\n                    isCompleted: participant.isCompleted,\n                    location: participant.location,\n                    city: participant.city,\n                    country: participant.country,\n                    timezone: participant.timezone,\n                    joinDate: participant.joinDate,\n                    createdAt: participant.createdAt,\n                    updatedAt: participant.updatedAt,\n                    pulsePoints: participant.pulsePoints,\n                    currentStreak: participant.currentStreak,\n                    encouragedUsers: participant.encouragedUsers,\n                    encouragedByUsers: participant.encouragedByUsers,\n                    checkIns: participant.checkIns\n                };\n            }),\n            status: this.status,\n            startDate: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.startDate),\n            endDate: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.endDate),\n            createdAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.createdAt),\n            updatedAt: (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.dateToUnixTimestamp)(this.updatedAt),\n            durationInDays: this.durationInDays,\n            introVideos: this.introVideos.map(function(video) {\n                return video.toDictionary();\n            })\n        };\n    };\n    /**\n   * Calculates the duration in days between the startDate and endDate.\n   * @returns The number of days between the two dates.\n   */ _proto.calculateDurationInDays = function calculateDurationInDays() {\n        var _this_startDate, _this_endDate;\n        var start = (_this_startDate = this.startDate) === null || _this_startDate === void 0 ? void 0 : _this_startDate.valueOf();\n        var end = (_this_endDate = this.endDate) === null || _this_endDate === void 0 ? void 0 : _this_endDate.valueOf();\n        if (!start || !end || isNaN(start) || isNaN(end)) {\n            throw new Error(\"Invalid startDate or endDate\");\n        }\n        var durationInMilliseconds = end - start;\n        return Math.ceil(durationInMilliseconds / (1000 * 60 * 60 * 24));\n    };\n    Challenge.toFirestoreObject = function toFirestoreObject(obj) {\n        var _this = this;\n        if (obj === null || typeof obj !== \"object\") {\n            return obj;\n        }\n        if (obj instanceof Date) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            return obj.map(function(item) {\n                return _this.toFirestoreObject(item);\n            });\n        }\n        if (obj instanceof Challenge) {\n            return {\n                id: obj.id,\n                title: obj.title,\n                subtitle: obj.subtitle,\n                participants: obj.participants,\n                status: obj.status,\n                startDate: obj.startDate,\n                endDate: obj.endDate,\n                createdAt: obj.createdAt,\n                updatedAt: obj.updatedAt,\n                introVideos: obj.introVideos.map(function(video) {\n                    return {\n                        id: video.id,\n                        userId: video.userId,\n                        videoUrl: video.videoUrl\n                    };\n                })\n            };\n        }\n        var plainObject = {};\n        for(var key in obj){\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                plainObject[key] = this.toFirestoreObject(obj[key]);\n            }\n        }\n        return plainObject;\n    };\n    return Challenge;\n}();\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVE7Z0JBQ3RCUSxjQUFjbkcsSUFBSW1HLFlBQVk7Z0JBQzlCRyxRQUFRdEcsSUFBSXNHLE1BQU07Z0JBQ2xCOEMsV0FBV3BKLElBQUlvSixTQUFTO2dCQUN4QkMsU0FBU3JKLElBQUlxSixPQUFPO2dCQUNwQmxNLFdBQVc2QyxJQUFJN0MsU0FBUztnQkFDeEIrQixXQUFXYyxJQUFJZCxTQUFTO2dCQUN4Qm9LLGFBQWF0SixJQUFJc0osV0FBVyxDQUFDaEksR0FBRyxDQUFDaUksU0FBQUE7MkJBQVU7d0JBQ3pDek0sSUFBSXlNLE1BQU16TSxFQUFFO3dCQUNaQyxRQUFRd00sTUFBTXhNLE1BQU07d0JBQ3BCRyxVQUFVcU0sTUFBTXJNLFFBQVE7b0JBQzFCOztZQUNGO1FBQ0Y7UUFFQSxJQUFNK00sY0FBc0MsQ0FBQztRQUM3QyxJQUFLLElBQU1uSixPQUFPZCxJQUFLO1lBQ3JCLElBQUlZLE9BQU9zSixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDcEssS0FBS2MsTUFBTTtnQkFDbERtSixXQUFXLENBQUNuSixJQUFJLEdBQUcsSUFBSSxDQUFDa0osaUJBQWlCLENBQUNoSyxHQUFHLENBQUNjLElBQUk7WUFDcEQ7UUFDRjtRQUNBLE9BQU9tSjtJQUNUO1dBckpJcEU7O0FBdUsrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBpL2ZpcmViYXNlL3dvcmtvdXQvdHlwZXMudHM/YmQyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeGVyY2lzZVJlZmVyZW5jZSwgRXhlcmNpc2VMb2csIEV4ZXJjaXNlQXV0aG9yIH0gZnJvbSAnLi4vZXhlcmNpc2UvdHlwZXMnO1xuaW1wb3J0IHsgQm9keVBhcnQsIEV4ZXJjaXNlQ2F0ZWdvcnkgfSBmcm9tICcuLi9leGVyY2lzZS90eXBlcyc7XG5pbXBvcnQgeyBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wLCBkYXRlVG9Vbml4VGltZXN0YW1wIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvZm9ybWF0RGF0ZSc7XG5pbXBvcnQgeyB3b3Jrb3V0U2VydmljZSB9IGZyb20gJy4uL3dvcmtvdXQvc2VydmljZSc7XG5cbmV4cG9ydCBjbGFzcyBDaGVja0luIHtcbiAgaWQ6IHN0cmluZztcbiAgdXNlcklkOiBzdHJpbmc7XG4gIHdvcmtvdXRJZDogc3RyaW5nO1xuICBwaG90b1VybDogc3RyaW5nO1xuICB2aWRlb1VybDogc3RyaW5nO1xuICBjcmVhdGVkQXQ6IERhdGU7XG5cbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgdGhpcy5pZCA9IGRhdGEuaWQgfHwgJyc7XG4gICAgdGhpcy51c2VySWQgPSBkYXRhLnVzZXJJZCB8fCAnJztcbiAgICB0aGlzLndvcmtvdXRJZCA9IGRhdGEud29ya291dElkIHx8ICcnO1xuICAgIHRoaXMucGhvdG9VcmwgPSBkYXRhLnBob3RvVXJsIHx8ICcnO1xuICAgIHRoaXMudmlkZW9VcmwgPSBkYXRhLnZpZGVvVXJsIHx8ICcnO1xuICAgIC8vIElmIGNyZWF0ZWRBdCBpcyBhIFVuaXggdGltZXN0YW1wIGluIHNlY29uZHMsIGNvbnZlcnQgaXQgdG8gYSBEYXRlXG4gICAgdGhpcy5jcmVhdGVkQXQgPSBkYXRhLmNyZWF0ZWRBdFxuICAgICAgPyAodHlwZW9mIGRhdGEuY3JlYXRlZEF0ID09PSAnbnVtYmVyJ1xuICAgICAgICAgID8gbmV3IERhdGUoZGF0YS5jcmVhdGVkQXQgKiAxMDAwKVxuICAgICAgICAgIDogbmV3IERhdGUoZGF0YS5jcmVhdGVkQXQpKVxuICAgICAgOiBuZXcgRGF0ZSgpO1xuICB9XG5cbiAgdG9EaWN0aW9uYXJ5KCk6IHsgW2tleTogc3RyaW5nXTogYW55IH0ge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogdGhpcy5pZCxcbiAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsXG4gICAgICB3b3Jrb3V0SWQ6IHRoaXMud29ya291dElkLFxuICAgICAgcGhvdG9Vcmw6IHRoaXMucGhvdG9VcmwsXG4gICAgICB2aWRlb1VybDogdGhpcy52aWRlb1VybCxcbiAgICAgIGNyZWF0ZWRBdDogZGF0ZVRvVW5peFRpbWVzdGFtcCh0aGlzLmNyZWF0ZWRBdClcbiAgICB9O1xuICB9XG59XG5cbi8vIHNyYy90eXBlcy9Xb3Jrb3V0VHlwZXMudHNcbmV4cG9ydCBlbnVtIFdvcmtvdXRTdGF0dXMge1xuICBRdWV1ZWRVcCA9ICdxdWV1ZWRVcCcsXG4gIEluUHJvZ3Jlc3MgPSAnaW5Qcm9ncmVzcycsXG4gIENvbXBsZXRlID0gJ2NvbXBsZXRlJyxcbiAgQXJjaGl2ZWQgPSAnYXJjaGl2ZWQnXG59XG5cbi8vIHNyYy90eXBlcy9Xb3Jrb3V0VHlwZXMudHNcbmV4cG9ydCBlbnVtIFdvcmtvdXRSYXRpbmcge1xuICBUb29IYXJkID0gJ1RvbyBIYXJkJyxcbiAgVG9vRWFzeSA9ICdUb28gRWFzeScsXG4gIEp1c3RSaWdodCA9ICdKdXN0IFJpZ2h0J1xufVxuXG5cbmV4cG9ydCBlbnVtIEJvZHlab25lIHtcbiAgTG93ZXJCb2R5ID0gXCJMb3dlciBCb2R5XCIsXG4gIFVwcGVyQm9keSA9IFwiVXBwZXIgQm9keVwiLFxuICBGdWxsQm9keSA9IFwiRnVsbCBCb2R5XCIsXG4gIENvcmUgPSBcIkNvcmVcIlxuXG59XG4gIFxuZXhwb3J0IGNsYXNzIFJlcHNBbmRXZWlnaHRMb2cge1xuICByZXBzOiBudW1iZXI7XG4gIHdlaWdodDogbnVtYmVyO1xuICBsZWZ0UmVwczogbnVtYmVyO1xuICBsZWZ0V2VpZ2h0OiBudW1iZXI7XG4gIGlzU3BsaXQ6IGJvb2xlYW47XG4gIGlzQm9keVdlaWdodDogYm9vbGVhbjtcbiAgZHVyYXRpb246IG51bWJlcjtcbiAgY2Fsb3JpZXM6IG51bWJlcjtcbiAgYnBtOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgdGhpcy5yZXBzID0gZGF0YS5yZXBzIHx8IDA7XG4gICAgdGhpcy53ZWlnaHQgPSBkYXRhLndlaWdodCB8fCAwO1xuICAgIHRoaXMubGVmdFJlcHMgPSBkYXRhLmxlZnRSZXBzIHx8IDA7XG4gICAgdGhpcy5sZWZ0V2VpZ2h0ID0gZGF0YS5sZWZ0V2VpZ2h0IHx8IDA7XG4gICAgdGhpcy5pc1NwbGl0ID0gZGF0YS5pc1NwbGl0IHx8IGZhbHNlO1xuICAgIHRoaXMuaXNCb2R5V2VpZ2h0ID0gZGF0YS5pc0JvZHlXZWlnaHQgfHwgZmFsc2U7XG4gICAgdGhpcy5kdXJhdGlvbiA9IGRhdGEuZHVyYXRpb24gfHwgMDtcbiAgICB0aGlzLmNhbG9yaWVzID0gZGF0YS5jYWxvcmllcyB8fCAwO1xuICAgIHRoaXMuYnBtID0gZGF0YS5icG0gfHwgMDtcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiB7IFtrZXk6IHN0cmluZ106IGFueSB9IHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVwczogdGhpcy5yZXBzLFxuICAgICAgd2VpZ2h0OiB0aGlzLndlaWdodCxcbiAgICAgIGxlZnRSZXBzOiB0aGlzLmxlZnRSZXBzLFxuICAgICAgbGVmdFdlaWdodDogdGhpcy5sZWZ0V2VpZ2h0LFxuICAgICAgaXNTcGxpdDogdGhpcy5pc1NwbGl0LFxuICAgICAgaXNCb2R5V2VpZ2h0OiB0aGlzLmlzQm9keVdlaWdodCxcbiAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgY2Fsb3JpZXM6IHRoaXMuY2Fsb3JpZXMsXG4gICAgICBicG06IHRoaXMuYnBtXG4gICAgfTtcbiAgfVxufVxuXG4vLyBXb3Jrb3V0Q2xhc3MudHNcblxuZXhwb3J0IGNsYXNzIFdvcmtvdXQge1xuICBpZDogc3RyaW5nO1xuICBjb2xsZWN0aW9uSWQ/OiBzdHJpbmdbXSB8IG51bGw7XG4gIHJvdW5kV29ya291dElkOiBzdHJpbmc7XG4gIGV4ZXJjaXNlczogRXhlcmNpc2VSZWZlcmVuY2VbXTtcbiAgY2hhbGxlbmdlPzogQ2hhbGxlbmdlIHwgbnVsbDtcbiAgbG9ncz86IEV4ZXJjaXNlTG9nW10gfCBudWxsO1xuICB0aXRsZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBkdXJhdGlvbjogbnVtYmVyO1xuICB3b3Jrb3V0UmF0aW5nPzogV29ya291dFJhdGluZyB8IG51bGw7XG4gIHVzZUF1dGhvckNvbnRlbnQ6IGJvb2xlYW47XG4gIGlzQ29tcGxldGVkOiBib29sZWFuO1xuICB3b3Jrb3V0U3RhdHVzOiBXb3Jrb3V0U3RhdHVzO1xuICBzdGFydFRpbWU/OiBEYXRlIHwgbnVsbDtcbiAgb3JkZXI/OiBudW1iZXIgfCBudWxsO1xuICBhdXRob3I6IHN0cmluZztcbiAgYXNzaWduZWREYXRlPzogRGF0ZSB8IG51bGw7XG4gIGNyZWF0ZWRBdDogRGF0ZTtcbiAgdXBkYXRlZEF0OiBEYXRlO1xuICB6b25lOiBCb2R5Wm9uZTtcbiBcbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgLy8gRm9yIHN0cmluZyBmaWVsZHMsIGRlZmF1bHQgdG8gZW1wdHkgc3RyaW5nIGlmIG5vdCBwcm92aWRlZC5cbiAgICB0aGlzLmlkID0gZGF0YS5pZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5pZCA6ICcnO1xuICAgIHRoaXMucm91bmRXb3Jrb3V0SWQgPSBkYXRhLnJvdW5kV29ya291dElkICE9PSB1bmRlZmluZWQgPyBkYXRhLnJvdW5kV29ya291dElkIDogJyc7XG4gICAgdGhpcy50aXRsZSA9IGRhdGEudGl0bGUgIT09IHVuZGVmaW5lZCA/IGRhdGEudGl0bGUgOiAnJztcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGF0YS5kZXNjcmlwdGlvbiAhPT0gdW5kZWZpbmVkID8gZGF0YS5kZXNjcmlwdGlvbiA6ICcnO1xuICAgIFxuICAgIC8vIEZvciBudW1lcmljIGZpZWxkcywgZGVmYXVsdCB0byAwLlxuICAgIHRoaXMuZHVyYXRpb24gPSBkYXRhLmR1cmF0aW9uICE9PSB1bmRlZmluZWQgPyBkYXRhLmR1cmF0aW9uIDogMDtcbiAgICBcbiAgICAvLyBGb3IgYm9vbGVhbiBmaWVsZHMsIGRlZmF1bHQgdG8gZmFsc2UuXG4gICAgdGhpcy51c2VBdXRob3JDb250ZW50ID0gZGF0YS51c2VBdXRob3JDb250ZW50ICE9PSB1bmRlZmluZWQgPyBkYXRhLnVzZUF1dGhvckNvbnRlbnQgOiBmYWxzZTtcbiAgICB0aGlzLmlzQ29tcGxldGVkID0gZGF0YS5pc0NvbXBsZXRlZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5pc0NvbXBsZXRlZCA6IGZhbHNlO1xuICAgIFxuICAgIC8vIEZvciBlbnVtIGZpZWxkcyAod29ya291dFN0YXR1cywgd29ya291dFJhdGluZyksIHlvdSBjYW4gZWl0aGVyIGRlZmF1bHQgdG8gYSBzcGVjaWZpYyB2YWx1ZSBvciBudWxsLlxuICAgIHRoaXMud29ya291dFN0YXR1cyA9IGRhdGEud29ya291dFN0YXR1cyAhPT0gdW5kZWZpbmVkID8gZGF0YS53b3Jrb3V0U3RhdHVzIDogV29ya291dFN0YXR1cy5BcmNoaXZlZDtcbiAgICB0aGlzLndvcmtvdXRSYXRpbmcgPSBkYXRhLndvcmtvdXRSYXRpbmcgIT09IHVuZGVmaW5lZCA/IGRhdGEud29ya291dFJhdGluZyA6IG51bGw7XG4gICAgXG4gICAgLy8gRm9yIGFycmF5cywgZGVmYXVsdCB0byBhbiBlbXB0eSBhcnJheS5cbiAgICB0aGlzLmV4ZXJjaXNlcyA9IGRhdGEuZXhlcmNpc2VzICE9PSB1bmRlZmluZWQgPyBkYXRhLmV4ZXJjaXNlcyA6IFtdO1xuICAgIFxuICAgIC8vIEZvciBvcHRpb25hbCBvYmplY3RzLCBkZWZhdWx0IHRvIG51bGwgaWYgbWlzc2luZy5cbiAgICB0aGlzLmNoYWxsZW5nZSA9IGRhdGEuY2hhbGxlbmdlICE9PSB1bmRlZmluZWQgPyBkYXRhLmNoYWxsZW5nZSA6IG51bGw7XG4gICAgdGhpcy5sb2dzID0gZGF0YS5sb2dzICE9PSB1bmRlZmluZWQgPyBkYXRhLmxvZ3MgOiBudWxsO1xuICAgIHRoaXMuY29sbGVjdGlvbklkID0gZGF0YS5jb2xsZWN0aW9uSWQgIT09IHVuZGVmaW5lZCA/IGRhdGEuY29sbGVjdGlvbklkIDogbnVsbDtcbiAgICBcbiAgICAvLyBGb3IgZGF0ZXMsIGlmIHRoZSBmaWVsZCBleGlzdHMgYW5kIGlzIGEgRGF0ZSwgdXNlIGl0OyBvdGhlcndpc2UgZGVmYXVsdCB0byBudWxsIChvciBuZXcgRGF0ZSgpIGZvciBjcmVhdGVkQXQvdXBkYXRlZEF0KVxuICAgIHRoaXMuc3RhcnRUaW1lID0gZGF0YS5zdGFydFRpbWUgPyBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEuc3RhcnRUaW1lKSA6IG51bGw7XG4gICAgdGhpcy5hc3NpZ25lZERhdGUgPSBkYXRhLmFzc2lnbmVkRGF0ZSA/IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAoZGF0YS5hc3NpZ25lZERhdGUpIDogbnVsbDtcbiAgICB0aGlzLmNyZWF0ZWRBdCA9IGRhdGEuY3JlYXRlZEF0ID8gY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcChkYXRhLmNyZWF0ZWRBdCkgOiBuZXcgRGF0ZSgpO1xuICAgIHRoaXMudXBkYXRlZEF0ID0gZGF0YS51cGRhdGVkQXQgPyBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEudXBkYXRlZEF0KSA6IG5ldyBEYXRlKCk7XG4gICAgXG4gICAgLy8gRm9yIG9yZGVyLCBkZWZhdWx0IHRvIG51bGwgaWYgbm90IHByb3ZpZGVkLlxuICAgIHRoaXMub3JkZXIgPSBkYXRhLm9yZGVyICE9PSB1bmRlZmluZWQgPyBkYXRhLm9yZGVyIDogbnVsbDtcblxuICAgIC8vIEluIFdvcmtvdXQgY29uc3RydWN0b3I6XG4gICAgaWYgKGRhdGEuYXV0aG9yPy51c2VybmFtZSkge1xuICAgICAgdGhpcy5hdXRob3IgPSBkYXRhLmF1dGhvci51c2VySWQ7XG4gICAgICB3b3Jrb3V0U2VydmljZS5yZXZlcnRBdXRob3JGb3JtYXQodGhpcy5pZCwgdGhpcy5hdXRob3IpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmF1dGhvciA9IGRhdGEuYXV0aG9yXG4gICAgfVxuICAgIC8vIEZvciB6b25lLCBkZWZhdWx0IHRvIEZ1bGxCb2R5IChvciBhbnkgb3RoZXIgZGVmYXVsdCB5b3UgcHJlZmVyKVxuICAgIHRoaXMuem9uZSA9IGRhdGEuem9uZSAhPT0gdW5kZWZpbmVkID8gZGF0YS56b25lIDogQm9keVpvbmUuRnVsbEJvZHk7XG4gIH1cblxuICBnZXQgaXNUaW1lZFdvcmtvdXQoKTogYm9vbGVhbiB7XG4gICAgaWYgKCF0aGlzLmxvZ3MpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdGhpcy5sb2dzLnNvbWUobG9nID0+IHtcbiAgICAgIGlmIChsb2cuZXhlcmNpc2UuY2F0ZWdvcnkudHlwZSA9PT0gJ3dlaWdodC10cmFpbmluZycpIHtcbiAgICAgICAgcmV0dXJuIGxvZy5leGVyY2lzZS5jYXRlZ29yeS5kZXRhaWxzPy5zY3JlZW5UaW1lICE9PSAwO1xuICAgICAgfSBlbHNlIGlmIChsb2cuZXhlcmNpc2UuY2F0ZWdvcnkudHlwZSA9PT0gJ2NhcmRpbycpIHtcbiAgICAgICAgcmV0dXJuIGxvZy5leGVyY2lzZS5jYXRlZ29yeS5kZXRhaWxzPy5zY3JlZW5UaW1lICE9PSAwO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xuICB9XG5cbiAgZmV0Y2hQcmltYXJ5Qm9keVBhcnRzKCk6IEJvZHlQYXJ0W10ge1xuICAgIHJldHVybiB0aGlzLmV4ZXJjaXNlcy5mbGF0TWFwKGV4ZXJjaXNlUmVmID0+IGV4ZXJjaXNlUmVmLmV4ZXJjaXNlLnByaW1hcnlCb2R5UGFydHMpO1xuICB9XG5cbiAgZmV0Y2hTZWNvbmRhcnlCb2R5UGFydHMoKTogQm9keVBhcnRbXSB7XG4gICAgcmV0dXJuIHRoaXMuZXhlcmNpc2VzLmZsYXRNYXAoZXhlcmNpc2VSZWYgPT4gZXhlcmNpc2VSZWYuZXhlcmNpc2Uuc2Vjb25kYXJ5Qm9keVBhcnRzKTtcbiAgfVxuXG4gIHN0YXRpYyBlc3RpbWF0ZWREdXJhdGlvbihleGVyY2lzZXM6IEV4ZXJjaXNlUmVmZXJlbmNlW10pOiBudW1iZXIge1xuICAgIGNvbnN0IHdhcm11cFRpbWVTZWNvbmRzID0gNSAqIDYwOyAgLy8gNSBtaW51dGVzIGluIHNlY29uZHNcbiAgICBjb25zdCBjb29sZG93blRpbWVTZWNvbmRzID0gNSAqIDYwOyAvLyA1IG1pbnV0ZXMgaW4gc2Vjb25kc1xuICAgIGxldCB0b3RhbFRpbWVTZWNvbmRzID0gMDtcbiAgICBsZXQgcmVzdFRpbWVTZWNvbmRzID0gMDtcbiAgICBsZXQgaGFzU2NyZWVuVGltZUV4ZXJjaXNlcyA9IGZhbHNlO1xuXG4gICAgXG4gICAgZm9yIChjb25zdCBleGVyY2lzZVJlZiBvZiBleGVyY2lzZXMpIHtcbiAgICAgIGNvbnN0IGV4ZXJjaXNlID0gZXhlcmNpc2VSZWYuZXhlcmNpc2U7XG4gICAgICBcbiAgICAgIGlmIChleGVyY2lzZS5jYXRlZ29yeS50eXBlID09PSAnY2FyZGlvJykge1xuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IGV4ZXJjaXNlLmNhdGVnb3J5LmRldGFpbHM/LmR1cmF0aW9uIHx8IDA7XG4gICAgICAgIGNvbnNvbGUubG9nKCdDYXJkaW8gZHVyYXRpb24gKG1pbnV0ZXMpOicsIGR1cmF0aW9uKTtcbiAgICAgICAgdG90YWxUaW1lU2Vjb25kcyArPSBkdXJhdGlvbiAqIDYwOyAvLyBDb252ZXJ0IG1pbnV0ZXMgdG8gc2Vjb25kc1xuICAgICAgfSBlbHNlIGlmIChleGVyY2lzZS5jYXRlZ29yeS50eXBlID09PSAnd2VpZ2h0LXRyYWluaW5nJykge1xuICAgICAgICBjb25zdCBzY3JlZW5UaW1lID0gZXhlcmNpc2UuY2F0ZWdvcnkuZGV0YWlscz8uc2NyZWVuVGltZSB8fCAwO1xuICAgICAgICBcbiAgICAgICAgaWYgKHNjcmVlblRpbWUgPiAwKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1NjcmVlbiB0aW1lIChzZWNvbmRzKTonLCBzY3JlZW5UaW1lKTtcbiAgICAgICAgICB0b3RhbFRpbWVTZWNvbmRzICs9IHNjcmVlblRpbWU7IC8vIEFscmVhZHkgaW4gc2Vjb25kc1xuICAgICAgICAgIGhhc1NjcmVlblRpbWVFeGVyY2lzZXMgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdVc2luZyBkZWZhdWx0IHRpbWluZyAoOG0gZXhlcmNpc2UgKyAxbSByZXN0KScpO1xuICAgICAgICAgIHRvdGFsVGltZVNlY29uZHMgKz0gOCAqIDYwOyAvLyA4IG1pbnV0ZXMgaW4gc2Vjb25kc1xuICAgICAgICAgIHJlc3RUaW1lU2Vjb25kcyArPSA2MDsgICAgICAvLyAxIG1pbnV0ZSBpbiBzZWNvbmRzXG4gICAgICAgIH1cbiAgICAgIH1cbiAgXG4gICAgICBjb25zb2xlLmxvZygnQ3VycmVudCB0b3RhbHMgKGluIHNlY29uZHMpOicsIHtcbiAgICAgICAgdG90YWxUaW1lU2Vjb25kcyxcbiAgICAgICAgcmVzdFRpbWVTZWNvbmRzLFxuICAgICAgICBoYXNTY3JlZW5UaW1lRXhlcmNpc2VzXG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgICB9XG4gIFxuICAgIGlmICghaGFzU2NyZWVuVGltZUV4ZXJjaXNlcykge1xuICAgICAgY29uc29sZS5sb2coJ0FkZGluZyB3YXJtdXAvY29vbC1kb3duOicsIFxuICAgICAgICAod2FybXVwVGltZVNlY29uZHMgKyBjb29sZG93blRpbWVTZWNvbmRzKSAvIDYwLCAnbWludXRlcycpO1xuICAgICAgdG90YWxUaW1lU2Vjb25kcyArPSB3YXJtdXBUaW1lU2Vjb25kcyArIGNvb2xkb3duVGltZVNlY29uZHM7XG4gICAgfVxuICBcbiAgICBjb25zdCB0b3RhbFNlY29uZHMgPSB0b3RhbFRpbWVTZWNvbmRzICsgcmVzdFRpbWVTZWNvbmRzO1xuICAgIGNvbnNvbGUubG9nKCdQcmUtcm91bmRlZCB0b3RhbCAoc2Vjb25kcyk6JywgdG90YWxTZWNvbmRzKTtcbiAgXG4gICAgbGV0IGZpbmFsRXN0aW1hdGU6IG51bWJlcjtcbiAgICBpZiAoIWhhc1NjcmVlblRpbWVFeGVyY2lzZXMpIHtcbiAgICAgIC8vIENvbnZlcnQgdG8gbWludXRlcyBhbmQgcm91bmQgdG8gbmVhcmVzdCA1XG4gICAgICBjb25zdCB0b3RhbE1pbnV0ZXMgPSB0b3RhbFNlY29uZHMgLyA2MDtcbiAgICAgIGZpbmFsRXN0aW1hdGUgPSBNYXRoLnJvdW5kKHRvdGFsTWludXRlcyAvIDUpICogNTtcbiAgICAgIGNvbnNvbGUubG9nKCdSb3VuZGVkIHRvIG5lYXJlc3QgNSBtaW51dGVzOicsIGZpbmFsRXN0aW1hdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBDb252ZXJ0IHRvIG1pbnV0ZXMsIHJvdW5kaW5nIHVwIHRvIG5lYXJlc3QgbWludXRlXG4gICAgICBmaW5hbEVzdGltYXRlID0gTWF0aC5jZWlsKHRvdGFsU2Vjb25kcyAvIDYwKTtcbiAgICB9XG4gIFxuICAgIGNvbnNvbGUubG9nKCdGaW5hbCBlc3RpbWF0ZWQgZHVyYXRpb246JywgZmluYWxFc3RpbWF0ZSwgJ21pbnV0ZXMnKTtcbiAgICByZXR1cm4gZmluYWxFc3RpbWF0ZTtcbiAgfVxuXG4gIHN0YXRpYyBkZXRlcm1pbmVXb3Jrb3V0Wm9uZShleGVyY2lzZXM6IEV4ZXJjaXNlUmVmZXJlbmNlW10pOiBCb2R5Wm9uZSB7XG4gICAgY29uc3QgYm9keVBhcnRzSW52b2x2ZWQgPSBuZXcgU2V0PEJvZHlQYXJ0PigpO1xuXG4gICAgZm9yIChjb25zdCBleGVyY2lzZVJlZiBvZiBleGVyY2lzZXMpIHtcbiAgICAgIGZvciAoY29uc3QgYm9keVBhcnQgb2YgZXhlcmNpc2VSZWYuZXhlcmNpc2UucHJpbWFyeUJvZHlQYXJ0cyB8fCBbZXhlcmNpc2VSZWYuZXhlcmNpc2UucHJpbWFyeUJvZHlQYXJ0c10pIHtcbiAgICAgICAgYm9keVBhcnRzSW52b2x2ZWQuYWRkKGJvZHlQYXJ0IGFzIEJvZHlQYXJ0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB1cHBlckJvZHlQYXJ0cyA9IG5ldyBTZXQoW1xuICAgICAgQm9keVBhcnQuQ2hlc3QsXG4gICAgICBCb2R5UGFydC5TaG91bGRlcnMsXG4gICAgICBCb2R5UGFydC5CaWNlcHMsXG4gICAgICBCb2R5UGFydC5UcmljZXBzLFxuICAgICAgQm9keVBhcnQuVHJhcHMsXG4gICAgICBCb2R5UGFydC5MYXRzLFxuICAgICAgQm9keVBhcnQuRm9yZWFybXMsXG4gICAgXSk7XG5cbiAgICBjb25zdCBsb3dlckJvZHlQYXJ0cyA9IG5ldyBTZXQoW1xuICAgICAgQm9keVBhcnQuSGFtc3RyaW5ncyxcbiAgICAgIEJvZHlQYXJ0LkdsdXRlcyxcbiAgICAgIEJvZHlQYXJ0LlF1YWRyaWNlcHMsXG4gICAgICBCb2R5UGFydC5DYWx2ZXMsXG4gICAgXSk7XG5cbiAgICBjb25zdCBjb3JlUGFydHMgPSBuZXcgU2V0KFtCb2R5UGFydC5BYnMsIEJvZHlQYXJ0Lkxvd2VyYmFja10pO1xuXG4gICAgY29uc3QgaGFzQ29tbW9uRWxlbWVudHMgPSAoc2V0MTogU2V0PEJvZHlQYXJ0Piwgc2V0MjogU2V0PEJvZHlQYXJ0Pik6IGJvb2xlYW4gPT4ge1xuICAgICAgcmV0dXJuIEFycmF5LmZyb20oc2V0MSkuc29tZSgoaXRlbSkgPT4gc2V0Mi5oYXMoaXRlbSkpO1xuICAgIH07XG5cbiAgICBjb25zdCBoYXNVcHBlckJvZHkgPSBoYXNDb21tb25FbGVtZW50cyhib2R5UGFydHNJbnZvbHZlZCwgdXBwZXJCb2R5UGFydHMpO1xuICAgIGNvbnN0IGhhc0xvd2VyQm9keSA9IGhhc0NvbW1vbkVsZW1lbnRzKGJvZHlQYXJ0c0ludm9sdmVkLCBsb3dlckJvZHlQYXJ0cyk7XG4gICAgY29uc3QgaGFzQ29yZSA9IGhhc0NvbW1vbkVsZW1lbnRzKGJvZHlQYXJ0c0ludm9sdmVkLCBjb3JlUGFydHMpO1xuXG4gICAgaWYgKChoYXNVcHBlckJvZHkgJiYgaGFzTG93ZXJCb2R5ICYmIGhhc0NvcmUpIHx8IChoYXNVcHBlckJvZHkgJiYgaGFzTG93ZXJCb2R5KSkge1xuICAgICAgcmV0dXJuIEJvZHlab25lLkZ1bGxCb2R5O1xuICAgIH0gZWxzZSBpZiAoaGFzVXBwZXJCb2R5ICYmIGhhc0NvcmUgfHwgaGFzVXBwZXJCb2R5KSB7XG4gICAgICByZXR1cm4gQm9keVpvbmUuVXBwZXJCb2R5O1xuICAgIH0gZWxzZSBpZiAoaGFzTG93ZXJCb2R5ICYmIGhhc0NvcmUgfHwgaGFzTG93ZXJCb2R5KSB7XG4gICAgICByZXR1cm4gQm9keVpvbmUuTG93ZXJCb2R5O1xuICAgIH0gZWxzZSBpZiAoaGFzQ29yZSkge1xuICAgICAgcmV0dXJuIEJvZHlab25lLkNvcmU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBCb2R5Wm9uZS5GdWxsQm9keTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGZpbmRVbmRlZmluZWRWYWx1ZXMob2JqOiBhbnksIHBhdGg6IHN0cmluZyA9ICcnKTogc3RyaW5nW10ge1xuICAgIGNvbnN0IHVuZGVmaW5lZFBhdGhzOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgZnVuY3Rpb24gcmVjdXJzaXZlQ2hlY2soY3VycmVudDogYW55LCBjdXJyZW50UGF0aDogc3RyaW5nKSB7XG4gICAgICBpZiAoY3VycmVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHVuZGVmaW5lZFBhdGhzLnB1c2goY3VycmVudFBhdGgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChjdXJyZW50ID09PSBudWxsIHx8IHR5cGVvZiBjdXJyZW50ICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGN1cnJlbnQpKSB7XG4gICAgICAgIGN1cnJlbnQuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZWN1cnNpdmVDaGVjayhpdGVtLCBgJHtjdXJyZW50UGF0aH1bJHtpbmRleH1dYCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIE9iamVjdC5lbnRyaWVzKGN1cnJlbnQpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBjb25zdCBuZXdQYXRoID0gY3VycmVudFBhdGggPyBgJHtjdXJyZW50UGF0aH0uJHtrZXl9YCA6IGtleTtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB1bmRlZmluZWRQYXRocy5wdXNoKG5ld1BhdGgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlY3Vyc2l2ZUNoZWNrKHZhbHVlLCBuZXdQYXRoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVjdXJzaXZlQ2hlY2sob2JqLCBwYXRoKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkUGF0aHM7XG4gIH1cblxuICBwcml2YXRlIGNoZWNrRm9yVW5kZWZpbmVkKGRhdGE6IGFueSwgbGFiZWw6IHN0cmluZyA9ICdEYXRhJyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHVuZGVmaW5lZFBhdGhzID0gdGhpcy5maW5kVW5kZWZpbmVkVmFsdWVzKGRhdGEpO1xuICAgIGlmICh1bmRlZmluZWRQYXRocy5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGDwn5qoIEZvdW5kIHVuZGVmaW5lZCB2YWx1ZXMgaW4gJHtsYWJlbH06YCk7XG4gICAgICB1bmRlZmluZWRQYXRocy5mb3JFYWNoKHBhdGggPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKGAgIC0gJHtwYXRofWApO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgdG9EaWN0aW9uYXJ5KCk6IHsgW2tleTogc3RyaW5nXTogYW55IH0ge1xuICAgIGNvbnN0IGRhdGE6IHsgW2tleTogc3RyaW5nXTogYW55IH0gPSB7XG4gICAgICBpZDogdGhpcy5pZCxcbiAgICAgIGV4ZXJjaXNlczogdGhpcy5leGVyY2lzZXMubWFwKGV4ID0+ICh7XG4gICAgICAgIGV4ZXJjaXNlOiBleC5leGVyY2lzZS50b0RpY3Rpb25hcnkoKSxcbiAgICAgICAgZ3JvdXBJZDogZXguZ3JvdXBJZFxuICAgICAgfSkpLFxuICAgICAgbG9nczogdGhpcy5sb2dzID8gdGhpcy5sb2dzLm1hcChsb2cgPT4gbG9nLnRvRGljdGlvbmFyeSgpKSA6IFtdLFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIHpvbmU6IHRoaXMuem9uZSxcbiAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgd29ya291dFJhdGluZzogdGhpcy53b3Jrb3V0UmF0aW5nLFxuICAgICAgdXNlQXV0aG9yQ29udGVudDogdGhpcy51c2VBdXRob3JDb250ZW50LFxuICAgICAgaXNDb21wbGV0ZWQ6IHRoaXMuaXNDb21wbGV0ZWQsXG4gICAgICB3b3Jrb3V0U3RhdHVzOiB0aGlzLndvcmtvdXRTdGF0dXMsXG4gICAgICBhdXRob3I6IHRoaXMuYXV0aG9yLCAvLyBKdXN0IHNhdmUgdGhlIElEXG4gICAgICBjcmVhdGVkQXQ6IGRhdGVUb1VuaXhUaW1lc3RhbXAodGhpcy5jcmVhdGVkQXQpLFxuICAgICAgdXBkYXRlZEF0OiBkYXRlVG9Vbml4VGltZXN0YW1wKHRoaXMudXBkYXRlZEF0KSxcbiAgICAgIGFzc2lnbmVkRGF0ZTogdGhpcy5hc3NpZ25lZERhdGUgPyBkYXRlVG9Vbml4VGltZXN0YW1wKHRoaXMuYXNzaWduZWREYXRlKSA6IG51bGwsXG4gICAgICBzdGFydFRpbWU6IHRoaXMuc3RhcnRUaW1lID8gZGF0ZVRvVW5peFRpbWVzdGFtcCh0aGlzLnN0YXJ0VGltZSkgOiBudWxsLFxuICAgICAgb3JkZXI6IHRoaXMub3JkZXIgfHwgbnVsbCxcbiAgICAgIGNvbGxlY3Rpb25JZDogdGhpcy5jb2xsZWN0aW9uSWQgfHwgbnVsbCxcbiAgICAgIGNoYWxsZW5nZTogdGhpcy5jaGFsbGVuZ2UgfHwgbnVsbFxuICAgIH07XG5cbiAgICAvLyBWYWxpZGF0ZSBkYXRhIGJlZm9yZSByZXR1cm5pbmdcbiAgICBpZiAoIXRoaXMuY2hlY2tGb3JVbmRlZmluZWQoZGF0YSwgJ1dvcmtvdXQgRGljdGlvbmFyeScpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dvcmtvdXQgY29udGFpbnMgdW5kZWZpbmVkIHZhbHVlcycpO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhO1xuICB9XG59XG5cblxuZXhwb3J0IGNsYXNzIFdvcmtvdXRTdW1tYXJ5IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIHdvcmtvdXRJZDogc3RyaW5nO1xuICAgIGV4ZXJjaXNlczogRXhlcmNpc2VMb2dbXTtcbiAgICBib2R5UGFydHM6IEJvZHlQYXJ0W107XG4gICAgc2Vjb25kYXJ5Qm9keVBhcnRzOiBCb2R5UGFydFtdO1xuICAgIHdvcmtvdXRUaXRsZTogc3RyaW5nO1xuICAgIGNhbG9yaWVzQnVybmVkOiBudW1iZXI7XG4gICAgd29ya291dFJhdGluZz86IFdvcmtvdXRSYXRpbmc7XG4gICAgZXhlcmNpc2VzQ29tcGxldGVkOiBFeGVyY2lzZUxvZ1tdO1xuICAgIGFpSW5zaWdodDogc3RyaW5nO1xuICAgIHJlY29tbWVuZGF0aW9uczogc3RyaW5nW107XG4gICAgZ2lmVVJMcz86IHN0cmluZ1tdO1xuICAgIHJlY29tbWVuZGVkV29yaz86IG51bWJlcjtcbiAgICBpc0NvbXBsZXRlZDogYm9vbGVhbjtcbiAgICBjcmVhdGVkQXQ6IERhdGU7XG4gICAgdXBkYXRlZEF0OiBEYXRlO1xuICAgIGNvbXBsZXRlZEF0PzogRGF0ZSB8IG51bGw7XG4gICAgZHVyYXRpb246IHN0cmluZztcbiAgXG4gICAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgICB0aGlzLmlkID0gZGF0YS5pZDtcbiAgICAgIHRoaXMud29ya291dElkID0gZGF0YS53b3Jrb3V0SWQ7XG4gICAgICB0aGlzLmV4ZXJjaXNlcyA9IGRhdGEuZXhlcmNpc2VzLm1hcCgoZXg6IGFueSkgPT4gbmV3IEV4ZXJjaXNlTG9nKGV4KSk7XG4gICAgICB0aGlzLmJvZHlQYXJ0cyA9IGRhdGEuYm9keVBhcnRzO1xuICAgICAgdGhpcy5zZWNvbmRhcnlCb2R5UGFydHMgPSBkYXRhLnNlY29uZGFyeUJvZHlQYXJ0cztcbiAgICAgIHRoaXMud29ya291dFRpdGxlID0gZGF0YS53b3Jrb3V0VGl0bGU7XG4gICAgICB0aGlzLmNhbG9yaWVzQnVybmVkID0gZGF0YS5jYWxvcmllc0J1cm5lZDtcbiAgICAgIHRoaXMud29ya291dFJhdGluZyA9IGRhdGEud29ya291dFJhdGluZztcbiAgICAgIHRoaXMuZXhlcmNpc2VzQ29tcGxldGVkID0gZGF0YS5leGVyY2lzZXNDb21wbGV0ZWQubWFwKChleDogYW55KSA9PiBuZXcgRXhlcmNpc2VMb2coZXgpKTtcbiAgICAgIHRoaXMuYWlJbnNpZ2h0ID0gZGF0YS5haUluc2lnaHQ7XG4gICAgICB0aGlzLnJlY29tbWVuZGF0aW9ucyA9IGRhdGEucmVjb21tZW5kYXRpb25zO1xuICAgICAgdGhpcy5naWZVUkxzID0gZGF0YS5naWZVUkxzO1xuICAgICAgdGhpcy5yZWNvbW1lbmRlZFdvcmsgPSBkYXRhLnJlY29tbWVuZGVkV29yaztcbiAgICAgIHRoaXMuaXNDb21wbGV0ZWQgPSBkYXRhLmlzQ29tcGxldGVkO1xuICAgICAgdGhpcy5jcmVhdGVkQXQgPSBkYXRhLmNyZWF0ZWRBdCA/IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAoZGF0YS5jcmVhdGVkQXQpIDogbmV3IERhdGUoKTtcbiAgICAgIHRoaXMudXBkYXRlZEF0ID0gZGF0YS51cGRhdGVkQXQgPyBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEudXBkYXRlZEF0KSA6IG5ldyBEYXRlKCk7XG4gICAgICB0aGlzLmNvbXBsZXRlZEF0ID0gZGF0YS5jb21wbGV0ZWRBdCA/IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAoZGF0YS5jb21wbGV0ZWRBdCkgOiBudWxsO1xuICAgICAgdGhpcy5kdXJhdGlvbiA9IGRhdGEuZHVyYXRpb247XG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdvcmtvdXRTZXJ2aWNlIHtcbiAgZmV0Y2hDdXJyZW50V29ya291dDogKCkgPT4gUHJvbWlzZTxXb3Jrb3V0IHwgbnVsbD47XG4gIGdlbmVyYXRlV29ya291dDogKGJvZHlQYXJ0czogQm9keVpvbmVbXSkgPT4gUHJvbWlzZTxXb3Jrb3V0PjtcbiAgc3RhcnRXb3Jrb3V0OiAod29ya291dElkOiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIGNhbmNlbFdvcmtvdXQ6ICh3b3Jrb3V0SWQ6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgY29tcGxldGVXb3Jrb3V0OiAod29ya291dElkOiBzdHJpbmcsIHJhdGluZz86IFdvcmtvdXRSYXRpbmcpID0+IFByb21pc2U8dm9pZD47XG4gIGZldGNoQ3VycmVudFdvcmtvdXRTZXNzaW9uOiAoKSA9PiBQcm9taXNlPHtcbiAgICB3b3Jrb3V0OiBXb3Jrb3V0IHwgbnVsbDtcbiAgICBsb2dzOiBFeGVyY2lzZUxvZ1tdIHwgbnVsbDtcbiAgfT47XG4gIHN3YXBXb3Jrb3V0OiAob2xkV29ya291dElkOiBzdHJpbmcsIG5ld0JvZHlQYXJ0czogQm9keVpvbmVbXSkgPT4gUHJvbWlzZTxXb3Jrb3V0PjtcbiAgdXBkYXRlV29ya291dFN0YXR1czogKHdvcmtvdXRJZDogc3RyaW5nLCBzdGF0dXM6IFdvcmtvdXRTdGF0dXMpID0+IFByb21pc2U8dm9pZD47XG4gIGxvZ0V4ZXJjaXNlOiAod29ya291dElkOiBzdHJpbmcsIGV4ZXJjaXNlTG9nOiBFeGVyY2lzZUxvZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgZ2V0V29ya291dExvZ3M6ICh3b3Jrb3V0SWQ6IHN0cmluZykgPT4gUHJvbWlzZTxFeGVyY2lzZUxvZ1tdPjtcbiAgY2FuY2VsQ3VycmVudFdvcmtvdXQ6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIGdldEN1cnJlbnRXb3Jrb3V0U3RhdHVzOiAoKSA9PiBQcm9taXNlPFdvcmtvdXRTdGF0dXM+O1xuICBzYXZlV29ya291dDogKHdvcmtvdXQ6IFdvcmtvdXQpID0+IFByb21pc2U8dm9pZD47XG59XG5cbi8vIFN3ZWF0bGlzdElkZW50aWZpZXJzIHR5cGVcbmV4cG9ydCBpbnRlcmZhY2UgU3dlYXRsaXN0SWRlbnRpZmllcnMge1xuICBpZDogc3RyaW5nO1xuICBzd2VhdGxpc3RBdXRob3JJZDogc3RyaW5nO1xuICBzd2VhdGxpc3ROYW1lOiBzdHJpbmc7XG4gIG9yZGVyOiBudW1iZXI7XG59XG5cbi8vIEVudW0gZm9yIHN3ZWF0bGlzdCB0eXBlIG1hdGNoaW5nIFN3aWZ0IGltcGxlbWVudGF0aW9uXG5leHBvcnQgZW51bSBTd2VhdGxpc3RUeXBlIHtcbiAgVG9nZXRoZXIgPSAndG9nZXRoZXInLFxuICBTb2xvID0gJ3NvbG8nLFxuICBMb2NrZWQgPSAnbG9ja2VkJ1xufVxuXG5leHBvcnQgY2xhc3MgUmVmZXJyYWxDaGFpbiB7XG4gIG9yaWdpbmFsSG9zdElkOiBzdHJpbmc7XG4gIHNoYXJlZEJ5OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgdGhpcy5vcmlnaW5hbEhvc3RJZCA9IGRhdGEub3JpZ2luYWxIb3N0SWQgfHwgJyc7XG4gICAgdGhpcy5zaGFyZWRCeSA9IGRhdGEuc2hhcmVkQnkgfHwgJyc7XG4gIH1cblxuICB0b0RpY3Rpb25hcnkoKTogYW55IHtcbiAgICByZXR1cm4ge1xuICAgICAgb3JpZ2luYWxIb3N0SWQ6IHRoaXMub3JpZ2luYWxIb3N0SWQsXG4gICAgICBzaGFyZWRCeTogdGhpcy5zaGFyZWRCeSxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGZyb21GaXJlc3RvcmUoZGF0YTogYW55KTogUmVmZXJyYWxDaGFpbiB7XG4gICAgcmV0dXJuIG5ldyBSZWZlcnJhbENoYWluKGRhdGEpO1xuICB9XG59XG5cblxuLy8gTWFpbiBTd2VhdGxpc3RDb2xsZWN0aW9uIGludGVyZmFjZVxuZXhwb3J0IGNsYXNzIFN3ZWF0bGlzdENvbGxlY3Rpb24ge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBzdWJ0aXRsZTogc3RyaW5nO1xuICBwaW46IHN0cmluZyB8IG51bGw7XG4gIGNoYWxsZW5nZT86IENoYWxsZW5nZSB8IG51bGw7XG4gIHB1Ymxpc2hlZFN0YXR1cz86IGJvb2xlYW47XG4gIHBhcnRpY2lwYW50czogc3RyaW5nW107XG4gIHN3ZWF0bGlzdElkczogU3dlYXRsaXN0SWRlbnRpZmllcnNbXTtcbiAgb3duZXJJZDogc3RyaW5nW107IC8vIFVwZGF0ZWQgdG8gYmUgYW4gYXJyYXlcbiAgcHJpdmFjeTogU3dlYXRsaXN0VHlwZTtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG5cbiAgY29uc3RydWN0b3IoZGF0YTogYW55KSB7XG4gICAgdGhpcy5pZCA9IGRhdGEuaWQ7XG4gICAgdGhpcy50aXRsZSA9IGRhdGEudGl0bGUgfHwgJyc7XG4gICAgdGhpcy5zdWJ0aXRsZSA9IGRhdGEuc3VidGl0bGUgfHwgJyc7XG4gICAgdGhpcy5waW4gPSBkYXRhLnBpbiB8fCBudWxsO1xuICAgIHRoaXMuY2hhbGxlbmdlID0gZGF0YS5jaGFsbGVuZ2UgPyBuZXcgQ2hhbGxlbmdlKGRhdGEuY2hhbGxlbmdlKSA6IG51bGw7XG4gICAgdGhpcy5zd2VhdGxpc3RJZHMgPSAoZGF0YS5zd2VhdGxpc3RJZHMgfHwgW10pLm1hcCgoaXRlbTogYW55KSA9PiAoe1xuICAgICAgaWQ6IGl0ZW0uaWQgfHwgJycsXG4gICAgICBzd2VhdGxpc3RBdXRob3JJZDogaXRlbS5zd2VhdGxpc3RBdXRob3JJZCB8fCAnJyxcbiAgICAgIHN3ZWF0bGlzdE5hbWU6IGl0ZW0uc3dlYXRsaXN0TmFtZSB8fCAnJyxcbiAgICAgIG9yZGVyOiBpdGVtLm9yZGVyIHx8IDAsXG4gICAgfSkpO1xuICAgIC8vIElmIG93bmVySWQgaXMgbm90IGFuIGFycmF5LCB3cmFwIGl0IGluIGFuIGFycmF5LlxuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEub3duZXJJZCkpIHtcbiAgICAgIHRoaXMub3duZXJJZCA9IGRhdGEub3duZXJJZDtcbiAgICB9IGVsc2UgaWYgKGRhdGEub3duZXJJZCkge1xuICAgICAgdGhpcy5vd25lcklkID0gW2RhdGEub3duZXJJZF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub3duZXJJZCA9IFtdO1xuICAgIH1cbiAgICB0aGlzLnByaXZhY3kgPSB0aGlzLmNoYWxsZW5nZSA/IFN3ZWF0bGlzdFR5cGUuVG9nZXRoZXIgOiBTd2VhdGxpc3RUeXBlLlNvbG87XG4gICAgdGhpcy5wYXJ0aWNpcGFudHMgPSAoZGF0YS5wYXJ0aWNpcGFudHMgfHwgW10pLm1hcCgocGFydGljaXBhbnQ6IGFueSkgPT4gcGFydGljaXBhbnQgfHwgJycpO1xuICAgIHRoaXMuY3JlYXRlZEF0ID0gY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcChkYXRhLmNyZWF0ZWRBdCk7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEudXBkYXRlZEF0KTtcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogdGhpcy5pZCxcbiAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgc3VidGl0bGU6IHRoaXMuc3VidGl0bGUsXG4gICAgICBwaW46IHRoaXMucGluLFxuICAgICAgY2hhbGxlbmdlOiB0aGlzLmNoYWxsZW5nZSA/IHRoaXMuY2hhbGxlbmdlLnRvRGljdGlvbmFyeSgpIDogbnVsbCxcbiAgICAgIHN3ZWF0bGlzdElkczogdGhpcy5zd2VhdGxpc3RJZHMubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgIHN3ZWF0bGlzdEF1dGhvcklkOiBpdGVtLnN3ZWF0bGlzdEF1dGhvcklkLFxuICAgICAgICBvcmRlcjogaXRlbS5vcmRlclxuICAgICAgfSkpLFxuICAgICAgb3duZXJJZDogdGhpcy5vd25lcklkLCAvLyBVcGRhdGVkIHRvIGJlIGFuIGFycmF5XG4gICAgICBwcml2YWN5OiB0aGlzLnByaXZhY3ksXG4gICAgICBjcmVhdGVkQXQ6IGRhdGVUb1VuaXhUaW1lc3RhbXAodGhpcy5jcmVhdGVkQXQpLFxuICAgICAgdXBkYXRlZEF0OiBkYXRlVG9Vbml4VGltZXN0YW1wKHRoaXMudXBkYXRlZEF0KVxuICAgIH07XG4gIH1cblxuICBpc1B1Ymxpc2hlZCgpOiBib29sZWFuIHtcbiAgICBpZiAoIXRoaXMuY2hhbGxlbmdlKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMuY2hhbGxlbmdlLnN0YXR1cyA9PT0gQ2hhbGxlbmdlU3RhdHVzLlB1Ymxpc2hlZDtcbiAgfVxufVxuXG5jbGFzcyBQcm9maWxlSW1hZ2Uge1xuICBwcm9maWxlSW1hZ2VVUkw6IHN0cmluZztcbiAgdGh1bWJuYWlsVVJMPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IGFueSkge1xuICAgIHRoaXMucHJvZmlsZUltYWdlVVJMID0gZGF0YS5wcm9maWxlSW1hZ2VVUkwgfHwgJyc7XG4gICAgdGhpcy50aHVtYm5haWxVUkwgPSBkYXRhLnRodW1ibmFpbFVSTCB8fCAnJztcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBwcm9maWxlSW1hZ2VVUkw6IHRoaXMucHJvZmlsZUltYWdlVVJMLFxuICAgICAgdGh1bWJuYWlsVVJMOiB0aGlzLnRodW1ibmFpbFVSTCB8fCBudWxsLFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZnJvbUZpcmVzdG9yZShkYXRhOiBhbnkpOiBQcm9maWxlSW1hZ2Uge1xuICAgIHJldHVybiBuZXcgUHJvZmlsZUltYWdlKGRhdGEpO1xuICB9XG59XG5cbmNsYXNzIFVzZXJMb2NhdGlvbiB7XG4gIGxhdGl0dWRlOiBudW1iZXI7XG4gIGxvbmdpdHVkZTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IGFueSkge1xuICAgIHRoaXMubGF0aXR1ZGUgPSBkYXRhLmxhdGl0dWRlIHx8IDA7XG4gICAgdGhpcy5sb25naXR1ZGUgPSBkYXRhLmxvbmdpdHVkZSB8fCAwO1xuICB9XG5cbiAgdG9EaWN0aW9uYXJ5KCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxhdGl0dWRlOiB0aGlzLmxhdGl0dWRlLFxuICAgICAgbG9uZ2l0dWRlOiB0aGlzLmxvbmdpdHVkZSxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGZyb21GaXJlc3RvcmUoZGF0YTogYW55KTogVXNlckxvY2F0aW9uIHtcbiAgICByZXR1cm4gbmV3IFVzZXJMb2NhdGlvbihkYXRhKTtcbiAgfVxufVxuXG5jbGFzcyBQdWxzZVBvaW50cyB7XG4gIGJhc2VDb21wbGV0aW9uOiBudW1iZXI7ICAgICAgLy8gZS5nLiAxMDAgcG9pbnRzXG4gIGZpcnN0Q29tcGxldGlvbjogbnVtYmVyOyAgICAgLy8gZS5nLiA1MCBwb2ludHNcbiAgc3RyZWFrQm9udXM6IG51bWJlcjsgICAgICAgICAvLyBlLmcuIDI1IHBvaW50cyBwZXIgZGF5XG4gIGNoZWNrSW5Cb251czogbnVtYmVyOyAgICAgICAgLy8gZS5nLiAyNSBwb2ludHNcbiAgZWZmb3J0UmF0aW5nOiBudW1iZXI7ICAgICAgICAvLyBlLmcuIDEwIHBvaW50c1xuICBjaGF0UGFydGljaXBhdGlvbjogbnVtYmVyOyAgIC8vIGUuZy4gMjUgcG9pbnRzXG4gIGxvY2F0aW9uQ2hlY2tpbjogbnVtYmVyOyAgICAgLy8gZS5nLiAyNSBwb2ludHNcbiAgY29udGVudEVuZ2FnZW1lbnQ6IG51bWJlcjsgICAvLyBlLmcuIDEwIHBvaW50cyBwZXIgaW50ZXJhY3Rpb25cbiAgZW5jb3VyYWdlbWVudFNlbnQ6IG51bWJlcjsgICAvLyBlLmcuIDE1IHBvaW50cyBwZXIgdW5pcXVlIHVzZXJcbiAgZW5jb3VyYWdlbWVudFJlY2VpdmVkOiBudW1iZXI7IC8vIGUuZy4gMTAgcG9pbnRzIHBlciB1bmlxdWUgdXNlclxuICBjdW11bGF0aXZlU3RyZWFrQm9udXM6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICB0aGlzLmJhc2VDb21wbGV0aW9uID0gZGF0YS5iYXNlQ29tcGxldGlvbiA/PyAwO1xuICAgIHRoaXMuZmlyc3RDb21wbGV0aW9uID0gZGF0YS5maXJzdENvbXBsZXRpb24gPz8gMDtcbiAgICB0aGlzLnN0cmVha0JvbnVzID0gZGF0YS5zdHJlYWtCb251cyA/PyAwO1xuICAgIHRoaXMuY2hlY2tJbkJvbnVzID0gZGF0YS5jaGVja0luQm9udXMgPz8gMDtcbiAgICB0aGlzLmVmZm9ydFJhdGluZyA9IGRhdGEuZWZmb3J0UmF0aW5nID8/IDA7XG4gICAgdGhpcy5jaGF0UGFydGljaXBhdGlvbiA9IGRhdGEuY2hhdFBhcnRpY2lwYXRpb24gPz8gMDtcbiAgICB0aGlzLmxvY2F0aW9uQ2hlY2tpbiA9IGRhdGEubG9jYXRpb25DaGVja2luID8/IDA7XG4gICAgdGhpcy5jb250ZW50RW5nYWdlbWVudCA9IGRhdGEuY29udGVudEVuZ2FnZW1lbnQgPz8gMDtcbiAgICB0aGlzLmVuY291cmFnZW1lbnRTZW50ID0gZGF0YS5lbmNvdXJhZ2VtZW50U2VudCA/PyAwO1xuICAgIHRoaXMuZW5jb3VyYWdlbWVudFJlY2VpdmVkID0gZGF0YS5lbmNvdXJhZ2VtZW50UmVjZWl2ZWQgPz8gMDtcbiAgICB0aGlzLmN1bXVsYXRpdmVTdHJlYWtCb251cyA9IGRhdGEuY3VtdWxhdGl2ZVN0cmVha0JvbnVzID8/IDA7XG4gIH1cblxuICBnZXQgdG90YWxTdGFja1BvaW50cygpOiBudW1iZXIge1xuICAgIHJldHVybiAoXG4gICAgICB0aGlzLmJhc2VDb21wbGV0aW9uICtcbiAgICAgIHRoaXMuZmlyc3RDb21wbGV0aW9uICtcbiAgICAgIHRoaXMuc3RyZWFrQm9udXMgK1xuICAgICAgdGhpcy5jaGVja0luQm9udXMgK1xuICAgICAgdGhpcy5lZmZvcnRSYXRpbmdcbiAgICApO1xuICB9XG5cbiAgZ2V0IHRvdGFsQ29tbXVuaXR5UG9pbnRzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMuY2hhdFBhcnRpY2lwYXRpb24gK1xuICAgICAgdGhpcy5sb2NhdGlvbkNoZWNraW4gK1xuICAgICAgdGhpcy5jb250ZW50RW5nYWdlbWVudCArXG4gICAgICB0aGlzLmVuY291cmFnZW1lbnRTZW50ICtcbiAgICAgIHRoaXMuZW5jb3VyYWdlbWVudFJlY2VpdmVkXG4gICAgKTtcbiAgfVxuXG4gIGdldCB0b3RhbFBvaW50cygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnRvdGFsU3RhY2tQb2ludHMgKyB0aGlzLnRvdGFsQ29tbXVuaXR5UG9pbnRzICsgdGhpcy5jdW11bGF0aXZlU3RyZWFrQm9udXM7XG4gIH1cblxuICB0b0RpY3Rpb25hcnkoKTogYW55IHtcbiAgICByZXR1cm4ge1xuICAgICAgYmFzZUNvbXBsZXRpb246IHRoaXMuYmFzZUNvbXBsZXRpb24sXG4gICAgICBmaXJzdENvbXBsZXRpb246IHRoaXMuZmlyc3RDb21wbGV0aW9uLFxuICAgICAgc3RyZWFrQm9udXM6IHRoaXMuc3RyZWFrQm9udXMsXG4gICAgICBjaGVja0luQm9udXM6IHRoaXMuY2hlY2tJbkJvbnVzLFxuICAgICAgZWZmb3J0UmF0aW5nOiB0aGlzLmVmZm9ydFJhdGluZyxcbiAgICAgIGNoYXRQYXJ0aWNpcGF0aW9uOiB0aGlzLmNoYXRQYXJ0aWNpcGF0aW9uLFxuICAgICAgbG9jYXRpb25DaGVja2luOiB0aGlzLmxvY2F0aW9uQ2hlY2tpbixcbiAgICAgIGNvbnRlbnRFbmdhZ2VtZW50OiB0aGlzLmNvbnRlbnRFbmdhZ2VtZW50LFxuICAgICAgZW5jb3VyYWdlbWVudFNlbnQ6IHRoaXMuZW5jb3VyYWdlbWVudFNlbnQsXG4gICAgICBlbmNvdXJhZ2VtZW50UmVjZWl2ZWQ6IHRoaXMuZW5jb3VyYWdlbWVudFJlY2VpdmVkLFxuICAgICAgY3VtdWxhdGl2ZVN0cmVha0JvbnVzOiB0aGlzLmN1bXVsYXRpdmVTdHJlYWtCb251cyxcbiAgICAgIHRvdGFsU3RhY2tQb2ludHM6IHRoaXMudG90YWxTdGFja1BvaW50cyxcbiAgICAgIHRvdGFsQ29tbXVuaXR5UG9pbnRzOiB0aGlzLnRvdGFsQ29tbXVuaXR5UG9pbnRzLFxuICAgICAgdG90YWxQb2ludHM6IHRoaXMudG90YWxQb2ludHMsXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tRmlyZXN0b3JlKGRhdGE6IGFueSk6IFB1bHNlUG9pbnRzIHtcbiAgICByZXR1cm4gbmV3IFB1bHNlUG9pbnRzKGRhdGEpO1xuICB9XG59XG5cblxuLy8gVHlwZXMgZm9yIHVzZXIgaW4gY2hhbGxlbmdlXG5jbGFzcyBVc2VyQ2hhbGxlbmdlIHtcbiAgaWQ6IHN0cmluZztcbiAgY2hhbGxlbmdlPzogQ2hhbGxlbmdlO1xuICBjaGFsbGVuZ2VJZDogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgcHJvZmlsZUltYWdlPzogUHJvZmlsZUltYWdlO1xuICBwcm9ncmVzczogbnVtYmVyO1xuICByZWZlcnJhbENoYWluczogUmVmZXJyYWxDaGFpbjtcbiAgY29tcGxldGVkV29ya291dHM6IHsgaWQ6IHN0cmluZzsgd29ya291dElkOiBzdHJpbmc7IGNvbXBsZXRlZEF0OiBudW1iZXIgfVtdO1xuICBpc0NvbXBsZXRlZDogYm9vbGVhbjtcbiAgbG9jYXRpb24/OiBVc2VyTG9jYXRpb247XG4gIGNpdHk6IHN0cmluZztcbiAgY291bnRyeT86IHN0cmluZztcbiAgdGltZXpvbmU/OiBzdHJpbmc7XG4gIGpvaW5EYXRlOiBEYXRlO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHVwZGF0ZWRBdDogRGF0ZTtcbiAgcHVsc2VQb2ludHM6IFB1bHNlUG9pbnRzO1xuICBjdXJyZW50U3RyZWFrOiBudW1iZXI7XG4gIGVuY291cmFnZWRVc2Vyczogc3RyaW5nW107XG4gIGVuY291cmFnZWRCeVVzZXJzOiBzdHJpbmdbXTtcbiAgY2hlY2tJbnM6IENoZWNrSW5bXTtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICB0aGlzLmlkID0gZGF0YS5pZDtcbiAgICB0aGlzLmNoYWxsZW5nZSA9IGRhdGEuY2hhbGxlbmdlID8gbmV3IENoYWxsZW5nZShkYXRhLmNoYWxsZW5nZSkgOiB1bmRlZmluZWQ7XG4gICAgdGhpcy5jaGFsbGVuZ2VJZCA9IGRhdGEuY2hhbGxlbmdlSWQgfHwgJyc7XG4gICAgdGhpcy51c2VySWQgPSBkYXRhLnVzZXJJZCB8fCAnJztcbiAgICB0aGlzLnVzZXJuYW1lID0gZGF0YS51c2VybmFtZSB8fCAnJztcbiAgICB0aGlzLnByb2ZpbGVJbWFnZSA9IGRhdGEucHJvZmlsZUltYWdlID8gbmV3IFByb2ZpbGVJbWFnZShkYXRhLnByb2ZpbGVJbWFnZSkgOiB1bmRlZmluZWQ7XG4gICAgdGhpcy5wcm9ncmVzcyA9IGRhdGEucHJvZ3Jlc3MgPz8gMDtcbiAgICB0aGlzLnJlZmVycmFsQ2hhaW5zID0gZGF0YS5yZWZlcnJhbENoYWlucyA/IG5ldyBSZWZlcnJhbENoYWluKGRhdGEucmVmZXJyYWxDaGFpbnMpIDogbmV3IFJlZmVycmFsQ2hhaW4oeyBvcmlnaW5hbEhvc3RJZDogJycsIHNoYXJlZEJ5OiAnJyB9KTtcbiAgICB0aGlzLmNvbXBsZXRlZFdvcmtvdXRzID0gQXJyYXkuaXNBcnJheShkYXRhLmNvbXBsZXRlZFdvcmtvdXRzKVxuICAgID8gZGF0YS5jb21wbGV0ZWRXb3Jrb3V0cy5tYXAoKGN3OiBhbnkpID0+ICh7XG4gICAgICAgIGlkOiBjdy5pZCB8fCAnJyxcbiAgICAgICAgd29ya291dElkOiBjdy53b3Jrb3V0SWQgfHwgJycsXG4gICAgICAgIGNvbXBsZXRlZEF0OiBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGN3LmNvbXBsZXRlZEF0KSwgIC8vIFVzZSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wIGhlcmVcbiAgICAgIH0pKVxuICAgIDogW107XG4gICAgdGhpcy5pc0NvbXBsZXRlZCA9IGRhdGEuaXNDb21wbGV0ZWQgPz8gZmFsc2U7XG4gICAgdGhpcy5sb2NhdGlvbiA9IGRhdGEubG9jYXRpb24gPyBuZXcgVXNlckxvY2F0aW9uKGRhdGEubG9jYXRpb24pIDogdW5kZWZpbmVkO1xuICAgIHRoaXMuY2l0eSA9IGRhdGEuY2l0eSB8fCAnJztcbiAgICB0aGlzLmNvdW50cnkgPSBkYXRhLmNvdW50cnkgfHwgJyc7XG4gICAgdGhpcy50aW1lem9uZSA9IGRhdGEudGltZXpvbmUgfHwgJyc7XG4gICAgdGhpcy5qb2luRGF0ZSA9IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAoZGF0YS5qb2luRGF0ZSk7XG4gICAgdGhpcy5jcmVhdGVkQXQgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEuY3JlYXRlZEF0KTtcbiAgICB0aGlzLnVwZGF0ZWRBdCA9IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAoZGF0YS51cGRhdGVkQXQpO1xuICAgIHRoaXMucHVsc2VQb2ludHMgPSBkYXRhLnB1bHNlUG9pbnRzID8gbmV3IFB1bHNlUG9pbnRzKGRhdGEucHVsc2VQb2ludHMpIDogbmV3IFB1bHNlUG9pbnRzKHt9KTtcbiAgICB0aGlzLmN1cnJlbnRTdHJlYWsgPSBkYXRhLmN1cnJlbnRTdHJlYWsgPz8gMDtcbiAgICB0aGlzLmVuY291cmFnZWRVc2VycyA9IEFycmF5LmlzQXJyYXkoZGF0YS5lbmNvdXJhZ2VkVXNlcnMpID8gZGF0YS5lbmNvdXJhZ2VkVXNlcnMgOiBbXTtcbiAgICB0aGlzLmVuY291cmFnZWRCeVVzZXJzID0gQXJyYXkuaXNBcnJheShkYXRhLmVuY291cmFnZWRCeVVzZXJzKSA/IGRhdGEuZW5jb3VyYWdlZEJ5VXNlcnMgOiBbXTtcbiAgICB0aGlzLmNoZWNrSW5zID0gQXJyYXkuaXNBcnJheShkYXRhLmNoZWNrSW5zKVxuICAgID8gZGF0YS5jaGVja0lucy5tYXAoKGQ6IGFueSkgPT4gbmV3IENoZWNrSW4oZCkpXG4gICAgOiBbXTsgIH1cblxuICAvLyBPcHRpb25hbGx5LCB5b3UgY2FuIGFkZCBhIHN0YXRpYyBtZXRob2QgdG8gY3JlYXRlIGFuIGluc3RhbmNlIGZyb20gRmlyZXN0b3JlIGRhdGFcbiAgc3RhdGljIGZyb21GaXJlc3RvcmUoaWQ6IHN0cmluZywgZGF0YTogYW55KTogVXNlckNoYWxsZW5nZSB7XG4gICAgcmV0dXJuIG5ldyBVc2VyQ2hhbGxlbmdlKGRhdGEpO1xuICB9XG5cbiAgLy8gT3B0aW9uYWxseSwgYWRkIGEgbWV0aG9kIHRvIGNvbnZlcnQgdG8gYSBwbGFpbiBkaWN0aW9uYXJ5IChmb3Igc2F2aW5nIHRvIEZpcmVzdG9yZSlcbiAgdG9EaWN0aW9uYXJ5KCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNoYWxsZW5nZTogdGhpcy5jaGFsbGVuZ2UgPyB0aGlzLmNoYWxsZW5nZS50b0RpY3Rpb25hcnkoKSA6IG51bGwsXG4gICAgICBjaGFsbGVuZ2VJZDogdGhpcy5jaGFsbGVuZ2VJZCxcbiAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsXG4gICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgIHByb2ZpbGVJbWFnZTogdGhpcy5wcm9maWxlSW1hZ2UgPyB0aGlzLnByb2ZpbGVJbWFnZS50b0RpY3Rpb25hcnkoKSA6IG51bGwsXG4gICAgICBwcm9ncmVzczogdGhpcy5wcm9ncmVzcyxcbiAgICAgIHJlZmVycmFsQ2hhaW5zOiB0aGlzLnJlZmVycmFsQ2hhaW5zID8gdGhpcy5yZWZlcnJhbENoYWlucy50b0RpY3Rpb25hcnkoKSA6IHt9LFxuICAgICAgY29tcGxldGVkV29ya291dHM6IHRoaXMuY29tcGxldGVkV29ya291dHMubWFwKHdvcmtvdXQgPT4gKHtcbiAgICAgICAgLi4ud29ya291dCxcbiAgICAgICAgY29tcGxldGVkQXQ6IE1hdGguZmxvb3IobmV3IERhdGUod29ya291dC5jb21wbGV0ZWRBdCkuZ2V0VGltZSgpIC8gMTAwMClcbiAgICAgIH0pKSxcbiAgICAgIGlzQ29tcGxldGVkOiB0aGlzLmlzQ29tcGxldGVkLFxuICAgICAgbG9jYXRpb246IHRoaXMubG9jYXRpb24gPyB0aGlzLmxvY2F0aW9uLnRvRGljdGlvbmFyeSgpIDogbnVsbCxcbiAgICAgIGNpdHk6IHRoaXMuY2l0eSxcbiAgICAgIGNvdW50cnk6IHRoaXMuY291bnRyeSxcbiAgICAgIHRpbWV6b25lOiB0aGlzLnRpbWV6b25lLFxuICAgICAgam9pbkRhdGU6IGRhdGVUb1VuaXhUaW1lc3RhbXAodGhpcy5qb2luRGF0ZSksXG4gICAgICBjcmVhdGVkQXQ6IGRhdGVUb1VuaXhUaW1lc3RhbXAodGhpcy5jcmVhdGVkQXQpLFxuICAgICAgdXBkYXRlZEF0OiBkYXRlVG9Vbml4VGltZXN0YW1wKHRoaXMudXBkYXRlZEF0KSxcbiAgICAgIHB1bHNlUG9pbnRzOiB0aGlzLnB1bHNlUG9pbnRzID8gdGhpcy5wdWxzZVBvaW50cy50b0RpY3Rpb25hcnkoKSA6IHt9LFxuICAgICAgY3VycmVudFN0cmVhazogdGhpcy5jdXJyZW50U3RyZWFrLFxuICAgICAgZW5jb3VyYWdlZFVzZXJzOiB0aGlzLmVuY291cmFnZWRVc2VycyxcbiAgICAgIGVuY291cmFnZWRCeVVzZXJzOiB0aGlzLmVuY291cmFnZWRCeVVzZXJzLFxuICAgICAgY2hlY2tJbnM6IHRoaXMuY2hlY2tJbnMubWFwKGNoZWNrSW4gPT4gY2hlY2tJbi50b0RpY3Rpb25hcnkoKSksXG4gICAgfTtcbiAgfVxufVxuXG4vLyBDaGFsbGVuZ2Ugc3RhdHVzIGVudW1cbmVudW0gQ2hhbGxlbmdlU3RhdHVzIHtcbiAgRHJhZnQgPSAnZHJhZnQnLFxuICBQdWJsaXNoZWQgPSAncHVibGlzaGVkJyxcbiAgQ29tcGxldGVkID0gJ2NvbXBsZXRlZCcsXG4gIENhbmNlbGxlZCA9ICdjYW5jZWxsZWQnXG59XG5leHBvcnQgaW50ZXJmYWNlIEludHJvVmlkZW8ge1xuICBpZDogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdmlkZW9Vcmw6IHN0cmluZztcbiAgdG9EaWN0aW9uYXJ5KCk6IGFueTtcbn1cblxuZXhwb3J0IGNsYXNzIEludHJvVmlkZW8gaW1wbGVtZW50cyBJbnRyb1ZpZGVvIHtcbiAgaWQ6IHN0cmluZztcbiAgdXNlcklkOiBzdHJpbmc7XG4gIHZpZGVvVXJsOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoZGF0YTogeyBpZDogc3RyaW5nOyB1c2VySWQ6IHN0cmluZzsgdmlkZW9Vcmw6IHN0cmluZzsgfSkge1xuICAgIHRoaXMuaWQgPSBkYXRhLmlkO1xuICAgIHRoaXMudXNlcklkID0gZGF0YS51c2VySWQ7XG4gICAgdGhpcy52aWRlb1VybCA9IGRhdGEudmlkZW9Vcmw7XG4gIH1cblxuICB0b0RpY3Rpb25hcnkoKTogYW55IHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICB1c2VySWQ6IHRoaXMudXNlcklkLFxuICAgICAgdmlkZW9Vcmw6IHRoaXMudmlkZW9VcmxcbiAgICB9O1xuICB9XG59XG5cbmNsYXNzIENoYWxsZW5nZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHN1YnRpdGxlOiBzdHJpbmc7XG4gIHBhcnRpY2lwYW50czogVXNlckNoYWxsZW5nZVtdO1xuICBkdXJhdGlvbkluRGF5czogbnVtYmVyO1xuICBzdGF0dXM6IENoYWxsZW5nZVN0YXR1cztcbiAgc3RhcnREYXRlOiBEYXRlO1xuICBlbmREYXRlOiBEYXRlO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHVwZGF0ZWRBdDogRGF0ZTtcbiAgaW50cm9WaWRlb3M6IEludHJvVmlkZW9bXTtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiB7XG4gICAgaWQ6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIHN1YnRpdGxlOiBzdHJpbmc7XG4gICAgcGFydGljaXBhbnRzPzogVXNlckNoYWxsZW5nZVtdOyAvLyBtYWtlIG9wdGlvbmFsIGluIGNhc2UgaXQncyBtaXNzaW5nXG4gICAgc3RhdHVzOiBDaGFsbGVuZ2VTdGF0dXM7XG4gICAgc3RhcnREYXRlOiBEYXRlO1xuICAgIGVuZERhdGU6IERhdGU7XG4gICAgY3JlYXRlZEF0OiBEYXRlO1xuICAgIHVwZGF0ZWRBdDogRGF0ZTtcbiAgICBpbnRyb1ZpZGVvcz86IEludHJvVmlkZW9bXTtcbiAgICBpbnRyb1ZpZGVvVVJMPzogc3RyaW5nOyAvLyBBZGQgdGhpcyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiAgfSkge1xuICAgIHRoaXMuaWQgPSBkYXRhLmlkO1xuICAgIHRoaXMudGl0bGUgPSBkYXRhLnRpdGxlO1xuICAgIHRoaXMuc3VidGl0bGUgPSBkYXRhLnN1YnRpdGxlO1xuICAgIC8vIFVzZSBhbiBlbXB0eSBhcnJheSBpZiBwYXJ0aWNpcGFudHMgaXMgbWlzc2luZy5cbiAgICB0aGlzLnBhcnRpY2lwYW50cyA9IEFycmF5LmlzQXJyYXkoZGF0YS5wYXJ0aWNpcGFudHMpID8gZGF0YS5wYXJ0aWNpcGFudHMgOiBbXTtcbiAgICB0aGlzLnN0YXR1cyA9IGRhdGEuc3RhdHVzO1xuXG4gICAgY29uc29sZS5sb2coXCJDaGFsbGVuZ2Ugc3RhcnQgZGF0ZVwiLCBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEuc3RhcnREYXRlKSk7XG4gICAgdGhpcy5zdGFydERhdGUgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEuc3RhcnREYXRlKTtcbiAgICB0aGlzLmVuZERhdGUgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEuZW5kRGF0ZSk7XG4gICAgdGhpcy5jcmVhdGVkQXQgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEuY3JlYXRlZEF0KTtcbiAgICB0aGlzLnVwZGF0ZWRBdCA9IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAoZGF0YS51cGRhdGVkQXQpO1xuXG4gICAgLy8gSGFuZGxlIGJvdGggb2xkIGFuZCBuZXcgZm9ybWF0IGZvciBpbnRybyB2aWRlb3MuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YS5pbnRyb1ZpZGVvcykpIHtcbiAgICAgIHRoaXMuaW50cm9WaWRlb3MgPSBkYXRhLmludHJvVmlkZW9zLm1hcCh2aWRlbyA9PiBuZXcgSW50cm9WaWRlbyh2aWRlbykpO1xuICAgIH0gZWxzZSBpZiAoZGF0YS5pbnRyb1ZpZGVvVVJMICYmIEFycmF5LmlzQXJyYXkoZGF0YS5wYXJ0aWNpcGFudHMpICYmIGRhdGEucGFydGljaXBhbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuaW50cm9WaWRlb3MgPSBbXG4gICAgICAgIG5ldyBJbnRyb1ZpZGVvKHtcbiAgICAgICAgICBpZDogJzEnLFxuICAgICAgICAgIHVzZXJJZDogZGF0YS5wYXJ0aWNpcGFudHNbMF0udXNlcklkLFxuICAgICAgICAgIHZpZGVvVXJsOiBkYXRhLmludHJvVmlkZW9VUkxcbiAgICAgICAgfSlcbiAgICAgIF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaW50cm9WaWRlb3MgPSBbXTtcbiAgICB9XG5cbiAgICB0aGlzLmR1cmF0aW9uSW5EYXlzID0gdGhpcy5jYWxjdWxhdGVEdXJhdGlvbkluRGF5cygpO1xuICB9XG5cbiAgdG9EaWN0aW9uYXJ5KCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBzdWJ0aXRsZTogdGhpcy5zdWJ0aXRsZSxcbiAgICAgIHBhcnRpY2lwYW50czogdGhpcy5wYXJ0aWNpcGFudHMubWFwKHBhcnRpY2lwYW50ID0+ICh7XG4gICAgICAgIGlkOiBwYXJ0aWNpcGFudC5pZCxcbiAgICAgICAgY2hhbGxlbmdlSWQ6IHBhcnRpY2lwYW50LmNoYWxsZW5nZUlkLFxuICAgICAgICB1c2VySWQ6IHBhcnRpY2lwYW50LnVzZXJJZCxcbiAgICAgICAgdXNlcm5hbWU6IHBhcnRpY2lwYW50LnVzZXJuYW1lLFxuICAgICAgICBwcm9maWxlSW1hZ2U6IHBhcnRpY2lwYW50LnByb2ZpbGVJbWFnZSxcbiAgICAgICAgcHJvZ3Jlc3M6IHBhcnRpY2lwYW50LnByb2dyZXNzLFxuICAgICAgICBjb21wbGV0ZWRXb3Jrb3V0czogcGFydGljaXBhbnQuY29tcGxldGVkV29ya291dHMsXG4gICAgICAgIGlzQ29tcGxldGVkOiBwYXJ0aWNpcGFudC5pc0NvbXBsZXRlZCxcbiAgICAgICAgbG9jYXRpb246IHBhcnRpY2lwYW50LmxvY2F0aW9uLFxuICAgICAgICBjaXR5OiBwYXJ0aWNpcGFudC5jaXR5LFxuICAgICAgICBjb3VudHJ5OiBwYXJ0aWNpcGFudC5jb3VudHJ5LFxuICAgICAgICB0aW1lem9uZTogcGFydGljaXBhbnQudGltZXpvbmUsXG4gICAgICAgIGpvaW5EYXRlOiBwYXJ0aWNpcGFudC5qb2luRGF0ZSxcbiAgICAgICAgY3JlYXRlZEF0OiBwYXJ0aWNpcGFudC5jcmVhdGVkQXQsXG4gICAgICAgIHVwZGF0ZWRBdDogcGFydGljaXBhbnQudXBkYXRlZEF0LFxuICAgICAgICBwdWxzZVBvaW50czogcGFydGljaXBhbnQucHVsc2VQb2ludHMsXG4gICAgICAgIGN1cnJlbnRTdHJlYWs6IHBhcnRpY2lwYW50LmN1cnJlbnRTdHJlYWssXG4gICAgICAgIGVuY291cmFnZWRVc2VyczogcGFydGljaXBhbnQuZW5jb3VyYWdlZFVzZXJzLFxuICAgICAgICBlbmNvdXJhZ2VkQnlVc2VyczogcGFydGljaXBhbnQuZW5jb3VyYWdlZEJ5VXNlcnMsXG4gICAgICAgIGNoZWNrSW5zOiBwYXJ0aWNpcGFudC5jaGVja0luc1xuICAgICAgfSkpLFxuICAgICAgc3RhdHVzOiB0aGlzLnN0YXR1cyxcbiAgICAgIHN0YXJ0RGF0ZTogZGF0ZVRvVW5peFRpbWVzdGFtcCh0aGlzLnN0YXJ0RGF0ZSksXG4gICAgICBlbmREYXRlOiBkYXRlVG9Vbml4VGltZXN0YW1wKHRoaXMuZW5kRGF0ZSksXG4gICAgICBjcmVhdGVkQXQ6IGRhdGVUb1VuaXhUaW1lc3RhbXAodGhpcy5jcmVhdGVkQXQpLFxuICAgICAgdXBkYXRlZEF0OiBkYXRlVG9Vbml4VGltZXN0YW1wKHRoaXMudXBkYXRlZEF0KSxcbiAgICAgIGR1cmF0aW9uSW5EYXlzOiB0aGlzLmR1cmF0aW9uSW5EYXlzLFxuICAgICAgaW50cm9WaWRlb3M6IHRoaXMuaW50cm9WaWRlb3MubWFwKHZpZGVvID0+IHZpZGVvLnRvRGljdGlvbmFyeSgpKVxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQ2FsY3VsYXRlcyB0aGUgZHVyYXRpb24gaW4gZGF5cyBiZXR3ZWVuIHRoZSBzdGFydERhdGUgYW5kIGVuZERhdGUuXG4gICAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgZGF5cyBiZXR3ZWVuIHRoZSB0d28gZGF0ZXMuXG4gICAqL1xuICBwcml2YXRlIGNhbGN1bGF0ZUR1cmF0aW9uSW5EYXlzKCk6IG51bWJlciB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnN0YXJ0RGF0ZT8udmFsdWVPZigpO1xuICAgIGNvbnN0IGVuZCA9IHRoaXMuZW5kRGF0ZT8udmFsdWVPZigpO1xuXG4gICAgaWYgKCFzdGFydCB8fCAhZW5kIHx8IGlzTmFOKHN0YXJ0KSB8fCBpc05hTihlbmQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RhcnREYXRlIG9yIGVuZERhdGUnKTtcbiAgICB9XG5cbiAgICBjb25zdCBkdXJhdGlvbkluTWlsbGlzZWNvbmRzID0gZW5kIC0gc3RhcnQ7XG4gICAgcmV0dXJuIE1hdGguY2VpbChkdXJhdGlvbkluTWlsbGlzZWNvbmRzIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKTtcbiAgfVxuXG4gIHN0YXRpYyB0b0ZpcmVzdG9yZU9iamVjdChvYmo6IGFueSk6IGFueSB7XG4gICAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG5cbiAgICBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICByZXR1cm4gb2JqLm1hcChpdGVtID0+IHRoaXMudG9GaXJlc3RvcmVPYmplY3QoaXRlbSkpO1xuICAgIH1cblxuICAgIGlmIChvYmogaW5zdGFuY2VvZiBDaGFsbGVuZ2UpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBvYmouaWQsXG4gICAgICAgIHRpdGxlOiBvYmoudGl0bGUsXG4gICAgICAgIHN1YnRpdGxlOiBvYmouc3VidGl0bGUsXG4gICAgICAgIHBhcnRpY2lwYW50czogb2JqLnBhcnRpY2lwYW50cyxcbiAgICAgICAgc3RhdHVzOiBvYmouc3RhdHVzLFxuICAgICAgICBzdGFydERhdGU6IG9iai5zdGFydERhdGUsXG4gICAgICAgIGVuZERhdGU6IG9iai5lbmREYXRlLFxuICAgICAgICBjcmVhdGVkQXQ6IG9iai5jcmVhdGVkQXQsXG4gICAgICAgIHVwZGF0ZWRBdDogb2JqLnVwZGF0ZWRBdCxcbiAgICAgICAgaW50cm9WaWRlb3M6IG9iai5pbnRyb1ZpZGVvcy5tYXAodmlkZW8gPT4gKHtcbiAgICAgICAgICBpZDogdmlkZW8uaWQsXG4gICAgICAgICAgdXNlcklkOiB2aWRlby51c2VySWQsXG4gICAgICAgICAgdmlkZW9Vcmw6IHZpZGVvLnZpZGVvVXJsXG4gICAgICAgIH0pKVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBjb25zdCBwbGFpbk9iamVjdDogeyBba2V5OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgcGxhaW5PYmplY3Rba2V5XSA9IHRoaXMudG9GaXJlc3RvcmVPYmplY3Qob2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGxhaW5PYmplY3Q7XG4gIH1cbn1cblxuXG4vLyBQcm9wcyBpbnRlcmZhY2UgZm9yIHRoZSBjb21wb25lbnRcbmludGVyZmFjZSBDaGFsbGVuZ2VJbnZpdGF0aW9uUHJvcHMge1xuICBjaGFsbGVuZ2U6IENoYWxsZW5nZTtcbiAgb25DbG9zZTogKCkgPT4gdm9pZDtcbiAgb25Kb2luQ2hhbGxlbmdlOiAoY2hhbGxlbmdlOiBhbnkpID0+IFByb21pc2U8dm9pZD47XG59XG5cbmV4cG9ydCB0eXBlIHtcbiAgUHJvZmlsZUltYWdlLFxuICBVc2VyTG9jYXRpb24sXG4gIFB1bHNlUG9pbnRzLFxuICBDaGFsbGVuZ2VJbnZpdGF0aW9uUHJvcHNcbn07XG5cbmV4cG9ydCB7IENoYWxsZW5nZVN0YXR1cywgQ2hhbGxlbmdlLCBVc2VyQ2hhbGxlbmdlIH07XG4iXSwibmFtZXMiOlsiRXhlcmNpc2VMb2ciLCJCb2R5UGFydCIsImNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAiLCJkYXRlVG9Vbml4VGltZXN0YW1wIiwid29ya291dFNlcnZpY2UiLCJDaGVja0luIiwiZGF0YSIsImlkIiwidXNlcklkIiwid29ya291dElkIiwicGhvdG9VcmwiLCJ2aWRlb1VybCIsImNyZWF0ZWRBdCIsIkRhdGUiLCJ0b0RpY3Rpb25hcnkiLCJXb3Jrb3V0U3RhdHVzIiwiV29ya291dFJhdGluZyIsIkJvZHlab25lIiwiUmVwc0FuZFdlaWdodExvZyIsInJlcHMiLCJ3ZWlnaHQiLCJsZWZ0UmVwcyIsImxlZnRXZWlnaHQiLCJpc1NwbGl0IiwiaXNCb2R5V2VpZ2h0IiwiZHVyYXRpb24iLCJjYWxvcmllcyIsImJwbSIsIldvcmtvdXQiLCJ1bmRlZmluZWQiLCJyb3VuZFdvcmtvdXRJZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJ1c2VBdXRob3JDb250ZW50IiwiaXNDb21wbGV0ZWQiLCJ3b3Jrb3V0U3RhdHVzIiwid29ya291dFJhdGluZyIsImV4ZXJjaXNlcyIsImNoYWxsZW5nZSIsImxvZ3MiLCJjb2xsZWN0aW9uSWQiLCJzdGFydFRpbWUiLCJhc3NpZ25lZERhdGUiLCJ1cGRhdGVkQXQiLCJvcmRlciIsImF1dGhvciIsInVzZXJuYW1lIiwicmV2ZXJ0QXV0aG9yRm9ybWF0Iiwiem9uZSIsImZldGNoUHJpbWFyeUJvZHlQYXJ0cyIsImZsYXRNYXAiLCJleGVyY2lzZVJlZiIsImV4ZXJjaXNlIiwicHJpbWFyeUJvZHlQYXJ0cyIsImZldGNoU2Vjb25kYXJ5Qm9keVBhcnRzIiwic2Vjb25kYXJ5Qm9keVBhcnRzIiwiZmluZFVuZGVmaW5lZFZhbHVlcyIsIm9iaiIsInBhdGgiLCJ1bmRlZmluZWRQYXRocyIsInJlY3Vyc2l2ZUNoZWNrIiwiY3VycmVudCIsImN1cnJlbnRQYXRoIiwicHVzaCIsIkFycmF5IiwiaXNBcnJheSIsImZvckVhY2giLCJpdGVtIiwiaW5kZXgiLCJPYmplY3QiLCJlbnRyaWVzIiwia2V5IiwidmFsdWUiLCJuZXdQYXRoIiwiY2hlY2tGb3JVbmRlZmluZWQiLCJsYWJlbCIsImxlbmd0aCIsImNvbnNvbGUiLCJlcnJvciIsIm1hcCIsImV4IiwiZ3JvdXBJZCIsImxvZyIsIkVycm9yIiwiZXN0aW1hdGVkRHVyYXRpb24iLCJ3YXJtdXBUaW1lU2Vjb25kcyIsImNvb2xkb3duVGltZVNlY29uZHMiLCJ0b3RhbFRpbWVTZWNvbmRzIiwicmVzdFRpbWVTZWNvbmRzIiwiaGFzU2NyZWVuVGltZUV4ZXJjaXNlcyIsImNhdGVnb3J5IiwidHlwZSIsImRldGFpbHMiLCJzY3JlZW5UaW1lIiwiZ3JvdXBFbmQiLCJ0b3RhbFNlY29uZHMiLCJmaW5hbEVzdGltYXRlIiwidG90YWxNaW51dGVzIiwiTWF0aCIsInJvdW5kIiwiY2VpbCIsImRldGVybWluZVdvcmtvdXRab25lIiwiYm9keVBhcnRzSW52b2x2ZWQiLCJTZXQiLCJib2R5UGFydCIsImFkZCIsInVwcGVyQm9keVBhcnRzIiwiQ2hlc3QiLCJTaG91bGRlcnMiLCJCaWNlcHMiLCJUcmljZXBzIiwiVHJhcHMiLCJMYXRzIiwiRm9yZWFybXMiLCJsb3dlckJvZHlQYXJ0cyIsIkhhbXN0cmluZ3MiLCJHbHV0ZXMiLCJRdWFkcmljZXBzIiwiQ2FsdmVzIiwiY29yZVBhcnRzIiwiQWJzIiwiTG93ZXJiYWNrIiwiaGFzQ29tbW9uRWxlbWVudHMiLCJzZXQxIiwic2V0MiIsImZyb20iLCJzb21lIiwiaGFzIiwiaGFzVXBwZXJCb2R5IiwiaGFzTG93ZXJCb2R5IiwiaGFzQ29yZSIsImlzVGltZWRXb3Jrb3V0IiwiV29ya291dFN1bW1hcnkiLCJib2R5UGFydHMiLCJ3b3Jrb3V0VGl0bGUiLCJjYWxvcmllc0J1cm5lZCIsImV4ZXJjaXNlc0NvbXBsZXRlZCIsImFpSW5zaWdodCIsInJlY29tbWVuZGF0aW9ucyIsImdpZlVSTHMiLCJyZWNvbW1lbmRlZFdvcmsiLCJjb21wbGV0ZWRBdCIsIlN3ZWF0bGlzdFR5cGUiLCJSZWZlcnJhbENoYWluIiwib3JpZ2luYWxIb3N0SWQiLCJzaGFyZWRCeSIsImZyb21GaXJlc3RvcmUiLCJTd2VhdGxpc3RDb2xsZWN0aW9uIiwic3VidGl0bGUiLCJwaW4iLCJDaGFsbGVuZ2UiLCJzd2VhdGxpc3RJZHMiLCJzd2VhdGxpc3RBdXRob3JJZCIsInN3ZWF0bGlzdE5hbWUiLCJvd25lcklkIiwicHJpdmFjeSIsInBhcnRpY2lwYW50cyIsInBhcnRpY2lwYW50IiwiaXNQdWJsaXNoZWQiLCJzdGF0dXMiLCJQcm9maWxlSW1hZ2UiLCJwcm9maWxlSW1hZ2VVUkwiLCJ0aHVtYm5haWxVUkwiLCJVc2VyTG9jYXRpb24iLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsIlB1bHNlUG9pbnRzIiwiYmFzZUNvbXBsZXRpb24iLCJmaXJzdENvbXBsZXRpb24iLCJzdHJlYWtCb251cyIsImNoZWNrSW5Cb251cyIsImVmZm9ydFJhdGluZyIsImNoYXRQYXJ0aWNpcGF0aW9uIiwibG9jYXRpb25DaGVja2luIiwiY29udGVudEVuZ2FnZW1lbnQiLCJlbmNvdXJhZ2VtZW50U2VudCIsImVuY291cmFnZW1lbnRSZWNlaXZlZCIsImN1bXVsYXRpdmVTdHJlYWtCb251cyIsInRvdGFsU3RhY2tQb2ludHMiLCJ0b3RhbENvbW11bml0eVBvaW50cyIsInRvdGFsUG9pbnRzIiwiVXNlckNoYWxsZW5nZSIsImNoYWxsZW5nZUlkIiwicHJvZmlsZUltYWdlIiwicHJvZ3Jlc3MiLCJyZWZlcnJhbENoYWlucyIsImNvbXBsZXRlZFdvcmtvdXRzIiwiY3ciLCJsb2NhdGlvbiIsImNpdHkiLCJjb3VudHJ5IiwidGltZXpvbmUiLCJqb2luRGF0ZSIsInB1bHNlUG9pbnRzIiwiY3VycmVudFN0cmVhayIsImVuY291cmFnZWRVc2VycyIsImVuY291cmFnZWRCeVVzZXJzIiwiY2hlY2tJbnMiLCJkIiwid29ya291dCIsImZsb29yIiwiZ2V0VGltZSIsImNoZWNrSW4iLCJDaGFsbGVuZ2VTdGF0dXMiLCJJbnRyb1ZpZGVvIiwic3RhcnREYXRlIiwiZW5kRGF0ZSIsImludHJvVmlkZW9zIiwidmlkZW8iLCJpbnRyb1ZpZGVvVVJMIiwiZHVyYXRpb25JbkRheXMiLCJjYWxjdWxhdGVEdXJhdGlvbkluRGF5cyIsInN0YXJ0IiwidmFsdWVPZiIsImVuZCIsImlzTmFOIiwiZHVyYXRpb25Jbk1pbGxpc2Vjb25kcyIsInRvRmlyZXN0b3JlT2JqZWN0IiwicGxhaW5PYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/api/firebase/workout/types.ts\n"));

/***/ })

});
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/formatDate.ts":
/*!*********************************!*\
  !*** ./src/utils/formatDate.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertFirestoreTimestamp: function() { return /* binding */ convertFirestoreTimestamp; },\n/* harmony export */   dateToUnixTimestamp: function() { return /* binding */ dateToUnixTimestamp; }\n/* harmony export */ });\nvar convertFirestoreTimestamp = function(timestamp) {\n    // If null or undefined, return the current date.\n    if (timestamp == null) return new Date();\n    // If it's already a Date, return it.\n    if (timestamp instanceof Date) return timestamp;\n    // Convert to number if it's a string (using parseFloat preserves decimals).\n    var numTimestamp = typeof timestamp === \"string\" ? parseFloat(timestamp) : timestamp;\n    // If the timestamp looks like seconds (less than 10 billion), convert to milliseconds.\n    if (numTimestamp < 10000000000) {\n        return new Date(numTimestamp * 1000);\n    }\n    // Otherwise, assume it's in milliseconds.\n    return new Date(numTimestamp);\n};\nvar dateToUnixTimestamp = function(date) {\n    return Math.floor(date.getTime() / 1000);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvZm9ybWF0RGF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLElBQU1BLDRCQUE0QixTQUN2Q0M7SUFFQSxpREFBaUQ7SUFDakQsSUFBSUEsYUFBYSxNQUFNLE9BQU8sSUFBSUM7SUFFbEMscUNBQXFDO0lBQ3JDLElBQUlELHFCQUFxQkMsTUFBTSxPQUFPRDtJQUV0Qyw0RUFBNEU7SUFDNUUsSUFBTUUsZUFDSixPQUFPRixjQUFjLFdBQVdHLFdBQVdILGFBQWFBO0lBRTFELHVGQUF1RjtJQUN2RixJQUFJRSxlQUFlLGFBQWE7UUFDOUIsT0FBTyxJQUFJRCxLQUFLQyxlQUFlO0lBQ2pDO0lBRUEsMENBQTBDO0lBQzFDLE9BQU8sSUFBSUQsS0FBS0M7QUFDbEIsRUFBRTtBQUVPLElBQU1FLHNCQUFzQixTQUFDQztJQUNsQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNGLEtBQUtHLE9BQU8sS0FBSztBQUNyQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9mb3JtYXREYXRlLnRzP2EzODIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNvbnZlcnRGaXJlc3RvcmVUaW1lc3RhbXAgPSAoXG4gIHRpbWVzdGFtcDogbnVtYmVyIHwgc3RyaW5nIHwgRGF0ZSB8IG51bGwgfCB1bmRlZmluZWRcbik6IERhdGUgPT4ge1xuICAvLyBJZiBudWxsIG9yIHVuZGVmaW5lZCwgcmV0dXJuIHRoZSBjdXJyZW50IGRhdGUuXG4gIGlmICh0aW1lc3RhbXAgPT0gbnVsbCkgcmV0dXJuIG5ldyBEYXRlKCk7XG5cbiAgLy8gSWYgaXQncyBhbHJlYWR5IGEgRGF0ZSwgcmV0dXJuIGl0LlxuICBpZiAodGltZXN0YW1wIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuIHRpbWVzdGFtcDtcblxuICAvLyBDb252ZXJ0IHRvIG51bWJlciBpZiBpdCdzIGEgc3RyaW5nICh1c2luZyBwYXJzZUZsb2F0IHByZXNlcnZlcyBkZWNpbWFscykuXG4gIGNvbnN0IG51bVRpbWVzdGFtcCA9XG4gICAgdHlwZW9mIHRpbWVzdGFtcCA9PT0gJ3N0cmluZycgPyBwYXJzZUZsb2F0KHRpbWVzdGFtcCkgOiB0aW1lc3RhbXA7XG5cbiAgLy8gSWYgdGhlIHRpbWVzdGFtcCBsb29rcyBsaWtlIHNlY29uZHMgKGxlc3MgdGhhbiAxMCBiaWxsaW9uKSwgY29udmVydCB0byBtaWxsaXNlY29uZHMuXG4gIGlmIChudW1UaW1lc3RhbXAgPCAxMDAwMDAwMDAwMCkge1xuICAgIHJldHVybiBuZXcgRGF0ZShudW1UaW1lc3RhbXAgKiAxMDAwKTtcbiAgfVxuXG4gIC8vIE90aGVyd2lzZSwgYXNzdW1lIGl0J3MgaW4gbWlsbGlzZWNvbmRzLlxuICByZXR1cm4gbmV3IERhdGUobnVtVGltZXN0YW1wKTtcbn07XG5cbiAgZXhwb3J0IGNvbnN0IGRhdGVUb1VuaXhUaW1lc3RhbXAgPSAoZGF0ZTogRGF0ZSk6IG51bWJlciA9PiB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoZGF0ZS5nZXRUaW1lKCkgLyAxMDAwKTtcbiAgfTsiXSwibmFtZXMiOlsiY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcCIsInRpbWVzdGFtcCIsIkRhdGUiLCJudW1UaW1lc3RhbXAiLCJwYXJzZUZsb2F0IiwiZGF0ZVRvVW5peFRpbWVzdGFtcCIsImRhdGUiLCJNYXRoIiwiZmxvb3IiLCJnZXRUaW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/formatDate.ts\n"));

/***/ })

});
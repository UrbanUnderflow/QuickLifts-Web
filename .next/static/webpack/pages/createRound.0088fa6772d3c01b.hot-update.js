"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/createRound",{

/***/ "./src/api/firebase/gemini/service.ts":
/*!********************************************!*\
  !*** ./src/api/firebase/gemini/service.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GeminiService: function() { return /* binding */ GeminiService; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/_/_async_to_generator */ \"./node_modules/@swc/helpers/esm/_async_to_generator.js\");\n/* harmony import */ var _swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ \"./node_modules/@swc/helpers/esm/_class_call_check.js\");\n/* harmony import */ var _swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/_/_ts_generator */ \"./node_modules/@swc/helpers/esm/_ts_generator.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./src/api/firebase/config.ts\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n// services/GeminiService.ts\n\n\n\n\n\nvar GeminiService = /*#__PURE__*/ function() {\n    \"use strict\";\n    function GeminiService() {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, GeminiService);\n    }\n    var _proto = GeminiService.prototype;\n    _proto.sendPrompt = function sendPrompt(prompt) {\n        var _this = this;\n        return (0,_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_3__._)(function() {\n            var generateRef, response, error;\n            return (0,_swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_4__._)(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        _state.trys.push([\n                            0,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4,\n                            (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.collection)(_config__WEBPACK_IMPORTED_MODULE_0__.db, \"generate\"), {\n                                prompt: prompt\n                            })\n                        ];\n                    case 1:\n                        generateRef = _state.sent();\n                        return [\n                            4,\n                            _this.fetchOutputWithRetry(generateRef, 30, 2000)\n                        ];\n                    case 2:\n                        response = _state.sent();\n                        return [\n                            2,\n                            response\n                        ];\n                    case 3:\n                        error = _state.sent();\n                        console.error(\"Error sending prompt:\", error);\n                        throw error;\n                    case 4:\n                        return [\n                            2\n                        ];\n                }\n            });\n        })();\n    };\n    _proto.fetchOutputWithRetry = function fetchOutputWithRetry(docRef, attempts, delay) {\n        var _this = this;\n        return (0,_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_3__._)(function() {\n            var snapshot, data;\n            return (0,_swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_4__._)(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        if (attempts === 0) {\n                            throw new Error(\"Max retry attempts reached\");\n                        }\n                        return [\n                            4,\n                            (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getDoc)(docRef)\n                        ];\n                    case 1:\n                        snapshot = _state.sent();\n                        data = snapshot.data();\n                        if (data === null || data === void 0 ? void 0 : data.output) {\n                            return [\n                                2,\n                                data.output\n                            ];\n                        }\n                        // Wait for the specified delay\n                        return [\n                            4,\n                            new Promise(function(resolve) {\n                                return setTimeout(resolve, delay);\n                            })\n                        ];\n                    case 2:\n                        _state.sent();\n                        // Retry\n                        return [\n                            2,\n                            _this.fetchOutputWithRetry(docRef, attempts - 1, delay)\n                        ];\n                }\n            });\n        })();\n    };\n    _proto.generateRound = function generateRound(mustIncludeExercises, userPrompt, preferences, creatorExercises, allAvailableExercises) {\n        var _this = this;\n        return (0,_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_3__._)(function() {\n            var mustIncludeList, creatorExerciseList, allExerciseList, prompt, response, jsonString, parsedResponse, error;\n            return (0,_swc_helpers_ts_generator__WEBPACK_IMPORTED_MODULE_4__._)(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        // Combine all available exercises\n                        mustIncludeList = mustIncludeExercises.join(\", \");\n                        creatorExerciseList = creatorExercises.map(function(ex) {\n                            return ex.name;\n                        }).join(\", \");\n                        allExerciseList = allAvailableExercises.map(function(ex) {\n                            return ex.name;\n                        }).join(\", \");\n                        prompt = \"\\n  As an AI fitness expert, create a fitness program with the following requirements:\\n\\n  USER DESCRIPTION:\\n  \".concat(userPrompt, \"\\n\\n  EXERCISE SELECTION PRIORITIES:\\n  1. Must include these exercises: \").concat(mustIncludeList, \"\\n  2. Prefer these creator-specific exercises when possible: \").concat(creatorExerciseList, \"\\n  3. Can also include any of these exercises as needed: \").concat(allExerciseList, \"\\n\\n  PREFERENCES:\\n  \").concat(preferences.join(\"\\n\"), '\\n\\n  Please ensure:\\n  - Balanced program structure\\n  - Proper exercise sequencing\\n  - Rest and recovery consideration\\n  - Progressive overload\\n  - Exercise variety while maintaining focus\\n\\n  Create a complete workout program with multiple stacks (workout sessions). Each stack should have a specific focus and purpose.\\n\\n  Format your response as a JSON object with the following structure:\\n  {\\n    \"stacks\": [\\n      {\\n        \"title\": \"Name of the workout stack\",\\n        \"description\": \"Detailed description of this stack\\'s focus and goals\",\\n        \"exercises\": [\\n          {\\n            \"name\": \"Exercise Name\",\\n            \"category\": {\\n              \"details\": {\\n                \"sets\": 3,\\n                \"reps\": [\"8\",\"10\"],  // Array format: [\"min reps\", \"max reps\"] or [\"exact reps\"] if no range\\n                \"weight\": 0,\\n                \"screenTime\": 45     // Duration in seconds for exercise demonstration\\n              }\\n            }\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n\\n  IMPORTANT FORMATTING RULES:\\n  1. Only include exercises from the provided list\\n  2. Each stack should have 4-6 exercises\\n  3. Provide detailed, meaningful titles and descriptions\\n  4. Consider the user\\'s preferences\\n  5. Ensure proper exercise order and flow within each stack\\n  6. Format as valid JSON\\n  7. REPS MUST BE AN ARRAY:\\n     - For a range: [\"8\",\"12\"] means 8-12 reps\\n     - For exact reps: [\"10\"] means exactly 10 reps\\n     - For timed exercises: [\"30s\"] means 30 seconds\\n     - For endurance: [\"20\"] or [\"15\",\"20\"] for rep ranges\\n  8. Include screenTime (in seconds) for each exercise\\n  9. Weight should be in pounds (0 for bodyweight exercises)\\n');\n                        console.log(\"The prompt is\", prompt);\n                        _state.label = 1;\n                    case 1:\n                        _state.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4,\n                            _this.sendPrompt(prompt)\n                        ];\n                    case 2:\n                        response = _state.sent();\n                        // Clean up the response\n                        jsonString = response.replace(/```json/, \"\") // Remove opening JSON markdown\n                        .replace(/```/, \"\") // Remove closing markdown\n                        .trim(); // Remove extra whitespace\n                        try {\n                            parsedResponse = JSON.parse(jsonString);\n                            // Validate the response structure\n                            if (!parsedResponse.stacks || !Array.isArray(parsedResponse.stacks)) {\n                                throw new Error(\"Invalid response structure - missing stacks array\");\n                            }\n                            return [\n                                2,\n                                parsedResponse\n                            ];\n                        } catch (parseError) {\n                            console.error(\"JSON Parse Error:\", parseError);\n                            console.log(\"Raw Response:\", response);\n                            console.log(\"Cleaned Response:\", jsonString);\n                            throw new Error(\"Failed to parse AI response\");\n                        }\n                        return [\n                            3,\n                            4\n                        ];\n                    case 3:\n                        error = _state.sent();\n                        console.error(\"Generation Error:\", error);\n                        throw new Error(\"Failed to generate workout round\");\n                    case 4:\n                        return [\n                            2\n                        ];\n                }\n            });\n        })();\n    };\n    _proto.parseExercises = function parseExercises(input) {\n        // Remove any leading/trailing whitespace and parse the JSON array\n        var trimmedInput = input.trim();\n        try {\n            return JSON.parse(trimmedInput);\n        } catch (error) {\n            console.error(\"Error parsing exercises:\", error);\n            throw new Error(\"Failed to parse exercise response\");\n        }\n    };\n    GeminiService.getInstance = function getInstance() {\n        if (!GeminiService.instance) {\n            GeminiService.instance = new GeminiService();\n        }\n        return GeminiService.instance;\n    };\n    return GeminiService;\n}();\n/* harmony default export */ __webpack_exports__[\"default\"] = (GeminiService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/firebase/gemini/service.ts\n"));

/***/ })

});
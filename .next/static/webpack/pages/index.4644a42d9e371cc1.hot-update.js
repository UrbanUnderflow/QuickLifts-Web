"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/api/firebase/workout/types.ts":
/*!*******************************************!*\
  !*** ./src/api/firebase/workout/types.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyZone: function() { return /* binding */ BodyZone; },\n/* harmony export */   Challenge: function() { return /* binding */ Challenge; },\n/* harmony export */   ChallengeStatus: function() { return /* binding */ ChallengeStatus; },\n/* harmony export */   IntroVideo: function() { return /* binding */ IntroVideo; },\n/* harmony export */   ReferralChain: function() { return /* binding */ ReferralChain; },\n/* harmony export */   RepsAndWeightLog: function() { return /* binding */ RepsAndWeightLog; },\n/* harmony export */   SweatlistCollection: function() { return /* binding */ SweatlistCollection; },\n/* harmony export */   SweatlistType: function() { return /* binding */ SweatlistType; },\n/* harmony export */   UserChallenge: function() { return /* binding */ UserChallenge; },\n/* harmony export */   Workout: function() { return /* binding */ Workout; },\n/* harmony export */   WorkoutRating: function() { return /* binding */ WorkoutRating; },\n/* harmony export */   WorkoutStatus: function() { return /* binding */ WorkoutStatus; },\n/* harmony export */   WorkoutSummary: function() { return /* binding */ WorkoutSummary; },\n/* harmony export */   fromFirebase: function() { return /* binding */ fromFirebase; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ \"./node_modules/@swc/helpers/esm/_class_call_check.js\");\n/* harmony import */ var _exercise_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../exercise/types */ \"./src/api/firebase/exercise/types.ts\");\n/* harmony import */ var _utils_formatDate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/formatDate */ \"./src/utils/formatDate.ts\");\n\n\n\n\nvar WorkoutStatus;\n(function(WorkoutStatus) {\n    WorkoutStatus[\"QueuedUp\"] = \"queuedUp\";\n    WorkoutStatus[\"InProgress\"] = \"inProgress\";\n    WorkoutStatus[\"Complete\"] = \"complete\";\n    WorkoutStatus[\"Archived\"] = \"archived\";\n})(WorkoutStatus || (WorkoutStatus = {}));\nvar WorkoutRating;\n(function(WorkoutRating) {\n    WorkoutRating[\"TooHard\"] = \"Too Hard\";\n    WorkoutRating[\"TooEasy\"] = \"Too Easy\";\n    WorkoutRating[\"JustRight\"] = \"Just Right\";\n})(WorkoutRating || (WorkoutRating = {}));\nvar BodyZone;\n(function(BodyZone) {\n    BodyZone[\"LowerBody\"] = \"Lower Body\";\n    BodyZone[\"UpperBody\"] = \"Upper Body\";\n    BodyZone[\"FullBody\"] = \"Full Body\";\n    BodyZone[\"Core\"] = \"Core\";\n})(BodyZone || (BodyZone = {}));\nfunction fromFirebase(data) {\n    return {\n        reps: data.reps || 0,\n        weight: data.weight || 0,\n        leftReps: data.leftReps || 0,\n        leftWeight: data.leftWeight || 0,\n        isSplit: data.isSplit || false,\n        isBodyWeight: data.isBodyWeight || false,\n        duration: data.duration || 0,\n        calories: data.calories || 0,\n        bpm: data.bpm || 0\n    };\n}\nvar RepsAndWeightLog = /*#__PURE__*/ function() {\n    \"use strict\";\n    function RepsAndWeightLog() {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, RepsAndWeightLog);\n    }\n    RepsAndWeightLog.fromFirebase = function fromFirebase1(data) {\n        return fromFirebase(data);\n    };\n    return RepsAndWeightLog;\n}();\n// WorkoutClass.ts\nvar Workout = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Workout(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, Workout);\n        this.id = data.id;\n        this.collectionId = data.collectionId;\n        this.roundWorkoutId = data.roundWorkoutId;\n        this.exercises = data.exercises;\n        this.challenge = data.challenge;\n        this.logs = data.logs;\n        this.title = data.title;\n        this.description = data.description;\n        this.duration = data.duration;\n        this.workoutRating = data.workoutRating;\n        this.useAuthorContent = data.useAuthorContent;\n        this.isCompleted = data.isCompleted;\n        this.workoutStatus = data.workoutStatus;\n        this.startTime = data.startTime;\n        this.order = data.order;\n        this.author = data.author;\n        this.createdAt = data.createdAt;\n        this.updatedAt = data.updatedAt;\n        this.zone = Workout.determineWorkoutZone(data.exercises);\n    }\n    Workout.estimatedDuration = function estimatedDuration(exercises) {\n        var warmupTime = 5;\n        var cooldownTime = 5;\n        var totalExerciseTime = 0;\n        var restTime = 0;\n        var hasScreenTimeExercises = false;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = exercises[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var exerciseRef = _step.value;\n                var exercise = exerciseRef.exercise;\n                console.groupCollapsed(\"Exercise: \".concat(exercise));\n                if (exercise.category.type === \"cardio\") {\n                    var _exercise_category_details;\n                    var duration = ((_exercise_category_details = exercise.category.details) === null || _exercise_category_details === void 0 ? void 0 : _exercise_category_details.duration) || 0;\n                    console.log(\"Cardio duration (minutes):\", duration);\n                    totalExerciseTime += duration;\n                } else if (exercise.category.type === \"weightTraining\") {\n                    var _exercise_category_details1;\n                    var screenTime = ((_exercise_category_details1 = exercise.category.details) === null || _exercise_category_details1 === void 0 ? void 0 : _exercise_category_details1.screenTime) || 0;\n                    if (screenTime > 0) {\n                        console.log(\"Screen time (seconds):\", screenTime);\n                        console.log(\"Converted to minutes:\", Math.floor(screenTime / 60));\n                        totalExerciseTime += Math.floor(screenTime / 60);\n                        hasScreenTimeExercises = true;\n                    } else {\n                        console.log(\"Using default timing (8m exercise + 1m rest)\");\n                        totalExerciseTime += 8;\n                        restTime += 1;\n                    }\n                }\n                console.log(\"Current totals:\", {\n                    totalExerciseTime: totalExerciseTime,\n                    restTime: restTime,\n                    hasScreenTimeExercises: hasScreenTimeExercises\n                });\n                console.groupEnd();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        if (!hasScreenTimeExercises) {\n            console.log(\"Adding warmup/cool-down:\", warmupTime + cooldownTime, \"minutes\");\n            totalExerciseTime += warmupTime + cooldownTime;\n        }\n        var estimatedTotalTime = totalExerciseTime + restTime;\n        console.log(\"Pre-rounded total:\", estimatedTotalTime);\n        var finalEstimate = estimatedTotalTime;\n        if (!hasScreenTimeExercises) {\n            finalEstimate = Math.round(estimatedTotalTime / 5) * 5;\n            console.log(\"Rounded to nearest 5 minutes:\", finalEstimate);\n        }\n        console.log(\"Final estimated duration:\", finalEstimate, \"minutes\");\n        return finalEstimate;\n    };\n    Workout.determineWorkoutZone = function determineWorkoutZone(exercises) {\n        var bodyPartsInvolved = new Set();\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = exercises[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var exerciseRef = _step.value;\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = (exerciseRef.exercise.primaryBodyParts || [\n                        exerciseRef.exercise.primaryBodyParts\n                    ])[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var bodyPart = _step1.value;\n                        bodyPartsInvolved.add(bodyPart);\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1[\"return\"] != null) {\n                            _iterator1[\"return\"]();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                    _iterator[\"return\"]();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        var upperBodyParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Chest,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Shoulders,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Biceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Triceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Traps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Lats,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Forearms\n        ]);\n        var lowerBodyParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Hamstrings,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Glutes,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Quadriceps,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Calves\n        ]);\n        var coreParts = new Set([\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Abs,\n            _exercise_types__WEBPACK_IMPORTED_MODULE_0__.BodyPart.Lowerback\n        ]);\n        var hasCommonElements = function(set1, set2) {\n            return Array.from(set1).some(function(item) {\n                return set2.has(item);\n            });\n        };\n        var hasUpperBody = hasCommonElements(bodyPartsInvolved, upperBodyParts);\n        var hasLowerBody = hasCommonElements(bodyPartsInvolved, lowerBodyParts);\n        var hasCore = hasCommonElements(bodyPartsInvolved, coreParts);\n        if (hasUpperBody && hasLowerBody && hasCore || hasUpperBody && hasLowerBody) {\n            return \"Full Body\";\n        } else if (hasUpperBody && hasCore || hasUpperBody) {\n            return \"Upper Body\";\n        } else if (hasLowerBody && hasCore || hasLowerBody) {\n            return \"Lower Body\";\n        } else if (hasCore) {\n            return \"Core\";\n        } else {\n            return \"Full Body\"; // Default case\n        }\n    };\n    Workout.toDictionary = function toDictionary(workout) {\n        return {\n            id: workout.id,\n            collectionId: workout.collectionId,\n            roundWorkoutId: workout.roundWorkoutId,\n            exercises: workout.exercises,\n            challenge: workout.challenge,\n            logs: workout.logs,\n            title: workout.title,\n            description: workout.description,\n            duration: workout.duration,\n            workoutRating: workout.workoutRating,\n            useAuthorContent: workout.useAuthorContent,\n            isCompleted: workout.isCompleted,\n            workoutStatus: workout.workoutStatus,\n            startTime: workout.startTime,\n            order: workout.order,\n            author: workout.author,\n            createdAt: workout.createdAt,\n            updatedAt: workout.updatedAt,\n            zone: workout.zone\n        };\n    };\n    return Workout;\n}();\nvar WorkoutSummary = /*#__PURE__*/ function() {\n    \"use strict\";\n    function WorkoutSummary(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, WorkoutSummary);\n        this.id = data.id;\n        this.workoutId = data.workoutId;\n        this.exercises = data.exercises.map(function(ex) {\n            return _exercise_types__WEBPACK_IMPORTED_MODULE_0__.ExerciseLog.fromFirebase(ex);\n        });\n        this.bodyParts = data.bodyParts;\n        this.secondaryBodyParts = data.secondaryBodyParts;\n        this.workoutTitle = data.workoutTitle;\n        this.caloriesBurned = data.caloriesBurned;\n        this.workoutRating = data.workoutRating;\n        this.exercisesCompleted = data.exercisesCompleted.map(function(ex) {\n            return _exercise_types__WEBPACK_IMPORTED_MODULE_0__.ExerciseLog.fromFirebase(ex);\n        });\n        this.aiInsight = data.aiInsight;\n        this.recommendations = data.recommendations;\n        this.gifURLs = data.gifURLs;\n        this.recommendedWork = data.recommendedWork;\n        this.isCompleted = data.isCompleted;\n        this.createdAt = data.createdAt ? new Date(data.createdAt) : new Date();\n        this.updatedAt = data.updatedAt ? new Date(data.updatedAt) : new Date();\n        this.completedAt = data.completedAt ? new Date(data.completedAt) : null;\n        this.duration = data.duration;\n    }\n    WorkoutSummary.fromFirebase = function fromFirebase(data) {\n        return new WorkoutSummary({\n            id: data.id || \"\",\n            workoutId: data.workoutId || \"\",\n            exercises: data.exercises || [],\n            bodyParts: data.bodyParts || [],\n            secondaryBodyParts: data.secondaryBodyParts || [],\n            workoutTitle: data.workoutTitle || \"\",\n            caloriesBurned: data.caloriesBurned || 0,\n            workoutRating: data.workoutRating,\n            exercisesCompleted: data.exercisesCompleted || [],\n            aiInsight: data.aiInsight || \"\",\n            recommendations: data.recommendations || [],\n            gifURLs: data.gifURLs || [],\n            recommendedWork: data.recommendedWork,\n            isCompleted: data.isCompleted || false,\n            createdAt: data.createdAt,\n            updatedAt: data.updatedAt,\n            completedAt: data.completedAt,\n            duration: data.duration || \"\"\n        });\n    };\n    return WorkoutSummary;\n}();\nvar SweatlistType;\n(function(SweatlistType) {\n    SweatlistType[\"Together\"] = \"together\";\n    SweatlistType[\"Solo\"] = \"solo\";\n    SweatlistType[\"Locked\"] = \"locked\";\n})(SweatlistType || (SweatlistType = {}));\nvar ReferralChain = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ReferralChain(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, ReferralChain);\n        this.originalHostId = data.originalHostId || \"\";\n        this.sharedBy = data.sharedBy || \"\";\n    }\n    var _proto = ReferralChain.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            originalHostId: this.originalHostId,\n            sharedBy: this.sharedBy\n        };\n    };\n    ReferralChain.fromFirestore = function fromFirestore(data) {\n        return new ReferralChain(data);\n    };\n    return ReferralChain;\n}();\n// Main SweatlistCollection interface\nvar SweatlistCollection = /*#__PURE__*/ function() {\n    \"use strict\";\n    function SweatlistCollection(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, SweatlistCollection);\n        this.id = data.id;\n        this.title = data.title || \"\";\n        this.subtitle = data.subtitle || \"\";\n        this.challenge = data.challenge ? new Challenge(data.challenge) : undefined;\n        this.sweatlistIds = (data.sweatlistIds || []).map(function(item) {\n            return {\n                id: item.id || \"\",\n                sweatlistAuthorId: item.sweatlistAuthorId || \"\",\n                sweatlistName: item.sweatlistName || \"\",\n                order: item.order || 0\n            };\n        });\n        // If ownerId is not an array, wrap it in an array.\n        if (Array.isArray(data.ownerId)) {\n            this.ownerId = data.ownerId;\n        } else if (data.ownerId) {\n            this.ownerId = [\n                data.ownerId\n            ];\n        } else {\n            this.ownerId = [];\n        }\n        this.privacy = this.challenge ? \"together\" : \"solo\";\n        this.participants = (data.participants || []).map(function(participant) {\n            return participant || \"\";\n        });\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n    }\n    var _proto = SweatlistCollection.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            title: this.title,\n            subtitle: this.subtitle,\n            challenge: this.challenge ? this.challenge.toDictionary() : null,\n            sweatlistIds: this.sweatlistIds.map(function(item) {\n                return {\n                    id: item.id,\n                    sweatlistAuthorId: item.sweatlistAuthorId,\n                    order: item.order\n                };\n            }),\n            ownerId: this.ownerId,\n            privacy: this.privacy,\n            createdAt: this.createdAt,\n            updatedAt: this.updatedAt\n        };\n    };\n    _proto.toRESTDictionary = function toRESTDictionary() {\n        return {\n            fields: {\n                id: {\n                    stringValue: this.id\n                },\n                title: {\n                    stringValue: this.title\n                },\n                subtitle: {\n                    stringValue: this.subtitle\n                },\n                // ownerId as an array of string values\n                ownerId: {\n                    arrayValue: {\n                        values: this.ownerId.map(function(owner) {\n                            return {\n                                stringValue: owner\n                            };\n                        })\n                    }\n                },\n                sweatlistIds: {\n                    arrayValue: {\n                        values: this.sweatlistIds.map(function(item) {\n                            return {\n                                mapValue: {\n                                    fields: {\n                                        id: {\n                                            stringValue: item.id\n                                        },\n                                        sweatlistAuthorId: {\n                                            stringValue: item.sweatlistAuthorId\n                                        },\n                                        order: {\n                                            integerValue: item.order\n                                        }\n                                    }\n                                }\n                            };\n                        })\n                    }\n                },\n                createdAt: {\n                    doubleValue: this.createdAt.getTime()\n                },\n                updatedAt: {\n                    doubleValue: this.updatedAt.getTime()\n                }\n            }\n        };\n    };\n    _proto.isPublished = function isPublished() {\n        if (!this.challenge) return false;\n        return this.challenge.status === \"published\";\n    };\n    SweatlistCollection.fromFirestore = function fromFirestore(data) {\n        return new SweatlistCollection(data);\n    };\n    return SweatlistCollection;\n}();\nvar ProfileImage = /*#__PURE__*/ function() {\n    \"use strict\";\n    function ProfileImage(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, ProfileImage);\n        this.profileImageURL = data.profileImageURL || \"\";\n        this.thumbnailURL = data.thumbnailURL || \"\";\n    }\n    var _proto = ProfileImage.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            profileImageURL: this.profileImageURL,\n            thumbnailURL: this.thumbnailURL || null\n        };\n    };\n    ProfileImage.fromFirestore = function fromFirestore(data) {\n        return new ProfileImage(data);\n    };\n    return ProfileImage;\n}();\nvar UserLocation = /*#__PURE__*/ function() {\n    \"use strict\";\n    function UserLocation(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, UserLocation);\n        this.latitude = data.latitude || 0;\n        this.longitude = data.longitude || 0;\n    }\n    var _proto = UserLocation.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            latitude: this.latitude,\n            longitude: this.longitude\n        };\n    };\n    UserLocation.fromFirestore = function fromFirestore(data) {\n        return new UserLocation(data);\n    };\n    return UserLocation;\n}();\nvar PulsePoints = /*#__PURE__*/ function() {\n    \"use strict\";\n    function PulsePoints(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, PulsePoints);\n        var _data_baseCompletion;\n        this.baseCompletion = (_data_baseCompletion = data.baseCompletion) !== null && _data_baseCompletion !== void 0 ? _data_baseCompletion : 0;\n        var _data_firstCompletion;\n        this.firstCompletion = (_data_firstCompletion = data.firstCompletion) !== null && _data_firstCompletion !== void 0 ? _data_firstCompletion : 0;\n        var _data_streakBonus;\n        this.streakBonus = (_data_streakBonus = data.streakBonus) !== null && _data_streakBonus !== void 0 ? _data_streakBonus : 0;\n        var _data_checkInBonus;\n        this.checkInBonus = (_data_checkInBonus = data.checkInBonus) !== null && _data_checkInBonus !== void 0 ? _data_checkInBonus : 0;\n        var _data_effortRating;\n        this.effortRating = (_data_effortRating = data.effortRating) !== null && _data_effortRating !== void 0 ? _data_effortRating : 0;\n        var _data_chatParticipation;\n        this.chatParticipation = (_data_chatParticipation = data.chatParticipation) !== null && _data_chatParticipation !== void 0 ? _data_chatParticipation : 0;\n        var _data_locationCheckin;\n        this.locationCheckin = (_data_locationCheckin = data.locationCheckin) !== null && _data_locationCheckin !== void 0 ? _data_locationCheckin : 0;\n        var _data_contentEngagement;\n        this.contentEngagement = (_data_contentEngagement = data.contentEngagement) !== null && _data_contentEngagement !== void 0 ? _data_contentEngagement : 0;\n        var _data_encouragementSent;\n        this.encouragementSent = (_data_encouragementSent = data.encouragementSent) !== null && _data_encouragementSent !== void 0 ? _data_encouragementSent : 0;\n        var _data_encouragementReceived;\n        this.encouragementReceived = (_data_encouragementReceived = data.encouragementReceived) !== null && _data_encouragementReceived !== void 0 ? _data_encouragementReceived : 0;\n    }\n    var _proto = PulsePoints.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            baseCompletion: this.baseCompletion,\n            firstCompletion: this.firstCompletion,\n            streakBonus: this.streakBonus,\n            checkInBonus: this.checkInBonus,\n            effortRating: this.effortRating,\n            chatParticipation: this.chatParticipation,\n            locationCheckin: this.locationCheckin,\n            contentEngagement: this.contentEngagement,\n            encouragementSent: this.encouragementSent,\n            encouragementReceived: this.encouragementReceived\n        };\n    };\n    PulsePoints.fromFirestore = function fromFirestore(data) {\n        return new PulsePoints(data);\n    };\n    return PulsePoints;\n}();\n// Types for user in challenge\nvar UserChallenge = /*#__PURE__*/ function() {\n    \"use strict\";\n    function UserChallenge(id, data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, UserChallenge);\n        this.id = id;\n        this.challenge = data.challenge ? new Challenge(data.challenge) : undefined;\n        this.challengeId = data.challengeId || \"\";\n        this.userId = data.userId || \"\";\n        this.username = data.username || \"\";\n        this.profileImage = data.profileImage ? new ProfileImage(data.profileImage) : undefined;\n        var _data_progress;\n        this.progress = (_data_progress = data.progress) !== null && _data_progress !== void 0 ? _data_progress : 0;\n        this.referralChains = data.referralChains ? new ReferralChain(data.referralChains) : new ReferralChain({\n            originalHostId: \"\",\n            sharedBy: \"\"\n        });\n        this.completedWorkouts = Array.isArray(data.completedWorkouts) ? data.completedWorkouts.map(function(cw) {\n            return {\n                id: cw.id || \"\",\n                workoutId: cw.workoutId || \"\",\n                completedAt: cw.completedAt || 0\n            };\n        }) : [];\n        var _data_isCompleted;\n        this.isCompleted = (_data_isCompleted = data.isCompleted) !== null && _data_isCompleted !== void 0 ? _data_isCompleted : false;\n        this.location = data.location ? new UserLocation(data.location) : undefined;\n        this.city = data.city || \"\";\n        this.country = data.country || \"\";\n        this.timezone = data.timezone || \"\";\n        this.joinDate = data.joinDate ? new Date(data.joinDate) : new Date();\n        this.createdAt = data.createdAt ? new Date(data.createdAt) : new Date();\n        this.updatedAt = data.updatedAt ? new Date(data.updatedAt) : new Date();\n        this.pulsePoints = data.pulsePoints ? new PulsePoints(data.pulsePoints) : new PulsePoints({});\n        var _data_currentStreak;\n        this.currentStreak = (_data_currentStreak = data.currentStreak) !== null && _data_currentStreak !== void 0 ? _data_currentStreak : 0;\n        this.encouragedUsers = Array.isArray(data.encouragedUsers) ? data.encouragedUsers : [];\n        this.encouragedByUsers = Array.isArray(data.encouragedByUsers) ? data.encouragedByUsers : [];\n        this.checkIns = Array.isArray(data.checkIns) ? data.checkIns.map(function(d) {\n            return new Date(d);\n        }) : [];\n    }\n    var _proto = UserChallenge.prototype;\n    // Optionally, add a method to convert to a plain dictionary (for saving to Firestore)\n    _proto.toDictionary = function toDictionary() {\n        return {\n            challenge: this.challenge ? this.challenge.toDictionary() : null,\n            challengeId: this.challengeId,\n            userId: this.userId,\n            username: this.username,\n            profileImage: this.profileImage ? this.profileImage.toDictionary() : null,\n            progress: this.progress,\n            referralChains: this.referralChains ? this.referralChains.toDictionary() : {},\n            completedWorkouts: this.completedWorkouts,\n            isCompleted: this.isCompleted,\n            location: this.location ? this.location.toDictionary() : null,\n            city: this.city,\n            country: this.country,\n            timezone: this.timezone,\n            joinDate: this.joinDate.getTime(),\n            createdAt: this.createdAt.getTime(),\n            updatedAt: this.updatedAt.getTime(),\n            pulsePoints: this.pulsePoints ? this.pulsePoints.toDictionary() : {},\n            currentStreak: this.currentStreak,\n            encouragedUsers: this.encouragedUsers,\n            encouragedByUsers: this.encouragedByUsers,\n            checkIns: this.checkIns.map(function(date) {\n                return date.getTime();\n            })\n        };\n    };\n    // Optionally, you can add a static method to create an instance from Firestore data\n    UserChallenge.fromFirestore = function fromFirestore(id, data) {\n        return new UserChallenge(id, data);\n    };\n    return UserChallenge;\n}();\nvar ChallengeStatus;\n// Challenge status enum\n(function(ChallengeStatus) {\n    ChallengeStatus[\"Draft\"] = \"draft\";\n    ChallengeStatus[\"Published\"] = \"published\";\n    ChallengeStatus[\"Completed\"] = \"completed\";\n    ChallengeStatus[\"Cancelled\"] = \"cancelled\";\n})(ChallengeStatus || (ChallengeStatus = {}));\nvar IntroVideo = /*#__PURE__*/ function() {\n    \"use strict\";\n    function IntroVideo(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, IntroVideo);\n        this.id = data.id;\n        this.userId = data.userId;\n        this.videoUrl = data.videoUrl;\n    }\n    var _proto = IntroVideo.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            userId: this.userId,\n            videoUrl: this.videoUrl\n        };\n    };\n    return IntroVideo;\n}();\nvar Challenge = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Challenge(data) {\n        (0,_swc_helpers_class_call_check__WEBPACK_IMPORTED_MODULE_2__._)(this, Challenge);\n        this.id = data.id;\n        this.title = data.title;\n        this.subtitle = data.subtitle;\n        this.participants = data.participants;\n        this.status = data.status;\n        this.startDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.startDate);\n        this.endDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.endDate);\n        this.createdAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.createdAt);\n        this.updatedAt = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_1__.convertFirestoreTimestamp)(data.updatedAt);\n        // Handle both old and new format\n        if (data.introVideos) {\n            this.introVideos = data.introVideos.map(function(video) {\n                return new IntroVideo(video);\n            });\n        } else if (data.introVideoURL) {\n            var _data_participants_;\n            this.introVideos = [\n                new IntroVideo({\n                    id: \"1\",\n                    userId: ((_data_participants_ = data.participants[0]) === null || _data_participants_ === void 0 ? void 0 : _data_participants_.userId) || \"\",\n                    videoUrl: data.introVideoURL\n                })\n            ];\n        } else {\n            this.introVideos = [];\n        }\n        this.durationInDays = this.calculateDurationInDays();\n    }\n    var _proto = Challenge.prototype;\n    _proto.toDictionary = function toDictionary() {\n        return {\n            id: this.id,\n            title: this.title,\n            subtitle: this.subtitle,\n            participants: this.participants.map(function(participant) {\n                return {\n                    id: participant.id,\n                    challengeId: participant.challengeId,\n                    userId: participant.userId,\n                    username: participant.username,\n                    profileImage: participant.profileImage,\n                    progress: participant.progress,\n                    completedWorkouts: participant.completedWorkouts,\n                    isCompleted: participant.isCompleted,\n                    location: participant.location,\n                    city: participant.city,\n                    country: participant.country,\n                    timezone: participant.timezone,\n                    joinDate: participant.joinDate,\n                    createdAt: participant.createdAt,\n                    updatedAt: participant.updatedAt,\n                    pulsePoints: participant.pulsePoints,\n                    currentStreak: participant.currentStreak,\n                    encouragedUsers: participant.encouragedUsers,\n                    encouragedByUsers: participant.encouragedByUsers,\n                    checkIns: participant.checkIns\n                };\n            }),\n            status: this.status,\n            startDate: this.startDate,\n            endDate: this.endDate,\n            createdAt: this.createdAt,\n            updatedAt: this.updatedAt,\n            durationInDays: this.durationInDays,\n            introVideos: this.introVideos.map(function(video) {\n                return video.toDictionary();\n            })\n        };\n    };\n    /**\n   * Calculates the duration in days between the startDate and endDate.\n   * @returns The number of days between the two dates.\n   */ _proto.calculateDurationInDays = function calculateDurationInDays() {\n        var _this_startDate, _this_endDate;\n        // Convert dates to timestamps using valueOf()\n        var start = (_this_startDate = this.startDate) === null || _this_startDate === void 0 ? void 0 : _this_startDate.valueOf();\n        var end = (_this_endDate = this.endDate) === null || _this_endDate === void 0 ? void 0 : _this_endDate.valueOf();\n        // Ensure converted dates are valid\n        if (!start || !end || isNaN(start) || isNaN(end)) {\n            throw new Error(\"Invalid startDate or endDate\");\n        }\n        // Calculate the difference in milliseconds and convert to days\n        var durationInMilliseconds = end - start;\n        return Math.ceil(durationInMilliseconds / (1000 * 60 * 60 * 24));\n    };\n    Challenge.toFirestoreObject = function toFirestoreObject(obj) {\n        var _this = this;\n        if (obj === null || typeof obj !== \"object\") {\n            return obj;\n        }\n        if (obj instanceof Date) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            return obj.map(function(item) {\n                return _this.toFirestoreObject(item);\n            });\n        }\n        if (obj instanceof Challenge) {\n            return {\n                id: obj.id,\n                title: obj.title,\n                subtitle: obj.subtitle,\n                participants: obj.participants,\n                status: obj.status,\n                startDate: obj.startDate,\n                endDate: obj.endDate,\n                createdAt: obj.createdAt,\n                updatedAt: obj.updatedAt,\n                introVideos: obj.introVideos.map(function(video) {\n                    return {\n                        id: video.id,\n                        userId: video.userId,\n                        videoUrl: video.videoUrl\n                    };\n                })\n            };\n        }\n        var plainObject = {};\n        for(var key in obj){\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                plainObject[key] = this.toFirestoreObject(obj[key]);\n            }\n        }\n        return plainObject;\n    };\n    return Challenge;\n}();\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QzlCYSxRQUFReUQsSUFBSXpELE1BQU07Z0JBQ2xCMEMsV0FBV2UsSUFBSWYsU0FBUztnQkFDeEJDLFNBQVNjLElBQUlkLE9BQU87Z0JBQ3BCakosV0FBVytKLElBQUkvSixTQUFTO2dCQUN4QkMsV0FBVzhKLElBQUk5SixTQUFTO2dCQUN4QmlKLGFBQWFhLElBQUliLFdBQVcsQ0FBQ3JGLEdBQUcsQ0FBQ3NGLFNBQUFBOzJCQUFVO3dCQUN6Q2xLLElBQUlrSyxNQUFNbEssRUFBRTt3QkFDWnlJLFFBQVF5QixNQUFNekIsTUFBTTt3QkFDcEJxQixVQUFVSSxNQUFNSixRQUFRO29CQUMxQjs7WUFDRjtRQUNGO1FBRUEsSUFBTWlCLGNBQW9DLENBQUM7UUFDM0MsSUFBSyxJQUFNQyxPQUFPRixJQUFLO1lBQ3JCLElBQUlHLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNOLEtBQUtFLE1BQU07Z0JBQ2xERCxXQUFXLENBQUNDLElBQUksR0FBRyxJQUFJLENBQUNILGlCQUFpQixDQUFDQyxHQUFHLENBQUNFLElBQUk7WUFDcEQ7UUFDRjtRQUNBLE9BQU9EO0lBQ1Q7V0FySkUvRTs7QUFzSytDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcGkvZmlyZWJhc2Uvd29ya291dC90eXBlcy50cz9iZDI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4ZXJjaXNlUmVmZXJlbmNlLCBFeGVyY2lzZUxvZyB9IGZyb20gJy4uL2V4ZXJjaXNlL3R5cGVzJztcbmltcG9ydCB7IEJvZHlQYXJ0LCBFeGVyY2lzZUNhdGVnb3J5IH0gZnJvbSAnLi4vZXhlcmNpc2UvdHlwZXMnO1xuaW1wb3J0IHsgY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2Zvcm1hdERhdGUnO1xuXG4vLyBzcmMvdHlwZXMvV29ya291dFR5cGVzLnRzXG5leHBvcnQgZW51bSBXb3Jrb3V0U3RhdHVzIHtcbiAgUXVldWVkVXAgPSAncXVldWVkVXAnLFxuICBJblByb2dyZXNzID0gJ2luUHJvZ3Jlc3MnLFxuICBDb21wbGV0ZSA9ICdjb21wbGV0ZScsXG4gIEFyY2hpdmVkID0gJ2FyY2hpdmVkJ1xufVxuXG4vLyBzcmMvdHlwZXMvV29ya291dFR5cGVzLnRzXG5leHBvcnQgZW51bSBXb3Jrb3V0UmF0aW5nIHtcbiAgVG9vSGFyZCA9ICdUb28gSGFyZCcsXG4gIFRvb0Vhc3kgPSAnVG9vIEVhc3knLFxuICBKdXN0UmlnaHQgPSAnSnVzdCBSaWdodCdcbn1cblxuXG5leHBvcnQgZW51bSBCb2R5Wm9uZSB7XG4gIExvd2VyQm9keSA9IFwiTG93ZXIgQm9keVwiLFxuICBVcHBlckJvZHkgPSBcIlVwcGVyIEJvZHlcIixcbiAgRnVsbEJvZHkgPSBcIkZ1bGwgQm9keVwiLFxuICBDb3JlID0gXCJDb3JlXCJcblxufVxuICBcbi8vIHR5cGVzL1JlcHNBbmRXZWlnaHRMb2cudHNcbmV4cG9ydCBpbnRlcmZhY2UgUmVwc0FuZFdlaWdodExvZyB7XG4gIHJlcHM6IG51bWJlcjtcbiAgd2VpZ2h0OiBudW1iZXI7XG4gIGxlZnRSZXBzOiBudW1iZXI7XG4gIGxlZnRXZWlnaHQ6IG51bWJlcjtcbiAgaXNTcGxpdDogYm9vbGVhbjtcbiAgaXNCb2R5V2VpZ2h0OiBib29sZWFuO1xuICBkdXJhdGlvbjogbnVtYmVyO1xuICBjYWxvcmllczogbnVtYmVyO1xuICBicG06IG51bWJlcjtcbiB9XG4gXG4gZXhwb3J0IGZ1bmN0aW9uIGZyb21GaXJlYmFzZShkYXRhOiBhbnkpOiBSZXBzQW5kV2VpZ2h0TG9nIHtcbiAgcmV0dXJuIHtcbiAgICByZXBzOiBkYXRhLnJlcHMgfHwgMCxcbiAgICB3ZWlnaHQ6IGRhdGEud2VpZ2h0IHx8IDAsXG4gICAgbGVmdFJlcHM6IGRhdGEubGVmdFJlcHMgfHwgMCxcbiAgICBsZWZ0V2VpZ2h0OiBkYXRhLmxlZnRXZWlnaHQgfHwgMCxcbiAgICBpc1NwbGl0OiBkYXRhLmlzU3BsaXQgfHwgZmFsc2UsXG4gICAgaXNCb2R5V2VpZ2h0OiBkYXRhLmlzQm9keVdlaWdodCB8fCBmYWxzZSxcbiAgICBkdXJhdGlvbjogZGF0YS5kdXJhdGlvbiB8fCAwLFxuICAgIGNhbG9yaWVzOiBkYXRhLmNhbG9yaWVzIHx8IDAsXG4gICAgYnBtOiBkYXRhLmJwbSB8fCAwXG4gIH07XG4gfVxuIFxuIGV4cG9ydCBjbGFzcyBSZXBzQW5kV2VpZ2h0TG9nIHtcbiAgc3RhdGljIGZyb21GaXJlYmFzZShkYXRhOiBhbnkpOiBSZXBzQW5kV2VpZ2h0TG9nIHtcbiAgICByZXR1cm4gZnJvbUZpcmViYXNlKGRhdGEpO1xuICB9XG4gfVxuICBcbi8vIFdvcmtvdXRDbGFzcy50c1xuXG4gZXhwb3J0IGNsYXNzIFdvcmtvdXQge1xuICBpZDogc3RyaW5nO1xuICBjb2xsZWN0aW9uSWQ/OiBzdHJpbmdbXTtcbiAgcm91bmRXb3Jrb3V0SWQ6IHN0cmluZztcbiAgZXhlcmNpc2VzOiBFeGVyY2lzZVJlZmVyZW5jZVtdO1xuICBjaGFsbGVuZ2U/OiBDaGFsbGVuZ2U7XG4gIGxvZ3M/OiBFeGVyY2lzZUxvZ1tdO1xuICB0aXRsZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBkdXJhdGlvbjogbnVtYmVyO1xuICB3b3Jrb3V0UmF0aW5nPzogV29ya291dFJhdGluZztcbiAgdXNlQXV0aG9yQ29udGVudDogYm9vbGVhbjtcbiAgaXNDb21wbGV0ZWQ6IGJvb2xlYW47XG4gIHdvcmtvdXRTdGF0dXM6IFdvcmtvdXRTdGF0dXM7XG4gIHN0YXJ0VGltZT86IERhdGU7XG4gIG9yZGVyPzogbnVtYmVyO1xuICBhdXRob3I6IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG4gIHpvbmU6IEJvZHlab25lO1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IFdvcmtvdXQpIHtcbiAgICB0aGlzLmlkID0gZGF0YS5pZDtcbiAgICB0aGlzLmNvbGxlY3Rpb25JZCA9IGRhdGEuY29sbGVjdGlvbklkO1xuICAgIHRoaXMucm91bmRXb3Jrb3V0SWQgPSBkYXRhLnJvdW5kV29ya291dElkO1xuICAgIHRoaXMuZXhlcmNpc2VzID0gZGF0YS5leGVyY2lzZXM7XG4gICAgdGhpcy5jaGFsbGVuZ2UgPSBkYXRhLmNoYWxsZW5nZTtcbiAgICB0aGlzLmxvZ3MgPSBkYXRhLmxvZ3M7XG4gICAgdGhpcy50aXRsZSA9IGRhdGEudGl0bGU7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRhdGEuZGVzY3JpcHRpb247XG4gICAgdGhpcy5kdXJhdGlvbiA9IGRhdGEuZHVyYXRpb247XG4gICAgdGhpcy53b3Jrb3V0UmF0aW5nID0gZGF0YS53b3Jrb3V0UmF0aW5nO1xuICAgIHRoaXMudXNlQXV0aG9yQ29udGVudCA9IGRhdGEudXNlQXV0aG9yQ29udGVudDtcbiAgICB0aGlzLmlzQ29tcGxldGVkID0gZGF0YS5pc0NvbXBsZXRlZDtcbiAgICB0aGlzLndvcmtvdXRTdGF0dXMgPSBkYXRhLndvcmtvdXRTdGF0dXM7XG4gICAgdGhpcy5zdGFydFRpbWUgPSBkYXRhLnN0YXJ0VGltZTtcbiAgICB0aGlzLm9yZGVyID0gZGF0YS5vcmRlcjtcbiAgICB0aGlzLmF1dGhvciA9IGRhdGEuYXV0aG9yO1xuICAgIHRoaXMuY3JlYXRlZEF0ID0gZGF0YS5jcmVhdGVkQXQ7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBkYXRhLnVwZGF0ZWRBdDtcbiAgICB0aGlzLnpvbmUgPSBXb3Jrb3V0LmRldGVybWluZVdvcmtvdXRab25lKGRhdGEuZXhlcmNpc2VzKTtcbiAgfVxuXG4gIHN0YXRpYyBlc3RpbWF0ZWREdXJhdGlvbihleGVyY2lzZXM6IEV4ZXJjaXNlUmVmZXJlbmNlW10pOiBudW1iZXIge1xuICAgIGNvbnN0IHdhcm11cFRpbWUgPSA1O1xuICAgIGNvbnN0IGNvb2xkb3duVGltZSA9IDU7XG4gICAgbGV0IHRvdGFsRXhlcmNpc2VUaW1lID0gMDtcbiAgICBsZXQgcmVzdFRpbWUgPSAwO1xuICAgIGxldCBoYXNTY3JlZW5UaW1lRXhlcmNpc2VzID0gZmFsc2U7XG4gICAgXG4gICAgZm9yIChjb25zdCBleGVyY2lzZVJlZiBvZiBleGVyY2lzZXMpIHtcbiAgICAgIGNvbnN0IGV4ZXJjaXNlID0gZXhlcmNpc2VSZWYuZXhlcmNpc2U7XG4gICAgICBjb25zb2xlLmdyb3VwQ29sbGFwc2VkKGBFeGVyY2lzZTogJHtleGVyY2lzZX1gKTtcbiAgICAgIFxuICAgICAgaWYgKGV4ZXJjaXNlLmNhdGVnb3J5LnR5cGUgPT09ICdjYXJkaW8nKSB7XG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gZXhlcmNpc2UuY2F0ZWdvcnkuZGV0YWlscz8uZHVyYXRpb24gfHwgMDtcbiAgICAgICAgY29uc29sZS5sb2coJ0NhcmRpbyBkdXJhdGlvbiAobWludXRlcyk6JywgZHVyYXRpb24pO1xuICAgICAgICB0b3RhbEV4ZXJjaXNlVGltZSArPSBkdXJhdGlvbjtcbiAgICAgIH0gZWxzZSBpZiAoZXhlcmNpc2UuY2F0ZWdvcnkudHlwZSA9PT0gJ3dlaWdodFRyYWluaW5nJykge1xuICAgICAgICBjb25zdCBzY3JlZW5UaW1lID0gZXhlcmNpc2UuY2F0ZWdvcnkuZGV0YWlscz8uc2NyZWVuVGltZSB8fCAwO1xuICAgICAgICBcbiAgICAgICAgaWYgKHNjcmVlblRpbWUgPiAwKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1NjcmVlbiB0aW1lIChzZWNvbmRzKTonLCBzY3JlZW5UaW1lKTtcbiAgICAgICAgICBjb25zb2xlLmxvZygnQ29udmVydGVkIHRvIG1pbnV0ZXM6JywgTWF0aC5mbG9vcihzY3JlZW5UaW1lIC8gNjApKTtcbiAgICAgICAgICB0b3RhbEV4ZXJjaXNlVGltZSArPSBNYXRoLmZsb29yKHNjcmVlblRpbWUgLyA2MCk7XG4gICAgICAgICAgaGFzU2NyZWVuVGltZUV4ZXJjaXNlcyA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1VzaW5nIGRlZmF1bHQgdGltaW5nICg4bSBleGVyY2lzZSArIDFtIHJlc3QpJyk7XG4gICAgICAgICAgdG90YWxFeGVyY2lzZVRpbWUgKz0gODtcbiAgICAgICAgICByZXN0VGltZSArPSAxO1xuICAgICAgICB9XG4gICAgICB9XG4gIFxuICAgICAgY29uc29sZS5sb2coJ0N1cnJlbnQgdG90YWxzOicsIHtcbiAgICAgICAgdG90YWxFeGVyY2lzZVRpbWUsXG4gICAgICAgIHJlc3RUaW1lLFxuICAgICAgICBoYXNTY3JlZW5UaW1lRXhlcmNpc2VzXG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgICB9XG4gIFxuICAgIGlmICghaGFzU2NyZWVuVGltZUV4ZXJjaXNlcykge1xuICAgICAgY29uc29sZS5sb2coJ0FkZGluZyB3YXJtdXAvY29vbC1kb3duOicsIHdhcm11cFRpbWUgKyBjb29sZG93blRpbWUsICdtaW51dGVzJyk7XG4gICAgICB0b3RhbEV4ZXJjaXNlVGltZSArPSB3YXJtdXBUaW1lICsgY29vbGRvd25UaW1lO1xuICAgIH1cbiAgXG4gICAgY29uc3QgZXN0aW1hdGVkVG90YWxUaW1lID0gdG90YWxFeGVyY2lzZVRpbWUgKyByZXN0VGltZTtcbiAgICBjb25zb2xlLmxvZygnUHJlLXJvdW5kZWQgdG90YWw6JywgZXN0aW1hdGVkVG90YWxUaW1lKTtcbiAgXG4gICAgbGV0IGZpbmFsRXN0aW1hdGUgPSBlc3RpbWF0ZWRUb3RhbFRpbWU7XG4gICAgaWYgKCFoYXNTY3JlZW5UaW1lRXhlcmNpc2VzKSB7XG4gICAgICBmaW5hbEVzdGltYXRlID0gTWF0aC5yb3VuZChlc3RpbWF0ZWRUb3RhbFRpbWUgLyA1KSAqIDU7XG4gICAgICBjb25zb2xlLmxvZygnUm91bmRlZCB0byBuZWFyZXN0IDUgbWludXRlczonLCBmaW5hbEVzdGltYXRlKTtcbiAgICB9XG4gIFxuICAgIGNvbnNvbGUubG9nKCdGaW5hbCBlc3RpbWF0ZWQgZHVyYXRpb246JywgZmluYWxFc3RpbWF0ZSwgJ21pbnV0ZXMnKTtcbiAgICByZXR1cm4gZmluYWxFc3RpbWF0ZTtcbiAgfVxuXG4gIHN0YXRpYyBkZXRlcm1pbmVXb3Jrb3V0Wm9uZShleGVyY2lzZXM6IEV4ZXJjaXNlUmVmZXJlbmNlW10pOiBCb2R5Wm9uZSB7XG4gICAgY29uc3QgYm9keVBhcnRzSW52b2x2ZWQgPSBuZXcgU2V0PEJvZHlQYXJ0PigpO1xuXG4gICAgZm9yIChjb25zdCBleGVyY2lzZVJlZiBvZiBleGVyY2lzZXMpIHtcbiAgICAgIGZvciAoY29uc3QgYm9keVBhcnQgb2YgZXhlcmNpc2VSZWYuZXhlcmNpc2UucHJpbWFyeUJvZHlQYXJ0cyB8fCBbZXhlcmNpc2VSZWYuZXhlcmNpc2UucHJpbWFyeUJvZHlQYXJ0c10pIHtcbiAgICAgICAgYm9keVBhcnRzSW52b2x2ZWQuYWRkKGJvZHlQYXJ0IGFzIEJvZHlQYXJ0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB1cHBlckJvZHlQYXJ0cyA9IG5ldyBTZXQoW1xuICAgICAgQm9keVBhcnQuQ2hlc3QsXG4gICAgICBCb2R5UGFydC5TaG91bGRlcnMsXG4gICAgICBCb2R5UGFydC5CaWNlcHMsXG4gICAgICBCb2R5UGFydC5UcmljZXBzLFxuICAgICAgQm9keVBhcnQuVHJhcHMsXG4gICAgICBCb2R5UGFydC5MYXRzLFxuICAgICAgQm9keVBhcnQuRm9yZWFybXMsXG4gICAgXSk7XG5cbiAgICBjb25zdCBsb3dlckJvZHlQYXJ0cyA9IG5ldyBTZXQoW1xuICAgICAgQm9keVBhcnQuSGFtc3RyaW5ncyxcbiAgICAgIEJvZHlQYXJ0LkdsdXRlcyxcbiAgICAgIEJvZHlQYXJ0LlF1YWRyaWNlcHMsXG4gICAgICBCb2R5UGFydC5DYWx2ZXMsXG4gICAgXSk7XG5cbiAgICBjb25zdCBjb3JlUGFydHMgPSBuZXcgU2V0KFtCb2R5UGFydC5BYnMsIEJvZHlQYXJ0Lkxvd2VyYmFja10pO1xuXG4gICAgY29uc3QgaGFzQ29tbW9uRWxlbWVudHMgPSAoc2V0MTogU2V0PEJvZHlQYXJ0Piwgc2V0MjogU2V0PEJvZHlQYXJ0Pik6IGJvb2xlYW4gPT4ge1xuICAgICAgcmV0dXJuIEFycmF5LmZyb20oc2V0MSkuc29tZSgoaXRlbSkgPT4gc2V0Mi5oYXMoaXRlbSkpO1xuICAgIH07XG5cbiAgICBjb25zdCBoYXNVcHBlckJvZHkgPSBoYXNDb21tb25FbGVtZW50cyhib2R5UGFydHNJbnZvbHZlZCwgdXBwZXJCb2R5UGFydHMpO1xuICAgIGNvbnN0IGhhc0xvd2VyQm9keSA9IGhhc0NvbW1vbkVsZW1lbnRzKGJvZHlQYXJ0c0ludm9sdmVkLCBsb3dlckJvZHlQYXJ0cyk7XG4gICAgY29uc3QgaGFzQ29yZSA9IGhhc0NvbW1vbkVsZW1lbnRzKGJvZHlQYXJ0c0ludm9sdmVkLCBjb3JlUGFydHMpO1xuXG4gICAgaWYgKChoYXNVcHBlckJvZHkgJiYgaGFzTG93ZXJCb2R5ICYmIGhhc0NvcmUpIHx8IChoYXNVcHBlckJvZHkgJiYgaGFzTG93ZXJCb2R5KSkge1xuICAgICAgcmV0dXJuIEJvZHlab25lLkZ1bGxCb2R5O1xuICAgIH0gZWxzZSBpZiAoaGFzVXBwZXJCb2R5ICYmIGhhc0NvcmUgfHwgaGFzVXBwZXJCb2R5KSB7XG4gICAgICByZXR1cm4gQm9keVpvbmUuVXBwZXJCb2R5O1xuICAgIH0gZWxzZSBpZiAoaGFzTG93ZXJCb2R5ICYmIGhhc0NvcmUgfHwgaGFzTG93ZXJCb2R5KSB7XG4gICAgICByZXR1cm4gQm9keVpvbmUuTG93ZXJCb2R5O1xuICAgIH0gZWxzZSBpZiAoaGFzQ29yZSkge1xuICAgICAgcmV0dXJuIEJvZHlab25lLkNvcmU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBCb2R5Wm9uZS5GdWxsQm9keTsgLy8gRGVmYXVsdCBjYXNlXG4gICAgfVxuICB9XG5cbiAgc3RhdGljIHRvRGljdGlvbmFyeSh3b3Jrb3V0OiBXb3Jrb3V0KTogeyBba2V5OiBzdHJpbmddOiBhbnkgfSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB3b3Jrb3V0LmlkLFxuICAgICAgY29sbGVjdGlvbklkOiB3b3Jrb3V0LmNvbGxlY3Rpb25JZCxcbiAgICAgIHJvdW5kV29ya291dElkOiB3b3Jrb3V0LnJvdW5kV29ya291dElkLFxuICAgICAgZXhlcmNpc2VzOiB3b3Jrb3V0LmV4ZXJjaXNlcyxcbiAgICAgIGNoYWxsZW5nZTogd29ya291dC5jaGFsbGVuZ2UsXG4gICAgICBsb2dzOiB3b3Jrb3V0LmxvZ3MsXG4gICAgICB0aXRsZTogd29ya291dC50aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uOiB3b3Jrb3V0LmRlc2NyaXB0aW9uLFxuICAgICAgZHVyYXRpb246IHdvcmtvdXQuZHVyYXRpb24sXG4gICAgICB3b3Jrb3V0UmF0aW5nOiB3b3Jrb3V0LndvcmtvdXRSYXRpbmcsXG4gICAgICB1c2VBdXRob3JDb250ZW50OiB3b3Jrb3V0LnVzZUF1dGhvckNvbnRlbnQsXG4gICAgICBpc0NvbXBsZXRlZDogd29ya291dC5pc0NvbXBsZXRlZCxcbiAgICAgIHdvcmtvdXRTdGF0dXM6IHdvcmtvdXQud29ya291dFN0YXR1cyxcbiAgICAgIHN0YXJ0VGltZTogd29ya291dC5zdGFydFRpbWUsXG4gICAgICBvcmRlcjogd29ya291dC5vcmRlcixcbiAgICAgIGF1dGhvcjogd29ya291dC5hdXRob3IsXG4gICAgICBjcmVhdGVkQXQ6IHdvcmtvdXQuY3JlYXRlZEF0LFxuICAgICAgdXBkYXRlZEF0OiB3b3Jrb3V0LnVwZGF0ZWRBdCxcbiAgICAgIHpvbmU6IHdvcmtvdXQuem9uZSxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBXb3Jrb3V0U3VtbWFyeSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICB3b3Jrb3V0SWQ6IHN0cmluZztcbiAgICBleGVyY2lzZXM6IEV4ZXJjaXNlTG9nW107XG4gICAgYm9keVBhcnRzOiBCb2R5UGFydFtdO1xuICAgIHNlY29uZGFyeUJvZHlQYXJ0czogQm9keVBhcnRbXTtcbiAgICB3b3Jrb3V0VGl0bGU6IHN0cmluZztcbiAgICBjYWxvcmllc0J1cm5lZDogbnVtYmVyO1xuICAgIHdvcmtvdXRSYXRpbmc/OiBXb3Jrb3V0UmF0aW5nO1xuICAgIGV4ZXJjaXNlc0NvbXBsZXRlZDogRXhlcmNpc2VMb2dbXTtcbiAgICBhaUluc2lnaHQ6IHN0cmluZztcbiAgICByZWNvbW1lbmRhdGlvbnM6IHN0cmluZ1tdO1xuICAgIGdpZlVSTHM/OiBzdHJpbmdbXTtcbiAgICByZWNvbW1lbmRlZFdvcms/OiBudW1iZXI7XG4gICAgaXNDb21wbGV0ZWQ6IGJvb2xlYW47XG4gICAgY3JlYXRlZEF0OiBEYXRlO1xuICAgIHVwZGF0ZWRBdDogRGF0ZTtcbiAgICBjb21wbGV0ZWRBdD86IERhdGUgfCBudWxsO1xuICAgIGR1cmF0aW9uOiBzdHJpbmc7XG4gIFxuICAgIGNvbnN0cnVjdG9yKGRhdGE6IGFueSkge1xuICAgICAgdGhpcy5pZCA9IGRhdGEuaWQ7XG4gICAgICB0aGlzLndvcmtvdXRJZCA9IGRhdGEud29ya291dElkO1xuICAgICAgdGhpcy5leGVyY2lzZXMgPSBkYXRhLmV4ZXJjaXNlcy5tYXAoKGV4OiBhbnkpID0+IEV4ZXJjaXNlTG9nLmZyb21GaXJlYmFzZShleCkpO1xuICAgICAgdGhpcy5ib2R5UGFydHMgPSBkYXRhLmJvZHlQYXJ0cztcbiAgICAgIHRoaXMuc2Vjb25kYXJ5Qm9keVBhcnRzID0gZGF0YS5zZWNvbmRhcnlCb2R5UGFydHM7XG4gICAgICB0aGlzLndvcmtvdXRUaXRsZSA9IGRhdGEud29ya291dFRpdGxlO1xuICAgICAgdGhpcy5jYWxvcmllc0J1cm5lZCA9IGRhdGEuY2Fsb3JpZXNCdXJuZWQ7XG4gICAgICB0aGlzLndvcmtvdXRSYXRpbmcgPSBkYXRhLndvcmtvdXRSYXRpbmc7XG4gICAgICB0aGlzLmV4ZXJjaXNlc0NvbXBsZXRlZCA9IGRhdGEuZXhlcmNpc2VzQ29tcGxldGVkLm1hcCgoZXg6IGFueSkgPT4gRXhlcmNpc2VMb2cuZnJvbUZpcmViYXNlKGV4KSk7XG4gICAgICB0aGlzLmFpSW5zaWdodCA9IGRhdGEuYWlJbnNpZ2h0O1xuICAgICAgdGhpcy5yZWNvbW1lbmRhdGlvbnMgPSBkYXRhLnJlY29tbWVuZGF0aW9ucztcbiAgICAgIHRoaXMuZ2lmVVJMcyA9IGRhdGEuZ2lmVVJMcztcbiAgICAgIHRoaXMucmVjb21tZW5kZWRXb3JrID0gZGF0YS5yZWNvbW1lbmRlZFdvcms7XG4gICAgICB0aGlzLmlzQ29tcGxldGVkID0gZGF0YS5pc0NvbXBsZXRlZDtcbiAgICAgIHRoaXMuY3JlYXRlZEF0ID0gZGF0YS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShkYXRhLmNyZWF0ZWRBdCkgOiBuZXcgRGF0ZSgpO1xuICAgICAgdGhpcy51cGRhdGVkQXQgPSBkYXRhLnVwZGF0ZWRBdCA/IG5ldyBEYXRlKGRhdGEudXBkYXRlZEF0KSA6IG5ldyBEYXRlKCk7XG4gICAgICB0aGlzLmNvbXBsZXRlZEF0ID0gZGF0YS5jb21wbGV0ZWRBdCA/IG5ldyBEYXRlKGRhdGEuY29tcGxldGVkQXQpIDogbnVsbDtcbiAgICAgIHRoaXMuZHVyYXRpb24gPSBkYXRhLmR1cmF0aW9uO1xuICAgIH1cbiAgXG4gICAgc3RhdGljIGZyb21GaXJlYmFzZShkYXRhOiBhbnkpOiBXb3Jrb3V0U3VtbWFyeSB7XG4gICAgICByZXR1cm4gbmV3IFdvcmtvdXRTdW1tYXJ5KHtcbiAgICAgICAgaWQ6IGRhdGEuaWQgfHwgJycsXG4gICAgICAgIHdvcmtvdXRJZDogZGF0YS53b3Jrb3V0SWQgfHwgJycsXG4gICAgICAgIGV4ZXJjaXNlczogZGF0YS5leGVyY2lzZXMgfHwgW10sXG4gICAgICAgIGJvZHlQYXJ0czogZGF0YS5ib2R5UGFydHMgfHwgW10sXG4gICAgICAgIHNlY29uZGFyeUJvZHlQYXJ0czogZGF0YS5zZWNvbmRhcnlCb2R5UGFydHMgfHwgW10sXG4gICAgICAgIHdvcmtvdXRUaXRsZTogZGF0YS53b3Jrb3V0VGl0bGUgfHwgJycsXG4gICAgICAgIGNhbG9yaWVzQnVybmVkOiBkYXRhLmNhbG9yaWVzQnVybmVkIHx8IDAsXG4gICAgICAgIHdvcmtvdXRSYXRpbmc6IGRhdGEud29ya291dFJhdGluZyxcbiAgICAgICAgZXhlcmNpc2VzQ29tcGxldGVkOiBkYXRhLmV4ZXJjaXNlc0NvbXBsZXRlZCB8fCBbXSxcbiAgICAgICAgYWlJbnNpZ2h0OiBkYXRhLmFpSW5zaWdodCB8fCAnJyxcbiAgICAgICAgcmVjb21tZW5kYXRpb25zOiBkYXRhLnJlY29tbWVuZGF0aW9ucyB8fCBbXSxcbiAgICAgICAgZ2lmVVJMczogZGF0YS5naWZVUkxzIHx8IFtdLFxuICAgICAgICByZWNvbW1lbmRlZFdvcms6IGRhdGEucmVjb21tZW5kZWRXb3JrLFxuICAgICAgICBpc0NvbXBsZXRlZDogZGF0YS5pc0NvbXBsZXRlZCB8fCBmYWxzZSxcbiAgICAgICAgY3JlYXRlZEF0OiBkYXRhLmNyZWF0ZWRBdCxcbiAgICAgICAgdXBkYXRlZEF0OiBkYXRhLnVwZGF0ZWRBdCxcbiAgICAgICAgY29tcGxldGVkQXQ6IGRhdGEuY29tcGxldGVkQXQsXG4gICAgICAgIGR1cmF0aW9uOiBkYXRhLmR1cmF0aW9uIHx8ICcnXG4gICAgICB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgV29ya291dFNlcnZpY2Uge1xuICBmZXRjaEN1cnJlbnRXb3Jrb3V0OiAoKSA9PiBQcm9taXNlPFdvcmtvdXQgfCBudWxsPjtcbiAgZ2VuZXJhdGVXb3Jrb3V0OiAoYm9keVBhcnRzOiBCb2R5Wm9uZVtdKSA9PiBQcm9taXNlPFdvcmtvdXQ+O1xuICBzdGFydFdvcmtvdXQ6ICh3b3Jrb3V0SWQ6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgY2FuY2VsV29ya291dDogKHdvcmtvdXRJZDogc3RyaW5nKSA9PiBQcm9taXNlPHZvaWQ+O1xuICBjb21wbGV0ZVdvcmtvdXQ6ICh3b3Jrb3V0SWQ6IHN0cmluZywgcmF0aW5nPzogV29ya291dFJhdGluZykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgZmV0Y2hDdXJyZW50V29ya291dFNlc3Npb246ICgpID0+IFByb21pc2U8e1xuICAgIHdvcmtvdXQ6IFdvcmtvdXQgfCBudWxsO1xuICAgIGxvZ3M6IEV4ZXJjaXNlTG9nW10gfCBudWxsO1xuICB9PjtcbiAgc3dhcFdvcmtvdXQ6IChvbGRXb3Jrb3V0SWQ6IHN0cmluZywgbmV3Qm9keVBhcnRzOiBCb2R5Wm9uZVtdKSA9PiBQcm9taXNlPFdvcmtvdXQ+O1xuICB1cGRhdGVXb3Jrb3V0U3RhdHVzOiAod29ya291dElkOiBzdHJpbmcsIHN0YXR1czogV29ya291dFN0YXR1cykgPT4gUHJvbWlzZTx2b2lkPjtcbiAgbG9nRXhlcmNpc2U6ICh3b3Jrb3V0SWQ6IHN0cmluZywgZXhlcmNpc2VMb2c6IEV4ZXJjaXNlTG9nKSA9PiBQcm9taXNlPHZvaWQ+O1xuICBnZXRXb3Jrb3V0TG9nczogKHdvcmtvdXRJZDogc3RyaW5nKSA9PiBQcm9taXNlPEV4ZXJjaXNlTG9nW10+O1xuICBjYW5jZWxDdXJyZW50V29ya291dDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgZ2V0Q3VycmVudFdvcmtvdXRTdGF0dXM6ICgpID0+IFByb21pc2U8V29ya291dFN0YXR1cz47XG4gIHNhdmVXb3Jrb3V0OiAod29ya291dDogV29ya291dCkgPT4gUHJvbWlzZTx2b2lkPjtcbn1cblxuLy8gU3dlYXRsaXN0SWRlbnRpZmllcnMgdHlwZVxuZXhwb3J0IGludGVyZmFjZSBTd2VhdGxpc3RJZGVudGlmaWVycyB7XG4gIGlkOiBzdHJpbmc7XG4gIHN3ZWF0bGlzdEF1dGhvcklkOiBzdHJpbmc7XG4gIHN3ZWF0bGlzdE5hbWU6IHN0cmluZztcbiAgb3JkZXI6IG51bWJlcjtcbn1cblxuLy8gRW51bSBmb3Igc3dlYXRsaXN0IHR5cGUgbWF0Y2hpbmcgU3dpZnQgaW1wbGVtZW50YXRpb25cbmV4cG9ydCBlbnVtIFN3ZWF0bGlzdFR5cGUge1xuICBUb2dldGhlciA9ICd0b2dldGhlcicsXG4gIFNvbG8gPSAnc29sbycsXG4gIExvY2tlZCA9ICdsb2NrZWQnXG59XG5cbmV4cG9ydCBjbGFzcyBSZWZlcnJhbENoYWluIHtcbiAgb3JpZ2luYWxIb3N0SWQ6IHN0cmluZztcbiAgc2hhcmVkQnk6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICB0aGlzLm9yaWdpbmFsSG9zdElkID0gZGF0YS5vcmlnaW5hbEhvc3RJZCB8fCAnJztcbiAgICB0aGlzLnNoYXJlZEJ5ID0gZGF0YS5zaGFyZWRCeSB8fCAnJztcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBvcmlnaW5hbEhvc3RJZDogdGhpcy5vcmlnaW5hbEhvc3RJZCxcbiAgICAgIHNoYXJlZEJ5OiB0aGlzLnNoYXJlZEJ5LFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZnJvbUZpcmVzdG9yZShkYXRhOiBhbnkpOiBSZWZlcnJhbENoYWluIHtcbiAgICByZXR1cm4gbmV3IFJlZmVycmFsQ2hhaW4oZGF0YSk7XG4gIH1cbn1cblxuXG4vLyBNYWluIFN3ZWF0bGlzdENvbGxlY3Rpb24gaW50ZXJmYWNlXG5leHBvcnQgY2xhc3MgU3dlYXRsaXN0Q29sbGVjdGlvbiB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHN1YnRpdGxlOiBzdHJpbmc7XG4gIGNoYWxsZW5nZT86IENoYWxsZW5nZTtcbiAgcHVibGlzaGVkU3RhdHVzPzogYm9vbGVhbjtcbiAgcGFydGljaXBhbnRzOiBzdHJpbmdbXTtcbiAgc3dlYXRsaXN0SWRzOiBTd2VhdGxpc3RJZGVudGlmaWVyc1tdO1xuICBvd25lcklkOiBzdHJpbmdbXTsgLy8gVXBkYXRlZCB0byBiZSBhbiBhcnJheVxuICBwcml2YWN5OiBTd2VhdGxpc3RUeXBlO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHVwZGF0ZWRBdDogRGF0ZTtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICB0aGlzLmlkID0gZGF0YS5pZDtcbiAgICB0aGlzLnRpdGxlID0gZGF0YS50aXRsZSB8fCAnJztcbiAgICB0aGlzLnN1YnRpdGxlID0gZGF0YS5zdWJ0aXRsZSB8fCAnJztcbiAgICB0aGlzLmNoYWxsZW5nZSA9IGRhdGEuY2hhbGxlbmdlID8gbmV3IENoYWxsZW5nZShkYXRhLmNoYWxsZW5nZSkgOiB1bmRlZmluZWQ7XG4gICAgdGhpcy5zd2VhdGxpc3RJZHMgPSAoZGF0YS5zd2VhdGxpc3RJZHMgfHwgW10pLm1hcCgoaXRlbTogYW55KSA9PiAoe1xuICAgICAgaWQ6IGl0ZW0uaWQgfHwgJycsXG4gICAgICBzd2VhdGxpc3RBdXRob3JJZDogaXRlbS5zd2VhdGxpc3RBdXRob3JJZCB8fCAnJyxcbiAgICAgIHN3ZWF0bGlzdE5hbWU6IGl0ZW0uc3dlYXRsaXN0TmFtZSB8fCAnJyxcbiAgICAgIG9yZGVyOiBpdGVtLm9yZGVyIHx8IDAsXG4gICAgfSkpO1xuICAgIC8vIElmIG93bmVySWQgaXMgbm90IGFuIGFycmF5LCB3cmFwIGl0IGluIGFuIGFycmF5LlxuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEub3duZXJJZCkpIHtcbiAgICAgIHRoaXMub3duZXJJZCA9IGRhdGEub3duZXJJZDtcbiAgICB9IGVsc2UgaWYgKGRhdGEub3duZXJJZCkge1xuICAgICAgdGhpcy5vd25lcklkID0gW2RhdGEub3duZXJJZF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub3duZXJJZCA9IFtdO1xuICAgIH1cbiAgICB0aGlzLnByaXZhY3kgPSB0aGlzLmNoYWxsZW5nZSA/IFN3ZWF0bGlzdFR5cGUuVG9nZXRoZXIgOiBTd2VhdGxpc3RUeXBlLlNvbG87XG4gICAgdGhpcy5wYXJ0aWNpcGFudHMgPSAoZGF0YS5wYXJ0aWNpcGFudHMgfHwgW10pLm1hcCgocGFydGljaXBhbnQ6IGFueSkgPT4gcGFydGljaXBhbnQgfHwgJycpO1xuICAgIHRoaXMuY3JlYXRlZEF0ID0gY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcChkYXRhLmNyZWF0ZWRBdCk7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEudXBkYXRlZEF0KTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tRmlyZXN0b3JlKGRhdGE6IGFueSk6IFN3ZWF0bGlzdENvbGxlY3Rpb24ge1xuICAgIHJldHVybiBuZXcgU3dlYXRsaXN0Q29sbGVjdGlvbihkYXRhKTtcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogdGhpcy5pZCxcbiAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgc3VidGl0bGU6IHRoaXMuc3VidGl0bGUsXG4gICAgICBjaGFsbGVuZ2U6IHRoaXMuY2hhbGxlbmdlID8gdGhpcy5jaGFsbGVuZ2UudG9EaWN0aW9uYXJ5KCkgOiBudWxsLFxuICAgICAgc3dlYXRsaXN0SWRzOiB0aGlzLnN3ZWF0bGlzdElkcy5tYXAoaXRlbSA9PiAoe1xuICAgICAgICBpZDogaXRlbS5pZCxcbiAgICAgICAgc3dlYXRsaXN0QXV0aG9ySWQ6IGl0ZW0uc3dlYXRsaXN0QXV0aG9ySWQsXG4gICAgICAgIG9yZGVyOiBpdGVtLm9yZGVyXG4gICAgICB9KSksXG4gICAgICBvd25lcklkOiB0aGlzLm93bmVySWQsIC8vIFVwZGF0ZWQgdG8gYmUgYW4gYXJyYXlcbiAgICAgIHByaXZhY3k6IHRoaXMucHJpdmFjeSxcbiAgICAgIGNyZWF0ZWRBdDogdGhpcy5jcmVhdGVkQXQsXG4gICAgICB1cGRhdGVkQXQ6IHRoaXMudXBkYXRlZEF0XG4gICAgfTtcbiAgfVxuXG4gIHRvUkVTVERpY3Rpb25hcnkoKTogYW55IHtcbiAgICByZXR1cm4ge1xuICAgICAgZmllbGRzOiB7XG4gICAgICAgIGlkOiB7IHN0cmluZ1ZhbHVlOiB0aGlzLmlkIH0sXG4gICAgICAgIHRpdGxlOiB7IHN0cmluZ1ZhbHVlOiB0aGlzLnRpdGxlIH0sXG4gICAgICAgIHN1YnRpdGxlOiB7IHN0cmluZ1ZhbHVlOiB0aGlzLnN1YnRpdGxlIH0sXG4gICAgICAgIC8vIG93bmVySWQgYXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlc1xuICAgICAgICBvd25lcklkOiB7XG4gICAgICAgICAgYXJyYXlWYWx1ZToge1xuICAgICAgICAgICAgdmFsdWVzOiB0aGlzLm93bmVySWQubWFwKG93bmVyID0+ICh7IHN0cmluZ1ZhbHVlOiBvd25lciB9KSlcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN3ZWF0bGlzdElkczoge1xuICAgICAgICAgIGFycmF5VmFsdWU6IHtcbiAgICAgICAgICAgIHZhbHVlczogdGhpcy5zd2VhdGxpc3RJZHMubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICAgICAgbWFwVmFsdWU6IHtcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICAgICAgICAgIGlkOiB7IHN0cmluZ1ZhbHVlOiBpdGVtLmlkIH0sXG4gICAgICAgICAgICAgICAgICBzd2VhdGxpc3RBdXRob3JJZDogeyBzdHJpbmdWYWx1ZTogaXRlbS5zd2VhdGxpc3RBdXRob3JJZCB9LFxuICAgICAgICAgICAgICAgICAgb3JkZXI6IHsgaW50ZWdlclZhbHVlOiBpdGVtLm9yZGVyIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgY3JlYXRlZEF0OiB7IGRvdWJsZVZhbHVlOiB0aGlzLmNyZWF0ZWRBdC5nZXRUaW1lKCkgfSxcbiAgICAgICAgdXBkYXRlZEF0OiB7IGRvdWJsZVZhbHVlOiB0aGlzLnVwZGF0ZWRBdC5nZXRUaW1lKCkgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBpc1B1Ymxpc2hlZCgpOiBib29sZWFuIHtcbiAgICBpZiAoIXRoaXMuY2hhbGxlbmdlKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMuY2hhbGxlbmdlLnN0YXR1cyA9PT0gQ2hhbGxlbmdlU3RhdHVzLlB1Ymxpc2hlZDtcbiAgfVxufVxuXG5jbGFzcyBQcm9maWxlSW1hZ2Uge1xuICBwcm9maWxlSW1hZ2VVUkw6IHN0cmluZztcbiAgdGh1bWJuYWlsVVJMPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IGFueSkge1xuICAgIHRoaXMucHJvZmlsZUltYWdlVVJMID0gZGF0YS5wcm9maWxlSW1hZ2VVUkwgfHwgJyc7XG4gICAgdGhpcy50aHVtYm5haWxVUkwgPSBkYXRhLnRodW1ibmFpbFVSTCB8fCAnJztcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBwcm9maWxlSW1hZ2VVUkw6IHRoaXMucHJvZmlsZUltYWdlVVJMLFxuICAgICAgdGh1bWJuYWlsVVJMOiB0aGlzLnRodW1ibmFpbFVSTCB8fCBudWxsLFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZnJvbUZpcmVzdG9yZShkYXRhOiBhbnkpOiBQcm9maWxlSW1hZ2Uge1xuICAgIHJldHVybiBuZXcgUHJvZmlsZUltYWdlKGRhdGEpO1xuICB9XG59XG5cbmNsYXNzIFVzZXJMb2NhdGlvbiB7XG4gIGxhdGl0dWRlOiBudW1iZXI7XG4gIGxvbmdpdHVkZTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IGFueSkge1xuICAgIHRoaXMubGF0aXR1ZGUgPSBkYXRhLmxhdGl0dWRlIHx8IDA7XG4gICAgdGhpcy5sb25naXR1ZGUgPSBkYXRhLmxvbmdpdHVkZSB8fCAwO1xuICB9XG5cbiAgdG9EaWN0aW9uYXJ5KCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxhdGl0dWRlOiB0aGlzLmxhdGl0dWRlLFxuICAgICAgbG9uZ2l0dWRlOiB0aGlzLmxvbmdpdHVkZSxcbiAgICB9O1xuICB9XG5cbiAgc3RhdGljIGZyb21GaXJlc3RvcmUoZGF0YTogYW55KTogVXNlckxvY2F0aW9uIHtcbiAgICByZXR1cm4gbmV3IFVzZXJMb2NhdGlvbihkYXRhKTtcbiAgfVxufVxuXG5jbGFzcyBQdWxzZVBvaW50cyB7XG4gIGJhc2VDb21wbGV0aW9uOiBudW1iZXI7XG4gIGZpcnN0Q29tcGxldGlvbjogbnVtYmVyO1xuICBzdHJlYWtCb251czogbnVtYmVyO1xuICBjaGVja0luQm9udXM6IG51bWJlcjtcbiAgZWZmb3J0UmF0aW5nOiBudW1iZXI7XG4gIGNoYXRQYXJ0aWNpcGF0aW9uOiBudW1iZXI7XG4gIGxvY2F0aW9uQ2hlY2tpbjogbnVtYmVyO1xuICBjb250ZW50RW5nYWdlbWVudDogbnVtYmVyO1xuICBlbmNvdXJhZ2VtZW50U2VudDogbnVtYmVyO1xuICBlbmNvdXJhZ2VtZW50UmVjZWl2ZWQ6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICB0aGlzLmJhc2VDb21wbGV0aW9uID0gZGF0YS5iYXNlQ29tcGxldGlvbiA/PyAwO1xuICAgIHRoaXMuZmlyc3RDb21wbGV0aW9uID0gZGF0YS5maXJzdENvbXBsZXRpb24gPz8gMDtcbiAgICB0aGlzLnN0cmVha0JvbnVzID0gZGF0YS5zdHJlYWtCb251cyA/PyAwO1xuICAgIHRoaXMuY2hlY2tJbkJvbnVzID0gZGF0YS5jaGVja0luQm9udXMgPz8gMDtcbiAgICB0aGlzLmVmZm9ydFJhdGluZyA9IGRhdGEuZWZmb3J0UmF0aW5nID8/IDA7XG4gICAgdGhpcy5jaGF0UGFydGljaXBhdGlvbiA9IGRhdGEuY2hhdFBhcnRpY2lwYXRpb24gPz8gMDtcbiAgICB0aGlzLmxvY2F0aW9uQ2hlY2tpbiA9IGRhdGEubG9jYXRpb25DaGVja2luID8/IDA7XG4gICAgdGhpcy5jb250ZW50RW5nYWdlbWVudCA9IGRhdGEuY29udGVudEVuZ2FnZW1lbnQgPz8gMDtcbiAgICB0aGlzLmVuY291cmFnZW1lbnRTZW50ID0gZGF0YS5lbmNvdXJhZ2VtZW50U2VudCA/PyAwO1xuICAgIHRoaXMuZW5jb3VyYWdlbWVudFJlY2VpdmVkID0gZGF0YS5lbmNvdXJhZ2VtZW50UmVjZWl2ZWQgPz8gMDtcbiAgfVxuXG4gIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBiYXNlQ29tcGxldGlvbjogdGhpcy5iYXNlQ29tcGxldGlvbixcbiAgICAgIGZpcnN0Q29tcGxldGlvbjogdGhpcy5maXJzdENvbXBsZXRpb24sXG4gICAgICBzdHJlYWtCb251czogdGhpcy5zdHJlYWtCb251cyxcbiAgICAgIGNoZWNrSW5Cb251czogdGhpcy5jaGVja0luQm9udXMsXG4gICAgICBlZmZvcnRSYXRpbmc6IHRoaXMuZWZmb3J0UmF0aW5nLFxuICAgICAgY2hhdFBhcnRpY2lwYXRpb246IHRoaXMuY2hhdFBhcnRpY2lwYXRpb24sXG4gICAgICBsb2NhdGlvbkNoZWNraW46IHRoaXMubG9jYXRpb25DaGVja2luLFxuICAgICAgY29udGVudEVuZ2FnZW1lbnQ6IHRoaXMuY29udGVudEVuZ2FnZW1lbnQsXG4gICAgICBlbmNvdXJhZ2VtZW50U2VudDogdGhpcy5lbmNvdXJhZ2VtZW50U2VudCxcbiAgICAgIGVuY291cmFnZW1lbnRSZWNlaXZlZDogdGhpcy5lbmNvdXJhZ2VtZW50UmVjZWl2ZWQsXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tRmlyZXN0b3JlKGRhdGE6IGFueSk6IFB1bHNlUG9pbnRzIHtcbiAgICByZXR1cm4gbmV3IFB1bHNlUG9pbnRzKGRhdGEpO1xuICB9XG59XG5cbi8vIFR5cGVzIGZvciB1c2VyIGluIGNoYWxsZW5nZVxuY2xhc3MgVXNlckNoYWxsZW5nZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGNoYWxsZW5nZT86IENoYWxsZW5nZTtcbiAgY2hhbGxlbmdlSWQ6IHN0cmluZztcbiAgdXNlcklkOiBzdHJpbmc7XG4gIHVzZXJuYW1lOiBzdHJpbmc7XG4gIHByb2ZpbGVJbWFnZT86IFByb2ZpbGVJbWFnZTtcbiAgcHJvZ3Jlc3M6IG51bWJlcjtcbiAgcmVmZXJyYWxDaGFpbnM6IFJlZmVycmFsQ2hhaW47XG4gIGNvbXBsZXRlZFdvcmtvdXRzOiB7IGlkOiBzdHJpbmc7IHdvcmtvdXRJZDogc3RyaW5nOyBjb21wbGV0ZWRBdDogbnVtYmVyIH1bXTtcbiAgaXNDb21wbGV0ZWQ6IGJvb2xlYW47XG4gIGxvY2F0aW9uPzogVXNlckxvY2F0aW9uO1xuICBjaXR5OiBzdHJpbmc7XG4gIGNvdW50cnk/OiBzdHJpbmc7XG4gIHRpbWV6b25lPzogc3RyaW5nO1xuICBqb2luRGF0ZTogRGF0ZTtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG4gIHB1bHNlUG9pbnRzOiBQdWxzZVBvaW50cztcbiAgY3VycmVudFN0cmVhazogbnVtYmVyO1xuICBlbmNvdXJhZ2VkVXNlcnM6IHN0cmluZ1tdO1xuICBlbmNvdXJhZ2VkQnlVc2Vyczogc3RyaW5nW107XG4gIGNoZWNrSW5zOiBEYXRlW107XG5cbiAgY29uc3RydWN0b3IoaWQ6IHN0cmluZywgZGF0YTogYW55KSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuY2hhbGxlbmdlID0gZGF0YS5jaGFsbGVuZ2UgPyBuZXcgQ2hhbGxlbmdlKGRhdGEuY2hhbGxlbmdlKSA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLmNoYWxsZW5nZUlkID0gZGF0YS5jaGFsbGVuZ2VJZCB8fCAnJztcbiAgICB0aGlzLnVzZXJJZCA9IGRhdGEudXNlcklkIHx8ICcnO1xuICAgIHRoaXMudXNlcm5hbWUgPSBkYXRhLnVzZXJuYW1lIHx8ICcnO1xuICAgIHRoaXMucHJvZmlsZUltYWdlID0gZGF0YS5wcm9maWxlSW1hZ2UgPyBuZXcgUHJvZmlsZUltYWdlKGRhdGEucHJvZmlsZUltYWdlKSA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLnByb2dyZXNzID0gZGF0YS5wcm9ncmVzcyA/PyAwO1xuICAgIHRoaXMucmVmZXJyYWxDaGFpbnMgPSBkYXRhLnJlZmVycmFsQ2hhaW5zID8gbmV3IFJlZmVycmFsQ2hhaW4oZGF0YS5yZWZlcnJhbENoYWlucykgOiBuZXcgUmVmZXJyYWxDaGFpbih7IG9yaWdpbmFsSG9zdElkOiAnJywgc2hhcmVkQnk6ICcnIH0pO1xuICAgIHRoaXMuY29tcGxldGVkV29ya291dHMgPSBBcnJheS5pc0FycmF5KGRhdGEuY29tcGxldGVkV29ya291dHMpXG4gICAgICA/IGRhdGEuY29tcGxldGVkV29ya291dHMubWFwKChjdzogYW55KSA9PiAoe1xuICAgICAgICAgIGlkOiBjdy5pZCB8fCAnJyxcbiAgICAgICAgICB3b3Jrb3V0SWQ6IGN3LndvcmtvdXRJZCB8fCAnJyxcbiAgICAgICAgICBjb21wbGV0ZWRBdDogY3cuY29tcGxldGVkQXQgfHwgMCxcbiAgICAgICAgfSkpXG4gICAgICA6IFtdO1xuICAgIHRoaXMuaXNDb21wbGV0ZWQgPSBkYXRhLmlzQ29tcGxldGVkID8/IGZhbHNlO1xuICAgIHRoaXMubG9jYXRpb24gPSBkYXRhLmxvY2F0aW9uID8gbmV3IFVzZXJMb2NhdGlvbihkYXRhLmxvY2F0aW9uKSA6IHVuZGVmaW5lZDtcbiAgICB0aGlzLmNpdHkgPSBkYXRhLmNpdHkgfHwgJyc7XG4gICAgdGhpcy5jb3VudHJ5ID0gZGF0YS5jb3VudHJ5IHx8ICcnO1xuICAgIHRoaXMudGltZXpvbmUgPSBkYXRhLnRpbWV6b25lIHx8ICcnO1xuICAgIHRoaXMuam9pbkRhdGUgPSBkYXRhLmpvaW5EYXRlID8gbmV3IERhdGUoZGF0YS5qb2luRGF0ZSkgOiBuZXcgRGF0ZSgpO1xuICAgIHRoaXMuY3JlYXRlZEF0ID0gZGF0YS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShkYXRhLmNyZWF0ZWRBdCkgOiBuZXcgRGF0ZSgpO1xuICAgIHRoaXMudXBkYXRlZEF0ID0gZGF0YS51cGRhdGVkQXQgPyBuZXcgRGF0ZShkYXRhLnVwZGF0ZWRBdCkgOiBuZXcgRGF0ZSgpO1xuICAgIHRoaXMucHVsc2VQb2ludHMgPSBkYXRhLnB1bHNlUG9pbnRzID8gbmV3IFB1bHNlUG9pbnRzKGRhdGEucHVsc2VQb2ludHMpIDogbmV3IFB1bHNlUG9pbnRzKHt9KTtcbiAgICB0aGlzLmN1cnJlbnRTdHJlYWsgPSBkYXRhLmN1cnJlbnRTdHJlYWsgPz8gMDtcbiAgICB0aGlzLmVuY291cmFnZWRVc2VycyA9IEFycmF5LmlzQXJyYXkoZGF0YS5lbmNvdXJhZ2VkVXNlcnMpID8gZGF0YS5lbmNvdXJhZ2VkVXNlcnMgOiBbXTtcbiAgICB0aGlzLmVuY291cmFnZWRCeVVzZXJzID0gQXJyYXkuaXNBcnJheShkYXRhLmVuY291cmFnZWRCeVVzZXJzKSA/IGRhdGEuZW5jb3VyYWdlZEJ5VXNlcnMgOiBbXTtcbiAgICB0aGlzLmNoZWNrSW5zID0gQXJyYXkuaXNBcnJheShkYXRhLmNoZWNrSW5zKSA/IGRhdGEuY2hlY2tJbnMubWFwKChkOiBhbnkpID0+IG5ldyBEYXRlKGQpKSA6IFtdO1xuICB9XG5cbiAgLy8gT3B0aW9uYWxseSwgeW91IGNhbiBhZGQgYSBzdGF0aWMgbWV0aG9kIHRvIGNyZWF0ZSBhbiBpbnN0YW5jZSBmcm9tIEZpcmVzdG9yZSBkYXRhXG4gIHN0YXRpYyBmcm9tRmlyZXN0b3JlKGlkOiBzdHJpbmcsIGRhdGE6IGFueSk6IFVzZXJDaGFsbGVuZ2Uge1xuICAgIHJldHVybiBuZXcgVXNlckNoYWxsZW5nZShpZCwgZGF0YSk7XG4gIH1cblxuICAvLyBPcHRpb25hbGx5LCBhZGQgYSBtZXRob2QgdG8gY29udmVydCB0byBhIHBsYWluIGRpY3Rpb25hcnkgKGZvciBzYXZpbmcgdG8gRmlyZXN0b3JlKVxuICB0b0RpY3Rpb25hcnkoKTogYW55IHtcbiAgICByZXR1cm4ge1xuICAgICAgY2hhbGxlbmdlOiB0aGlzLmNoYWxsZW5nZSA/IHRoaXMuY2hhbGxlbmdlLnRvRGljdGlvbmFyeSgpIDogbnVsbCxcbiAgICAgIGNoYWxsZW5nZUlkOiB0aGlzLmNoYWxsZW5nZUlkLFxuICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZCxcbiAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLFxuICAgICAgcHJvZmlsZUltYWdlOiB0aGlzLnByb2ZpbGVJbWFnZSA/IHRoaXMucHJvZmlsZUltYWdlLnRvRGljdGlvbmFyeSgpIDogbnVsbCxcbiAgICAgIHByb2dyZXNzOiB0aGlzLnByb2dyZXNzLFxuICAgICAgcmVmZXJyYWxDaGFpbnM6IHRoaXMucmVmZXJyYWxDaGFpbnMgPyB0aGlzLnJlZmVycmFsQ2hhaW5zLnRvRGljdGlvbmFyeSgpIDoge30sXG4gICAgICBjb21wbGV0ZWRXb3Jrb3V0czogdGhpcy5jb21wbGV0ZWRXb3Jrb3V0cyxcbiAgICAgIGlzQ29tcGxldGVkOiB0aGlzLmlzQ29tcGxldGVkLFxuICAgICAgbG9jYXRpb246IHRoaXMubG9jYXRpb24gPyB0aGlzLmxvY2F0aW9uLnRvRGljdGlvbmFyeSgpIDogbnVsbCxcbiAgICAgIGNpdHk6IHRoaXMuY2l0eSxcbiAgICAgIGNvdW50cnk6IHRoaXMuY291bnRyeSxcbiAgICAgIHRpbWV6b25lOiB0aGlzLnRpbWV6b25lLFxuICAgICAgam9pbkRhdGU6IHRoaXMuam9pbkRhdGUuZ2V0VGltZSgpLFxuICAgICAgY3JlYXRlZEF0OiB0aGlzLmNyZWF0ZWRBdC5nZXRUaW1lKCksXG4gICAgICB1cGRhdGVkQXQ6IHRoaXMudXBkYXRlZEF0LmdldFRpbWUoKSxcbiAgICAgIHB1bHNlUG9pbnRzOiB0aGlzLnB1bHNlUG9pbnRzID8gdGhpcy5wdWxzZVBvaW50cy50b0RpY3Rpb25hcnkoKSA6IHt9LFxuICAgICAgY3VycmVudFN0cmVhazogdGhpcy5jdXJyZW50U3RyZWFrLFxuICAgICAgZW5jb3VyYWdlZFVzZXJzOiB0aGlzLmVuY291cmFnZWRVc2VycyxcbiAgICAgIGVuY291cmFnZWRCeVVzZXJzOiB0aGlzLmVuY291cmFnZWRCeVVzZXJzLFxuICAgICAgY2hlY2tJbnM6IHRoaXMuY2hlY2tJbnMubWFwKGRhdGUgPT4gZGF0ZS5nZXRUaW1lKCkpLFxuICAgIH07XG4gIH1cbn1cblxuLy8gQ2hhbGxlbmdlIHN0YXR1cyBlbnVtXG5lbnVtIENoYWxsZW5nZVN0YXR1cyB7XG4gIERyYWZ0ID0gJ2RyYWZ0JyxcbiAgUHVibGlzaGVkID0gJ3B1Ymxpc2hlZCcsXG4gIENvbXBsZXRlZCA9ICdjb21wbGV0ZWQnLFxuICBDYW5jZWxsZWQgPSAnY2FuY2VsbGVkJ1xufVxuZXhwb3J0IGludGVyZmFjZSBJbnRyb1ZpZGVvIHtcbiAgaWQ6IHN0cmluZztcbiAgdXNlcklkOiBzdHJpbmc7XG4gIHZpZGVvVXJsOiBzdHJpbmc7XG4gIHRvRGljdGlvbmFyeSgpOiBhbnk7XG59XG5cbmV4cG9ydCBjbGFzcyBJbnRyb1ZpZGVvIGltcGxlbWVudHMgSW50cm9WaWRlbyB7XG4gIGlkOiBzdHJpbmc7XG4gIHVzZXJJZDogc3RyaW5nO1xuICB2aWRlb1VybDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGRhdGE6IHsgaWQ6IHN0cmluZzsgdXNlcklkOiBzdHJpbmc7IHZpZGVvVXJsOiBzdHJpbmc7IH0pIHtcbiAgICB0aGlzLmlkID0gZGF0YS5pZDtcbiAgICB0aGlzLnVzZXJJZCA9IGRhdGEudXNlcklkO1xuICAgIHRoaXMudmlkZW9VcmwgPSBkYXRhLnZpZGVvVXJsO1xuICB9XG5cbiAgdG9EaWN0aW9uYXJ5KCk6IGFueSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZCxcbiAgICAgIHZpZGVvVXJsOiB0aGlzLnZpZGVvVXJsXG4gICAgfTtcbiAgfVxufVxuXG5jbGFzcyBDaGFsbGVuZ2Uge1xuICBpZDogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBzdWJ0aXRsZTogc3RyaW5nO1xuICBwYXJ0aWNpcGFudHM6IFVzZXJDaGFsbGVuZ2VbXTtcbiAgZHVyYXRpb25JbkRheXM6IG51bWJlcjtcbiAgc3RhdHVzOiBDaGFsbGVuZ2VTdGF0dXM7XG4gIHN0YXJ0RGF0ZTogRGF0ZTtcbiAgZW5kRGF0ZTogRGF0ZTtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG4gIGludHJvVmlkZW9zOiBJbnRyb1ZpZGVvW107XG5cbiAgY29uc3RydWN0b3IoZGF0YToge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBzdWJ0aXRsZTogc3RyaW5nO1xuICAgIHBhcnRpY2lwYW50czogVXNlckNoYWxsZW5nZVtdO1xuICAgIHN0YXR1czogQ2hhbGxlbmdlU3RhdHVzO1xuICAgIHN0YXJ0RGF0ZTogRGF0ZTtcbiAgICBlbmREYXRlOiBEYXRlO1xuICAgIGNyZWF0ZWRBdDogRGF0ZTtcbiAgICB1cGRhdGVkQXQ6IERhdGU7XG4gICAgaW50cm9WaWRlb3M/OiBJbnRyb1ZpZGVvW107XG4gICAgaW50cm9WaWRlb1VSTD86IHN0cmluZzsgLy8gQWRkIHRoaXMgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICB9KSB7XG4gICAgdGhpcy5pZCA9IGRhdGEuaWQ7XG4gICAgdGhpcy50aXRsZSA9IGRhdGEudGl0bGU7XG4gICAgdGhpcy5zdWJ0aXRsZSA9IGRhdGEuc3VidGl0bGU7XG4gICAgdGhpcy5wYXJ0aWNpcGFudHMgPSBkYXRhLnBhcnRpY2lwYW50cztcbiAgICB0aGlzLnN0YXR1cyA9IGRhdGEuc3RhdHVzO1xuICAgIHRoaXMuc3RhcnREYXRlID0gY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcChkYXRhLnN0YXJ0RGF0ZSk7XG4gICAgdGhpcy5lbmREYXRlID0gY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcChkYXRhLmVuZERhdGUpO1xuICAgIHRoaXMuY3JlYXRlZEF0ID0gY29udmVydEZpcmVzdG9yZVRpbWVzdGFtcChkYXRhLmNyZWF0ZWRBdCk7XG4gICAgdGhpcy51cGRhdGVkQXQgPSBjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wKGRhdGEudXBkYXRlZEF0KTtcbiAgIFxuICAgIC8vIEhhbmRsZSBib3RoIG9sZCBhbmQgbmV3IGZvcm1hdFxuICAgIGlmIChkYXRhLmludHJvVmlkZW9zKSB7XG4gICAgICB0aGlzLmludHJvVmlkZW9zID0gZGF0YS5pbnRyb1ZpZGVvcy5tYXAodmlkZW8gPT4gbmV3IEludHJvVmlkZW8odmlkZW8pKTtcbiAgICB9IGVsc2UgaWYgKGRhdGEuaW50cm9WaWRlb1VSTCkge1xuICAgICAgdGhpcy5pbnRyb1ZpZGVvcyA9IFtuZXcgSW50cm9WaWRlbyh7XG4gICAgICAgIGlkOiAnMScsXG4gICAgICAgIHVzZXJJZDogZGF0YS5wYXJ0aWNpcGFudHNbMF0/LnVzZXJJZCB8fCAnJyxcbiAgICAgICAgdmlkZW9Vcmw6IGRhdGEuaW50cm9WaWRlb1VSTFxuICAgICAgfSldO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmludHJvVmlkZW9zID0gW107XG4gICAgfVxuICAgXG4gICAgdGhpcy5kdXJhdGlvbkluRGF5cyA9IHRoaXMuY2FsY3VsYXRlRHVyYXRpb25JbkRheXMoKTtcbiAgIH1cblxuICAgIHRvRGljdGlvbmFyeSgpOiBhbnkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICBzdWJ0aXRsZTogdGhpcy5zdWJ0aXRsZSxcbiAgICAgICAgcGFydGljaXBhbnRzOiB0aGlzLnBhcnRpY2lwYW50cy5tYXAocGFydGljaXBhbnQgPT4gKHtcbiAgICAgICAgICBpZDogcGFydGljaXBhbnQuaWQsXG4gICAgICAgICAgY2hhbGxlbmdlSWQ6IHBhcnRpY2lwYW50LmNoYWxsZW5nZUlkLFxuICAgICAgICAgIHVzZXJJZDogcGFydGljaXBhbnQudXNlcklkLFxuICAgICAgICAgIHVzZXJuYW1lOiBwYXJ0aWNpcGFudC51c2VybmFtZSxcbiAgICAgICAgICBwcm9maWxlSW1hZ2U6IHBhcnRpY2lwYW50LnByb2ZpbGVJbWFnZSxcbiAgICAgICAgICBwcm9ncmVzczogcGFydGljaXBhbnQucHJvZ3Jlc3MsXG4gICAgICAgICAgY29tcGxldGVkV29ya291dHM6IHBhcnRpY2lwYW50LmNvbXBsZXRlZFdvcmtvdXRzLFxuICAgICAgICAgIGlzQ29tcGxldGVkOiBwYXJ0aWNpcGFudC5pc0NvbXBsZXRlZCxcbiAgICAgICAgICBsb2NhdGlvbjogcGFydGljaXBhbnQubG9jYXRpb24sXG4gICAgICAgICAgY2l0eTogcGFydGljaXBhbnQuY2l0eSxcbiAgICAgICAgICBjb3VudHJ5OiBwYXJ0aWNpcGFudC5jb3VudHJ5LFxuICAgICAgICAgIHRpbWV6b25lOiBwYXJ0aWNpcGFudC50aW1lem9uZSxcbiAgICAgICAgICBqb2luRGF0ZTogcGFydGljaXBhbnQuam9pbkRhdGUsXG4gICAgICAgICAgY3JlYXRlZEF0OiBwYXJ0aWNpcGFudC5jcmVhdGVkQXQsXG4gICAgICAgICAgdXBkYXRlZEF0OiBwYXJ0aWNpcGFudC51cGRhdGVkQXQsXG4gICAgICAgICAgcHVsc2VQb2ludHM6IHBhcnRpY2lwYW50LnB1bHNlUG9pbnRzLFxuICAgICAgICAgIGN1cnJlbnRTdHJlYWs6IHBhcnRpY2lwYW50LmN1cnJlbnRTdHJlYWssXG4gICAgICAgICAgZW5jb3VyYWdlZFVzZXJzOiBwYXJ0aWNpcGFudC5lbmNvdXJhZ2VkVXNlcnMsXG4gICAgICAgICAgZW5jb3VyYWdlZEJ5VXNlcnM6IHBhcnRpY2lwYW50LmVuY291cmFnZWRCeVVzZXJzLFxuICAgICAgICAgIGNoZWNrSW5zOiBwYXJ0aWNpcGFudC5jaGVja0luc1xuICAgICAgICB9KSksXG4gICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICAgIHN0YXJ0RGF0ZTogdGhpcy5zdGFydERhdGUsXG4gICAgICAgIGVuZERhdGU6IHRoaXMuZW5kRGF0ZSxcbiAgICAgICAgY3JlYXRlZEF0OiB0aGlzLmNyZWF0ZWRBdCxcbiAgICAgICAgdXBkYXRlZEF0OiB0aGlzLnVwZGF0ZWRBdCxcbiAgICAgICAgZHVyYXRpb25JbkRheXM6IHRoaXMuZHVyYXRpb25JbkRheXMsXG4gICAgICAgIGludHJvVmlkZW9zOiB0aGlzLmludHJvVmlkZW9zLm1hcCh2aWRlbyA9PiB2aWRlby50b0RpY3Rpb25hcnkoKSlcblxuICAgICAgfTtcbiAgICB9XG5cblxuICAvKipcbiAgICogQ2FsY3VsYXRlcyB0aGUgZHVyYXRpb24gaW4gZGF5cyBiZXR3ZWVuIHRoZSBzdGFydERhdGUgYW5kIGVuZERhdGUuXG4gICAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgZGF5cyBiZXR3ZWVuIHRoZSB0d28gZGF0ZXMuXG4gICAqL1xuICBwcml2YXRlIGNhbGN1bGF0ZUR1cmF0aW9uSW5EYXlzKCk6IG51bWJlciB7XG4gICAgLy8gQ29udmVydCBkYXRlcyB0byB0aW1lc3RhbXBzIHVzaW5nIHZhbHVlT2YoKVxuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy5zdGFydERhdGU/LnZhbHVlT2YoKTtcbiAgICBjb25zdCBlbmQgPSB0aGlzLmVuZERhdGU/LnZhbHVlT2YoKTtcblxuICAgIC8vIEVuc3VyZSBjb252ZXJ0ZWQgZGF0ZXMgYXJlIHZhbGlkXG4gICAgaWYgKCFzdGFydCB8fCAhZW5kIHx8IGlzTmFOKHN0YXJ0KSB8fCBpc05hTihlbmQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RhcnREYXRlIG9yIGVuZERhdGUnKTtcbiAgICB9XG5cbiAgICAvLyBDYWxjdWxhdGUgdGhlIGRpZmZlcmVuY2UgaW4gbWlsbGlzZWNvbmRzIGFuZCBjb252ZXJ0IHRvIGRheXNcbiAgICBjb25zdCBkdXJhdGlvbkluTWlsbGlzZWNvbmRzID0gZW5kIC0gc3RhcnQ7XG4gICAgcmV0dXJuIE1hdGguY2VpbChkdXJhdGlvbkluTWlsbGlzZWNvbmRzIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKTtcbiAgfVxuXG4gIHN0YXRpYyB0b0ZpcmVzdG9yZU9iamVjdChvYmo6IGFueSk6IGFueSB7XG4gICAgICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgICB9XG4gICAgXG4gICAgICBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgfVxuICAgIFxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgICByZXR1cm4gb2JqLm1hcChpdGVtID0+IHRoaXMudG9GaXJlc3RvcmVPYmplY3QoaXRlbSkpO1xuICAgICAgfVxuICAgIFxuICAgICAgaWYgKG9iaiBpbnN0YW5jZW9mIENoYWxsZW5nZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiBvYmouaWQsXG4gICAgICAgICAgdGl0bGU6IG9iai50aXRsZSxcbiAgICAgICAgICBzdWJ0aXRsZTogb2JqLnN1YnRpdGxlLFxuICAgICAgICAgIHBhcnRpY2lwYW50czogb2JqLnBhcnRpY2lwYW50cyxcbiAgICAgICAgICBzdGF0dXM6IG9iai5zdGF0dXMsXG4gICAgICAgICAgc3RhcnREYXRlOiBvYmouc3RhcnREYXRlLFxuICAgICAgICAgIGVuZERhdGU6IG9iai5lbmREYXRlLFxuICAgICAgICAgIGNyZWF0ZWRBdDogb2JqLmNyZWF0ZWRBdCxcbiAgICAgICAgICB1cGRhdGVkQXQ6IG9iai51cGRhdGVkQXQsXG4gICAgICAgICAgaW50cm9WaWRlb3M6IG9iai5pbnRyb1ZpZGVvcy5tYXAodmlkZW8gPT4gKHtcbiAgICAgICAgICAgIGlkOiB2aWRlby5pZCxcbiAgICAgICAgICAgIHVzZXJJZDogdmlkZW8udXNlcklkLFxuICAgICAgICAgICAgdmlkZW9Vcmw6IHZpZGVvLnZpZGVvVXJsXG4gICAgICAgICAgfSkpXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgXG4gICAgICBjb25zdCBwbGFpbk9iamVjdDoge1trZXk6IHN0cmluZ106IGFueX0gPSB7fTtcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICAgIHBsYWluT2JqZWN0W2tleV0gPSB0aGlzLnRvRmlyZXN0b3JlT2JqZWN0KG9ialtrZXldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHBsYWluT2JqZWN0O1xuICAgIH1cbn1cblxuLy8gUHJvcHMgaW50ZXJmYWNlIGZvciB0aGUgY29tcG9uZW50XG5pbnRlcmZhY2UgQ2hhbGxlbmdlSW52aXRhdGlvblByb3BzIHtcbiAgY2hhbGxlbmdlOiBDaGFsbGVuZ2U7XG4gIG9uQ2xvc2U6ICgpID0+IHZvaWQ7XG4gIG9uSm9pbkNoYWxsZW5nZTogKGNoYWxsZW5nZTogYW55KSA9PiBQcm9taXNlPHZvaWQ+O1xufVxuXG5leHBvcnQgdHlwZSB7XG4gIFByb2ZpbGVJbWFnZSxcbiAgVXNlckxvY2F0aW9uLFxuICBQdWxzZVBvaW50cyxcbiAgQ2hhbGxlbmdlSW52aXRhdGlvblByb3BzXG59O1xuXG5leHBvcnQgeyBDaGFsbGVuZ2VTdGF0dXMsIENoYWxsZW5nZSwgVXNlckNoYWxsZW5nZSB9O1xuIl0sIm5hbWVzIjpbIkV4ZXJjaXNlTG9nIiwiQm9keVBhcnQiLCJjb252ZXJ0RmlyZXN0b3JlVGltZXN0YW1wIiwiV29ya291dFN0YXR1cyIsIldvcmtvdXRSYXRpbmciLCJCb2R5Wm9uZSIsImZyb21GaXJlYmFzZSIsImRhdGEiLCJyZXBzIiwid2VpZ2h0IiwibGVmdFJlcHMiLCJsZWZ0V2VpZ2h0IiwiaXNTcGxpdCIsImlzQm9keVdlaWdodCIsImR1cmF0aW9uIiwiY2Fsb3JpZXMiLCJicG0iLCJSZXBzQW5kV2VpZ2h0TG9nIiwiV29ya291dCIsImlkIiwiY29sbGVjdGlvbklkIiwicm91bmRXb3Jrb3V0SWQiLCJleGVyY2lzZXMiLCJjaGFsbGVuZ2UiLCJsb2dzIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIndvcmtvdXRSYXRpbmciLCJ1c2VBdXRob3JDb250ZW50IiwiaXNDb21wbGV0ZWQiLCJ3b3Jrb3V0U3RhdHVzIiwic3RhcnRUaW1lIiwib3JkZXIiLCJhdXRob3IiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJ6b25lIiwiZGV0ZXJtaW5lV29ya291dFpvbmUiLCJlc3RpbWF0ZWREdXJhdGlvbiIsIndhcm11cFRpbWUiLCJjb29sZG93blRpbWUiLCJ0b3RhbEV4ZXJjaXNlVGltZSIsInJlc3RUaW1lIiwiaGFzU2NyZWVuVGltZUV4ZXJjaXNlcyIsImV4ZXJjaXNlUmVmIiwiZXhlcmNpc2UiLCJjb25zb2xlIiwiZ3JvdXBDb2xsYXBzZWQiLCJjYXRlZ29yeSIsInR5cGUiLCJkZXRhaWxzIiwibG9nIiwic2NyZWVuVGltZSIsIk1hdGgiLCJmbG9vciIsImdyb3VwRW5kIiwiZXN0aW1hdGVkVG90YWxUaW1lIiwiZmluYWxFc3RpbWF0ZSIsInJvdW5kIiwiYm9keVBhcnRzSW52b2x2ZWQiLCJTZXQiLCJwcmltYXJ5Qm9keVBhcnRzIiwiYm9keVBhcnQiLCJhZGQiLCJ1cHBlckJvZHlQYXJ0cyIsIkNoZXN0IiwiU2hvdWxkZXJzIiwiQmljZXBzIiwiVHJpY2VwcyIsIlRyYXBzIiwiTGF0cyIsIkZvcmVhcm1zIiwibG93ZXJCb2R5UGFydHMiLCJIYW1zdHJpbmdzIiwiR2x1dGVzIiwiUXVhZHJpY2VwcyIsIkNhbHZlcyIsImNvcmVQYXJ0cyIsIkFicyIsIkxvd2VyYmFjayIsImhhc0NvbW1vbkVsZW1lbnRzIiwic2V0MSIsInNldDIiLCJBcnJheSIsImZyb20iLCJzb21lIiwiaXRlbSIsImhhcyIsImhhc1VwcGVyQm9keSIsImhhc0xvd2VyQm9keSIsImhhc0NvcmUiLCJ0b0RpY3Rpb25hcnkiLCJ3b3Jrb3V0IiwiV29ya291dFN1bW1hcnkiLCJ3b3Jrb3V0SWQiLCJtYXAiLCJleCIsImJvZHlQYXJ0cyIsInNlY29uZGFyeUJvZHlQYXJ0cyIsIndvcmtvdXRUaXRsZSIsImNhbG9yaWVzQnVybmVkIiwiZXhlcmNpc2VzQ29tcGxldGVkIiwiYWlJbnNpZ2h0IiwicmVjb21tZW5kYXRpb25zIiwiZ2lmVVJMcyIsInJlY29tbWVuZGVkV29yayIsIkRhdGUiLCJjb21wbGV0ZWRBdCIsIlN3ZWF0bGlzdFR5cGUiLCJSZWZlcnJhbENoYWluIiwib3JpZ2luYWxIb3N0SWQiLCJzaGFyZWRCeSIsImZyb21GaXJlc3RvcmUiLCJTd2VhdGxpc3RDb2xsZWN0aW9uIiwic3VidGl0bGUiLCJDaGFsbGVuZ2UiLCJ1bmRlZmluZWQiLCJzd2VhdGxpc3RJZHMiLCJzd2VhdGxpc3RBdXRob3JJZCIsInN3ZWF0bGlzdE5hbWUiLCJpc0FycmF5Iiwib3duZXJJZCIsInByaXZhY3kiLCJwYXJ0aWNpcGFudHMiLCJwYXJ0aWNpcGFudCIsInRvUkVTVERpY3Rpb25hcnkiLCJmaWVsZHMiLCJzdHJpbmdWYWx1ZSIsImFycmF5VmFsdWUiLCJ2YWx1ZXMiLCJvd25lciIsIm1hcFZhbHVlIiwiaW50ZWdlclZhbHVlIiwiZG91YmxlVmFsdWUiLCJnZXRUaW1lIiwiaXNQdWJsaXNoZWQiLCJzdGF0dXMiLCJQcm9maWxlSW1hZ2UiLCJwcm9maWxlSW1hZ2VVUkwiLCJ0aHVtYm5haWxVUkwiLCJVc2VyTG9jYXRpb24iLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsIlB1bHNlUG9pbnRzIiwiYmFzZUNvbXBsZXRpb24iLCJmaXJzdENvbXBsZXRpb24iLCJzdHJlYWtCb251cyIsImNoZWNrSW5Cb251cyIsImVmZm9ydFJhdGluZyIsImNoYXRQYXJ0aWNpcGF0aW9uIiwibG9jYXRpb25DaGVja2luIiwiY29udGVudEVuZ2FnZW1lbnQiLCJlbmNvdXJhZ2VtZW50U2VudCIsImVuY291cmFnZW1lbnRSZWNlaXZlZCIsIlVzZXJDaGFsbGVuZ2UiLCJjaGFsbGVuZ2VJZCIsInVzZXJJZCIsInVzZXJuYW1lIiwicHJvZmlsZUltYWdlIiwicHJvZ3Jlc3MiLCJyZWZlcnJhbENoYWlucyIsImNvbXBsZXRlZFdvcmtvdXRzIiwiY3ciLCJsb2NhdGlvbiIsImNpdHkiLCJjb3VudHJ5IiwidGltZXpvbmUiLCJqb2luRGF0ZSIsInB1bHNlUG9pbnRzIiwiY3VycmVudFN0cmVhayIsImVuY291cmFnZWRVc2VycyIsImVuY291cmFnZWRCeVVzZXJzIiwiY2hlY2tJbnMiLCJkIiwiZGF0ZSIsIkNoYWxsZW5nZVN0YXR1cyIsIkludHJvVmlkZW8iLCJ2aWRlb1VybCIsInN0YXJ0RGF0ZSIsImVuZERhdGUiLCJpbnRyb1ZpZGVvcyIsInZpZGVvIiwiaW50cm9WaWRlb1VSTCIsImR1cmF0aW9uSW5EYXlzIiwiY2FsY3VsYXRlRHVyYXRpb25JbkRheXMiLCJzdGFydCIsInZhbHVlT2YiLCJlbmQiLCJpc05hTiIsIkVycm9yIiwiZHVyYXRpb25Jbk1pbGxpc2Vjb25kcyIsImNlaWwiLCJ0b0ZpcmVzdG9yZU9iamVjdCIsIm9iaiIsInBsYWluT2JqZWN0Iiwia2V5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/api/firebase/workout/types.ts\n"));

/***/ })

});
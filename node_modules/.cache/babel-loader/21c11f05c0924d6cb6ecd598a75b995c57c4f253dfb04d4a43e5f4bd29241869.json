{"ast":null,"code":"var _jsxFileName = \"/Users/tre/Documents/GitHub/QuickLifts-web/src/components/ExerciseGrid.tsx\";\n// ExerciseGrid.tsx\nimport React from 'react';\nimport VideoCard from './VideoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseGrid = ({\n  userVideos,\n  onSelectVideo\n}) => {\n  const seenGifUrls = new Set();\n  const filteredVideos = userVideos.sort((a, b) => a.createdAt - b.createdAt).filter(exercise => {\n    var _exercise$videos$;\n    const gifUrl = (_exercise$videos$ = exercise.videos[0]) === null || _exercise$videos$ === void 0 ? void 0 : _exercise$videos$.gifURL;\n    if (seenGifUrls.has(gifUrl || '')) {\n      return false;\n    }\n    seenGifUrls.add(gifUrl || '');\n    return true;\n  });\n  if (filteredVideos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-12 text-gray-400\",\n      children: \"No exercises performed yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: filteredVideos.map(exercise => {\n        var _exercise$videos$2;\n        return /*#__PURE__*/_jsxDEV(VideoCard, {\n          gifUrl: (_exercise$videos$2 = exercise.videos[0]) === null || _exercise$videos$2 === void 0 ? void 0 : _exercise$videos$2.gifURL,\n          exerciseName: exercise.name,\n          onClick: () => onSelectVideo(exercise)\n        }, exercise.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = ExerciseGrid;\nexport default ExerciseGrid;\nvar _c;\n$RefreshReg$(_c, \"ExerciseGrid\");","map":{"version":3,"names":["React","VideoCard","jsxDEV","_jsxDEV","ExerciseGrid","userVideos","onSelectVideo","seenGifUrls","Set","filteredVideos","sort","a","b","createdAt","filter","exercise","_exercise$videos$","gifUrl","videos","gifURL","has","add","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_exercise$videos$2","exerciseName","name","onClick","id","_c","$RefreshReg$"],"sources":["/Users/tre/Documents/GitHub/QuickLifts-web/src/components/ExerciseGrid.tsx"],"sourcesContent":["// ExerciseGrid.tsx\nimport React from 'react';\nimport { Exercise } from '../types/Exercise';\nimport VideoCard from './VideoCard';\n\ninterface ExerciseGridProps {\n  userVideos: Exercise[];\n  onSelectVideo: (exercise: Exercise) => void;\n}\n\nconst ExerciseGrid: React.FC<ExerciseGridProps> = ({ userVideos, onSelectVideo }) => {\n  const seenGifUrls = new Set<string>();\n\n  const filteredVideos = userVideos\n    .sort((a, b) => a.createdAt - b.createdAt)\n    .filter(exercise => {\n      const gifUrl = exercise.videos[0]?.gifURL;\n      if (seenGifUrls.has(gifUrl || '')) {\n        return false;\n      }\n      seenGifUrls.add(gifUrl || '');\n      return true;\n    });\n\n  if (filteredVideos.length === 0) {\n    return (\n      <div className=\"text-center py-12 text-gray-400\">\n        No exercises performed yet\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"grid grid-cols-3 gap-4\">\n        {filteredVideos.map((exercise) => (\n          <VideoCard\n            key={exercise.id}\n            gifUrl={exercise.videos[0]?.gifURL}\n            exerciseName={exercise.name}\n            onClick={() => onSelectVideo(exercise)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseGrid;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpC,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EACnF,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAS,CAAC;EAErC,MAAMC,cAAc,GAAGJ,UAAU,CAC9BK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,SAAS,GAAGD,CAAC,CAACC,SAAS,CAAC,CACzCC,MAAM,CAACC,QAAQ,IAAI;IAAA,IAAAC,iBAAA;IAClB,MAAMC,MAAM,IAAAD,iBAAA,GAAGD,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAC,cAAAF,iBAAA,uBAAlBA,iBAAA,CAAoBG,MAAM;IACzC,IAAIZ,WAAW,CAACa,GAAG,CAACH,MAAM,IAAI,EAAE,CAAC,EAAE;MACjC,OAAO,KAAK;IACd;IACAV,WAAW,CAACc,GAAG,CAACJ,MAAM,IAAI,EAAE,CAAC;IAC7B,OAAO,IAAI;EACb,CAAC,CAAC;EAEJ,IAAIR,cAAc,CAACa,MAAM,KAAK,CAAC,EAAE;IAC/B,oBACEnB,OAAA;MAAKoB,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAAC;IAEjD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,oBACEzB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBrB,OAAA;MAAKoB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCf,cAAc,CAACoB,GAAG,CAAEd,QAAQ;QAAA,IAAAe,kBAAA;QAAA,oBAC3B3B,OAAA,CAACF,SAAS;UAERgB,MAAM,GAAAa,kBAAA,GAAEf,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAC,cAAAY,kBAAA,uBAAlBA,kBAAA,CAAoBX,MAAO;UACnCY,YAAY,EAAEhB,QAAQ,CAACiB,IAAK;UAC5BC,OAAO,EAAEA,CAAA,KAAM3B,aAAa,CAACS,QAAQ;QAAE,GAHlCA,QAAQ,CAACmB,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIjB,CAAC;MAAA,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GApCI/B,YAAyC;AAsC/C,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
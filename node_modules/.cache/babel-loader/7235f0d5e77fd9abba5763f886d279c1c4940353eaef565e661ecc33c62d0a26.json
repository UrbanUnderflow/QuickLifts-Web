{"ast":null,"code":"var _jsxFileName = \"/Users/tre/Documents/GitHub/QuickLifts-web/src/components/SequentialVideoPlayerView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SequentialVideoPlayerView = ({\n  videoURLs,\n  isMuted = true,\n  ratio = 'cover'\n}) => {\n  _s();\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    const playNextVideo = () => {\n      setCurrentVideoIndex(prevIndex => (prevIndex + 1) % videoURLs.length);\n    };\n    const handleCanPlay = () => {\n      video.play().catch(error => {\n        if (error.name !== \"AbortError\") {\n          console.error(\"Error playing video:\", error);\n        }\n      });\n    };\n    video.addEventListener('ended', playNextVideo);\n    video.addEventListener('canplay', handleCanPlay);\n    return () => {\n      video.removeEventListener('ended', playNextVideo);\n      video.removeEventListener('canplay', handleCanPlay);\n    };\n  }, [videoURLs]);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.load();\n    }\n  }, [currentVideoIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: videoURLs[currentVideoIndex],\n      className: `absolute inset-0 w-full h-full ${ratio === 'cover' ? 'object-cover' : 'object-contain'}`,\n      muted: isMuted,\n      playsInline: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SequentialVideoPlayerView, \"eknqpSbemxi/l2kV3sQV+A7rx/o=\");\n_c = SequentialVideoPlayerView;\nexport default SequentialVideoPlayerView;\nvar _c;\n$RefreshReg$(_c, \"SequentialVideoPlayerView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","SequentialVideoPlayerView","videoURLs","isMuted","ratio","_s","currentVideoIndex","setCurrentVideoIndex","videoRef","video","current","playNextVideo","prevIndex","length","handleCanPlay","play","catch","error","name","console","addEventListener","removeEventListener","load","className","children","ref","src","muted","playsInline","loop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tre/Documents/GitHub/QuickLifts-web/src/components/SequentialVideoPlayerView.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\ninterface SequentialVideoPlayerProps {\n  videoURLs: string[];\n  isMuted?: boolean;\n  ratio?: 'cover' | 'contain';\n}\n\nconst SequentialVideoPlayerView: React.FC<SequentialVideoPlayerProps> = ({ \n  videoURLs, \n  isMuted = true, \n  ratio = 'cover' \n}) => {\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    const playNextVideo = () => {\n      setCurrentVideoIndex((prevIndex) => (prevIndex + 1) % videoURLs.length);\n    };\n\n    const handleCanPlay = () => {\n      video.play().catch(error => {\n        if (error.name !== \"AbortError\") {\n          console.error(\"Error playing video:\", error);\n        }\n      });\n    };\n\n    video.addEventListener('ended', playNextVideo);\n    video.addEventListener('canplay', handleCanPlay);\n\n    return () => {\n      video.removeEventListener('ended', playNextVideo);\n      video.removeEventListener('canplay', handleCanPlay);\n    };\n  }, [videoURLs]);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.load();\n    }\n  }, [currentVideoIndex]);\n\n  return (\n    <div className=\"relative w-full h-full bg-black\">\n      <video\n        ref={videoRef}\n        src={videoURLs[currentVideoIndex]}\n        className={`absolute inset-0 w-full h-full ${ratio === 'cover' ? 'object-cover' : 'object-contain'}`}\n        muted={isMuted}\n        playsInline\n        loop\n      />\n    </div>\n  );\n};\n\nexport default SequentialVideoPlayerView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ3D,MAAMC,yBAA+D,GAAGA,CAAC;EACvEC,SAAS;EACTC,OAAO,GAAG,IAAI;EACdC,KAAK,GAAG;AACV,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMY,QAAQ,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,IAAI,CAACD,KAAK,EAAE;IAEZ,MAAME,aAAa,GAAGA,CAAA,KAAM;MAC1BJ,oBAAoB,CAAEK,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIV,SAAS,CAACW,MAAM,CAAC;IACzE,CAAC;IAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BL,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QAC1B,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;UAC/BC,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;MACF,CAAC,CAAC;IACJ,CAAC;IAEDR,KAAK,CAACW,gBAAgB,CAAC,OAAO,EAAET,aAAa,CAAC;IAC9CF,KAAK,CAACW,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IAEhD,OAAO,MAAM;MACXL,KAAK,CAACY,mBAAmB,CAAC,OAAO,EAAEV,aAAa,CAAC;MACjDF,KAAK,CAACY,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEfL,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,IAAID,KAAK,EAAE;MACTA,KAAK,CAACa,IAAI,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAAChB,iBAAiB,CAAC,CAAC;EAEvB,oBACEN,OAAA;IAAKuB,SAAS,EAAC,iCAAiC;IAAAC,QAAA,eAC9CxB,OAAA;MACEyB,GAAG,EAAEjB,QAAS;MACdkB,GAAG,EAAExB,SAAS,CAACI,iBAAiB,CAAE;MAClCiB,SAAS,EAAG,kCAAiCnB,KAAK,KAAK,OAAO,GAAG,cAAc,GAAG,gBAAiB,EAAE;MACrGuB,KAAK,EAAExB,OAAQ;MACfyB,WAAW;MACXC,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CApDIJ,yBAA+D;AAAAiC,EAAA,GAA/DjC,yBAA+D;AAsDrE,eAAeA,yBAAyB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}